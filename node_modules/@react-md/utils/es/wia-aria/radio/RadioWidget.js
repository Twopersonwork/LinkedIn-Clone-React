var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from "react";
/**
 * This component offers no styles and probably shouldn't be used externally
 * since it is just rendered by the `RadioGroup` component.
 *
 * @remarks \@since 2.7.0
 */
export var RadioWidget = forwardRef(function RadioGroupRadio(_a, ref) {
    var checked = _a.checked, children = _a.children, props = __rest(_a, ["checked", "children"]);
    return (React.createElement("span", __assign({}, props, { "aria-checked": checked, ref: ref, role: "radio" }), children));
});
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        RadioWidget.propTypes = {
            id: PropTypes.string.isRequired,
            checked: PropTypes.bool.isRequired,
            tabIndex: PropTypes.oneOf([0, -1]).isRequired,
        };
    }
    catch (e) { }
}
//# sourceMappingURL=RadioWidget.js.map