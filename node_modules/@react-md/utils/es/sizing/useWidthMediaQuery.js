import { useMemo } from "react";
import { useMediaQuery } from "./useMediaQuery";
/**
 * This is a small helper that will create a media query block based on the
 * provided width value.
 */
export var toWidthPart = function (v, prefix) {
    var type = typeof v;
    if (type === "undefined") {
        return "";
    }
    var value = type === "number" ? v + "px" : v;
    return "(" + prefix + "-width: " + value + ")";
};
/**
 * This is a simple hoo that will create a memoized media query string with the
 * provided min anx max values.
 *
 * @param min - An optional min value to use
 * @param max - An optional max value to use
 * @returns a boolean if the current media query is a match.
 */
export function useWidthMediaQuery(_a) {
    var min = _a.min, max = _a.max;
    var query = useMemo(function () {
        var parts = [toWidthPart(min, "min"), toWidthPart(max, "max")]
            .filter(Boolean)
            .join(" and ");
        return "screen and " + parts;
    }, [min, max]);
    return useMediaQuery(query);
}
//# sourceMappingURL=useWidthMediaQuery.js.map