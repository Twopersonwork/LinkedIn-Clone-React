"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useHoverModeContext = exports.HoverModeContextProvider = void 0;
var react_1 = require("react");
var constants_1 = require("./constants");
/** @internal */
var noop = function () {
    // do nothing
};
/** @internal */
var context = react_1.createContext({
    visibleInTime: constants_1.DEFAULT_HOVER_MODE_VISIBLE_IN_TIME,
    enableHoverMode: noop,
    disableHoverMode: noop,
    startDisableTimer: noop,
});
/**
 * @internal
 * @remarks \@since 2.8.0
 */
exports.HoverModeContextProvider = context.Provider;
/**
 * Gets the {@link HoverModeContext} which allows you implement hover mode
 * functionality for any component. This is mostly an internal hook since
 * everything you need will be available in the {@link useHoverMode} hook.
 *
 * @internal
 * @remarks \@since 2.8.0
 * @returns The {@link HoverModeContext}
 */
function useHoverModeContext() {
    return react_1.useContext(context);
}
exports.useHoverModeContext = useHoverModeContext;
//# sourceMappingURL=useHoverModeContext.js.map