import { MutableRefObject } from "react";
declare type CheckableElement = HTMLElement | null;
declare type CheckableThing = CheckableElement | MutableRefObject<CheckableElement>;
/**
 * Checks if a container element contains another element as a child while
 * allowing for nulls or a MutableRefObject of HTMLElement or null. Mostly just
 * a convenience function that should be used internally.
 *
 * @param container - The element to use as a container element. This can be an
 * HTMLElement, null, or a MutableRefObject of HTMLElement or null.
 * @param child - The element that might be a child of the container
 * element. This can be an HTMLElement, null, or a MutableRefObject of
 * HTMLElement or null.
 * @returns True if the container contains the child element and both the
 * container and child are valid HTMLElements (not null).
 * @internal
 */
export declare function containsElement(container: CheckableThing, child: CheckableThing): boolean;
export {};
