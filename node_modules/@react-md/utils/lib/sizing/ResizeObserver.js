"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResizeObserver = void 0;
var react_1 = __importStar(require("react"));
var useResizeObserver_1 = require("./useResizeObserver");
/**
 * The resize observer is used to track the size changes for a single element in
 * a page. This is a bit different than a normal `ResizeListener` since it does
 * not rely on entire page size changes.
 *
 * @deprecated 2.3.0 You should really use the `useResizeObserver` hook instead
 * since it offers a lot more flexibility and functionality than this component.
 */
function ResizeObserver(_a) {
    var _b = _a.disableHeight, disableHeight = _b === void 0 ? false : _b, _c = _a.disableWidth, disableWidth = _c === void 0 ? false : _c, className = _a.className, _d = _a.component, Component = _d === void 0 ? "span" : _d, target = _a.target, onResize = _a.onResize;
    var _e = react_1.useState(null), element = _e[0], setElement = _e[1];
    useResizeObserver_1.useResizeObserver({
        disableHeight: disableHeight,
        disableWidth: disableWidth,
        target: target || element,
        onResize: onResize,
    });
    var ref = react_1.useCallback(function (instance) {
        if (!instance) {
            setElement(null);
            return;
        }
        setElement(instance.parentElement);
    }, []);
    if (target === null || target) {
        return null;
    }
    return react_1.default.createElement(Component, { className: className, "aria-hidden": "true", ref: ref });
}
exports.ResizeObserver = ResizeObserver;
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        ResizeObserver.propTypes = {
            disableHeight: PropTypes.bool,
            disableWidth: PropTypes.bool,
            className: PropTypes.string,
            component: PropTypes.oneOfType([
                // workaround for Typescript since PropTypes.string throws WeakValidationMap error
                // but this component only supports string components
                PropTypes.string,
            ]),
            target: PropTypes.oneOfType([
                PropTypes.string,
                PropTypes.func,
                PropTypes.object,
            ]),
        };
    }
    catch (e) { }
}
//# sourceMappingURL=ResizeObserver.js.map