import React, { HTMLAttributes, ReactNode } from "react";
export declare type BadgeTheme = "primary" | "secondary" | "default" | "clear";
export interface BadgeProps extends HTMLAttributes<HTMLSpanElement> {
    /**
     * The id for the badge. This is required for a11y since the element that the
     * badge is fixed to should include this id in the `aria-describedby` list.
     */
    id: string;
    /**
     * The theme to use for the badge.
     */
    theme?: BadgeTheme;
    /**
     * The children to display in the badge. If the children is `0` or `null`, the
     * default behavior is to not render the badge.
     */
    children?: ReactNode;
    /**
     * Boolean if the badge should still display if the children is set to `0`, or
     * `null`.  The default behavior is to render null for these cases since it
     * isn't extremely helpful to display an "empty" badge.
     */
    disableNullOnZero?: boolean;
}
/**
 * This component is generally used for displaying notifications with a count
 * relative to another element with the `BadgeContainer` component. However, it
 * can be used by itself to display any subpplementary content if needed.
 */
export declare const Badge: React.ForwardRefExoticComponent<BadgeProps & React.RefAttributes<HTMLSpanElement>>;
