"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SkipToMainContent = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var utils_1 = require("@react-md/utils");
var Link_1 = require("./Link");
var block = utils_1.bem("rmd-link-skip");
/**
 * This component allows you to create a screen-reader only/keyboard focusable
 * only link that allows a user to skip to the main content of the page. This is
 * extremely useful when you have a lot of navigation items that must be tabbed
 * through before the main content can be focused and this component should
 * normally be the first focusable element on your page.
 */
exports.SkipToMainContent = react_1.forwardRef(function SkipToMainContent(_a, ref) {
    var _b = _a.id, id = _b === void 0 ? "skip-to-main-content" : _b, _c = _a.children, children = _c === void 0 ? "Skip to main content" : _c, _d = _a.unstyled, unstyled = _d === void 0 ? false : _d, mainId = _a.mainId, className = _a.className, onClick = _a.onClick, props = __rest(_a, ["id", "children", "unstyled", "mainId", "className", "onClick"]);
    var handleClick = react_1.useCallback(function (event) {
        if (onClick) {
            onClick(event);
        }
        event.preventDefault();
        var main = document.getElementById(mainId);
        if (!main) {
            if (process.env.NODE_ENV !== "production") {
                /* eslint-disable no-console */
                var foundMain = document.querySelector("main");
                var foundMainId = foundMain && foundMain.id;
                console.error("Unable to find a main element to focus with an id of: \"" + mainId + "\".");
                if (foundMainId) {
                    console.error("However, a \"<main>\" element was found with an id: \"" + foundMainId + "\". Should this be the \"mainId\" prop for the \"SkipToMainContent\" component?");
                }
            }
            return;
        }
        main.focus();
    }, [mainId, onClick]);
    return (react_1.default.createElement(Link_1.Link, __assign({}, props, { id: id, ref: ref, href: "#" + mainId, onClick: handleClick, className: classnames_1.default(block({ styled: !unstyled }), className) }), children));
});
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        exports.SkipToMainContent.propTypes = {
            id: PropTypes.string,
            mainId: PropTypes.string.isRequired,
            onClick: PropTypes.func,
            className: PropTypes.string,
            children: PropTypes.node,
            unstyled: PropTypes.bool,
        };
    }
    catch (e) { }
}
//# sourceMappingURL=SkipToMainContent.js.map