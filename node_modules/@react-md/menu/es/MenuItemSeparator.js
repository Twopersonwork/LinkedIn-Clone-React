var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from "react";
import { Divider, VerticalDivider, } from "@react-md/divider";
import { useOrientation } from "./Orientation";
export var MenuItemSeparator = forwardRef(function MenuItemSeparator(_a, ref) {
    var ariaOrientation = _a["aria-orientation"], maxHeight = _a.maxHeight, props = __rest(_a, ["aria-orientation", "maxHeight"]);
    var menuOrientation = useOrientation();
    if (ariaOrientation === "vertical" ||
        (!ariaOrientation && menuOrientation === "horizontal")) {
        return (React.createElement(VerticalDivider, __assign({}, props, { ref: ref, "aria-orientation": "vertical", maxHeight: maxHeight, role: "separator" })));
    }
    return React.createElement(Divider, __assign({}, props, { ref: ref, role: "separator" }));
});
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        MenuItemSeparator.propTypes = {
            "aria-orientation": PropTypes.oneOf(["horizontal", "vertical"]),
            className: PropTypes.string,
            maxHeight: PropTypes.number,
        };
    }
    catch (e) { }
}
//# sourceMappingURL=MenuItemSeparator.js.map