import React, { useCallback } from "react";
import cn from "classnames";
import CSSTransition from "react-transition-group/CSSTransition";
import { useRefCache } from "@react-md/utils";
import { useStatesConfigContext } from "../StatesConfig";
export function Ripple(_a) {
    var className = _a.className, propClassNames = _a.classNames, propTimeout = _a.timeout, ripple = _a.ripple, entered = _a.entered, exited = _a.exited;
    var exiting = ripple.exiting, style = ripple.style;
    var timeout = propTimeout;
    var classNames = propClassNames;
    var context = useStatesConfigContext();
    if (typeof timeout === "undefined" || typeof classNames === "undefined") {
        if (typeof timeout === "undefined") {
            timeout = context.rippleTimeout;
        }
        if (typeof classNames === "undefined") {
            classNames = context.rippleClassNames;
        }
    }
    var ref = useRefCache({ ripple: ripple, entered: entered, exited: exited });
    var onEntered = useCallback(function () {
        var _a = ref.current, ripple = _a.ripple, entered = _a.entered;
        entered(ripple);
        // disabled since useRefCache
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    var onExited = useCallback(function () {
        var _a = ref.current, ripple = _a.ripple, exited = _a.exited;
        exited(ripple);
        // disabled since useRefCache
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    return (React.createElement(CSSTransition, { in: !exiting, appear: true, classNames: classNames, timeout: timeout, onEntered: onEntered, onExited: onExited },
        React.createElement("span", { style: style, className: cn("rmd-ripple", className) })));
}
//# sourceMappingURL=Ripple.js.map