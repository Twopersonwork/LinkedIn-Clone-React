import { MergableRippleHandlers } from "./ripples/types";
interface PressedStatesOptions<E extends HTMLElement = HTMLElement> {
    handlers?: MergableRippleHandlers<E>;
    disableSpacebarClick?: boolean;
}
interface ReturnValue<E extends HTMLElement> {
    pressed: boolean;
    handlers: MergableRippleHandlers<E>;
}
/**
 * This is a different version of the useRippleStates that will allow you to
 * know when a component is being pressed by the user. This is really just a
 * fallback for when the ripples are disabled.
 *
 * This will return an object containing the current pressed state of the
 * element as well as all the merged eventHandlers required to trigger the
 * different states.
 *
 * NOTE: Unlike the ripple effect, this pressed states will not be triggered
 * from a programmatic click event.
 */
export declare function usePressedStates<E extends HTMLElement = HTMLElement>({ handlers, disableSpacebarClick, }?: PressedStatesOptions<E>): ReturnValue<E>;
export {};
