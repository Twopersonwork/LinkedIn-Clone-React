import { ReactElement, ReactNode } from "react";
import { TextIconSpacingProps } from "@react-md/icon";
export declare type ListItemAddonPosition = "top" | "middle" | "bottom";
export declare type ListItemAddonType = "icon" | "avatar" | "media" | "large-media";
export interface ListItemAddonProps extends Omit<TextIconSpacingProps, "icon" | "iconAfter" | "forceIconWrap"> {
    /**
     * The addon that should be rendered.
     */
    addon: ReactNode | ReactElement;
    /**
     * Boolean if the addon should appear after the `children`.
     */
    addonAfter?: boolean;
    /**
     * The addon type that is used to adjust the spacing styles.
     */
    type?: ListItemAddonType;
    /**
     * Boolean if the addon should be forced into a `<span>` with the class names
     * applied instead of attempting to clone into the provided icon. If the
     * `type` is set to `"media"` or `"large-media"`, this will default to `true`.
     */
    forceAddonWrap?: boolean;
    /**
     * The vertical position to use for the addon.
     */
    position?: ListItemAddonPosition;
}
/**
 * The `ListItemAddon` is used to create an addon to the left or right of the
 * text/children of a `ListItem`.
 */
export declare function ListItemAddon({ className, children, addon, addonAfter, type, position, forceAddonWrap, ...props }: ListItemAddonProps): ReactElement;
export declare namespace ListItemAddon {
    var propTypes: {
        className: any;
        children: any;
        addon: any;
        addonAfter: any;
        type: any;
        position: any;
        forceAddonWrap: any;
    };
}
