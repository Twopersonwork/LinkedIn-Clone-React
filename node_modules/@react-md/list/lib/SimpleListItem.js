"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SimpleListItem = void 0;
/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/role-supports-aria-props */
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var utils_1 = require("@react-md/utils");
var getListItemHeight_1 = require("./getListItemHeight");
var ListItemChildren_1 = require("./ListItemChildren");
var block = utils_1.bem("rmd-list-item");
/**
 * The `SimpleListItem` component is used to create a non-clickable item within
 * a `List`. This is really just useful since it allows for the `ListItem`
 * styling behavior of left and right icons, avatars, and media.
 *
 * Note: Even though this component exists, it is recommended to use the
 * `ListItemChildren` component instead if you want the "addon" styling/behavior
 * since screen readers read `li` items within lists differently.
 */
exports.SimpleListItem = react_1.forwardRef(function SimpleListItem(_a, ref) {
    var _b;
    var className = _a.className, textClassName = _a.textClassName, secondaryTextClassName = _a.secondaryTextClassName, textChildren = _a.textChildren, primaryText = _a.primaryText, secondaryText = _a.secondaryText, leftAddon = _a.leftAddon, _c = _a.leftAddonType, leftAddonType = _c === void 0 ? "icon" : _c, _d = _a.leftAddonPosition, leftAddonPosition = _d === void 0 ? "middle" : _d, rightAddon = _a.rightAddon, _e = _a.rightAddonType, rightAddonType = _e === void 0 ? "icon" : _e, _f = _a.rightAddonPosition, rightAddonPosition = _f === void 0 ? "middle" : _f, forceAddonWrap = _a.forceAddonWrap, children = _a.children, _g = _a.height, propHeight = _g === void 0 ? "auto" : _g, _h = _a.threeLines, threeLines = _h === void 0 ? false : _h, _j = _a.clickable, clickable = _j === void 0 ? false : _j, onClick = _a.onClick, _k = _a.disabled, disabled = _k === void 0 ? false : _k, _l = _a.disabledOpacity, disabledOpacity = _l === void 0 ? false : _l, props = __rest(_a, ["className", "textClassName", "secondaryTextClassName", "textChildren", "primaryText", "secondaryText", "leftAddon", "leftAddonType", "leftAddonPosition", "rightAddon", "rightAddonType", "rightAddonPosition", "forceAddonWrap", "children", "height", "threeLines", "clickable", "onClick", "disabled", "disabledOpacity"]);
    var height = getListItemHeight_1.getListItemHeight({
        height: propHeight,
        leftAddon: leftAddon,
        leftAddonType: leftAddonType,
        rightAddon: rightAddon,
        rightAddonType: rightAddonType,
        secondaryText: secondaryText,
    });
    var ariaDisabled = props["aria-disabled"];
    var isDisabled = disabled || ariaDisabled === "true" || ariaDisabled === true;
    return (react_1.default.createElement("li", __assign({}, props, { "aria-disabled": isDisabled || undefined, ref: ref, className: classnames_1.default(block((_b = {},
            _b[height] = height !== "auto" && height !== "normal",
            _b["three-lines"] = threeLines,
            _b.clickable = clickable,
            _b.disabled = isDisabled,
            _b["disabled-color"] = isDisabled && !disabledOpacity,
            _b["disabled-opacity"] = isDisabled && disabledOpacity,
            _b)), className), onClick: isDisabled ? undefined : onClick }),
        react_1.default.createElement(ListItemChildren_1.ListItemChildren, { textClassName: textClassName, secondaryTextClassName: secondaryTextClassName, textChildren: textChildren, primaryText: primaryText, secondaryText: secondaryText, leftAddon: leftAddon, leftAddonType: leftAddonType, leftAddonPosition: leftAddonPosition, rightAddon: rightAddon, rightAddonType: rightAddonType, rightAddonPosition: rightAddonPosition, forceAddonWrap: forceAddonWrap }, children)));
});
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        exports.SimpleListItem.propTypes = {
            "aria-disabled": PropTypes.oneOfType([
                PropTypes.bool,
                PropTypes.oneOf(["true", "false"]),
            ]),
            className: PropTypes.string,
            disabled: PropTypes.bool,
            clickable: PropTypes.bool,
            threeLines: PropTypes.bool,
            textClassName: PropTypes.string,
            secondaryTextClassName: PropTypes.string,
            textChildren: PropTypes.bool,
            primaryText: PropTypes.node,
            secondaryText: PropTypes.node,
            height: PropTypes.oneOf([
                "auto",
                "normal",
                "medium",
                "large",
                "extra-large",
            ]),
            leftAddon: PropTypes.node,
            leftAddonType: PropTypes.oneOf([
                "icon",
                "avatar",
                "media",
                "large-media",
            ]),
            leftAddonPosition: PropTypes.oneOf(["top", "middle", "bottom"]),
            rightAddon: PropTypes.node,
            rightAddonType: PropTypes.oneOf([
                "icon",
                "avatar",
                "media",
                "large-media",
            ]),
            rightAddonPosition: PropTypes.oneOf(["top", "middle", "bottom"]),
            forceAddonWrap: PropTypes.bool,
            children: PropTypes.node,
            onClick: PropTypes.func,
        };
    }
    catch (e) { }
}
//# sourceMappingURL=SimpleListItem.js.map