////
/// @group list
////

@import '@react-md/avatar/dist/scss/functions';
@import '@react-md/divider/dist/scss/mixins';
@import '@react-md/icon/dist/scss/variables';
@import '@react-md/icon/dist/scss/mixins';
@import '@react-md/states/dist/scss/mixins';
@import '@react-md/theme/dist/scss/helpers';
@import '@react-md/theme/dist/scss/mixins';
@import '@react-md/typography/dist/scss/mixins';
@import '@react-md/utils/dist/scss/mixins';
@import './variables';
@import './functions';

/// Creates the styles for one of the list's theme values. This is mostly going
/// to be an internal helper mixin util.
///
/// @param {String} property - The property to set a `rmd-list-theme-values`
/// value to.
/// @param {String} theme-style - One of the keys of `rmd-list-theme-values` to
/// extract a value from.
/// @param {Color|String|Number} fallback [null] - A fallback value to use if
/// the css variable isn't set somehow. This will default to automatically
/// retrieving the default value from the `rmd-list-theme-values` map when
/// `null`.
@mixin rmd-list-theme($property, $theme-style: $property, $fallback: null) {
  @include rmd-theme-apply-rmd-var(
    $property,
    $theme-style,
    $rmd-list-theme-values,
    list
  );
}

/// Updates one of the list's theme variables with the new value for the section
/// of your app.
///
/// @param {String} theme-style - The list theme style type to update. This
/// should be one of the `$rmd-list-theme-values` keys.
/// @param {Color|String|Number} value - The new value to use.
@mixin rmd-list-theme-update-var($theme-style, $value) {
  @include rmd-theme-update-rmd-var(
    $value,
    $theme-style,
    $rmd-list-theme-values,
    list
  );
}

/// A "general" use mixin that will remove the default browser styles for a list
/// and apply the optionally provided margin and padding instead.
///
/// @param {String|Number} padding [0] - The amount of padding to apply.
/// @param {String|Number} margin [0] - The amount of margin to apply.
@mixin rmd-list-unstyled($padding: 0, $margin: 0) {
  list-style-type: none;
  margin: $margin;
  padding: $padding;
}

/// Updates all the css variables for the list package to use a dense spec.
///
/// @example scss - Example Usage
///   :root {
///     @include rmd-list-dense-theme;
///   }
@mixin rmd-list-dense-theme {
  @include rmd-list-theme-update-var(
    font-size,
    rmd-list-theme-var(dense-font-size)
  );
  @include rmd-list-theme-update-var(
    vertical-padding,
    rmd-list-theme-var(dense-vertical-padding)
  );
  @include rmd-list-theme-update-var(
    horizontal-padding,
    rmd-list-theme-var(dense-horizontal-padding)
  );
}

/// Creates the styles for a list in react-md.
@mixin rmd-list {
  @include rmd-typography(subtitle-1);
  @include rmd-divider-theme-update-var(
    inset,
    rmd-list-theme-var(text-keyline)
  );
  @include rmd-list-unstyled(null);
  @include rmd-list-theme(font-size);

  line-height: $rmd-list-line-height;
  padding: rmd-list-theme-var(vertical-padding)
    rmd-list-theme-var(horizontal-padding);

  &--horizontal {
    display: flex;
    flex-wrap: nowrap;
    padding: rmd-list-theme-var(horizontal-padding)
      rmd-list-theme-var(vertical-padding);
  }

  &--dense {
    @include rmd-list-dense-theme;
  }
}

/// The base styles required for a `ListItem`. This propbably won't be used
/// externally.
@mixin rmd-list-item-base {
  @include rmd-list-theme(min-height, item-height);

  align-items: center;
  display: flex;
  padding: rmd-list-theme-var(item-vertical-padding)
    rmd-list-theme-var(item-horizontal-padding);
  position: relative;
}

/// Updates all the list item css variables to apply to dense theme.
///
/// @example scss - Example Usage
///   :root {
///     @include rmd-list-item-dense-theme;
///   }
@mixin rmd-list-item-dense-theme {
  @include rmd-list-theme-update-var(
    item-height,
    rmd-list-theme-var(dense-item-height)
  );
  @include rmd-list-theme-update-var(
    item-medium-height,
    rmd-list-theme-var(dense-item-medium-height)
  );
  @include rmd-list-theme-update-var(
    item-large-height,
    rmd-list-theme-var(dense-item-large-height)
  );
  @include rmd-list-theme-update-var(
    item-extra-large-height,
    rmd-list-theme-var(dense-item-extra-large-height)
  );
  @include rmd-list-theme-update-var(
    item-three-line-height,
    rmd-list-theme-var(dense-item-three-line-height)
  );
  @include rmd-list-theme-update-var(
    item-secondary-three-line-height,
    rmd-list-theme-var(dense-item-secondary-three-line-height)
  );
}

/// Updates the spacing for a list item addon by updated the `text-spacing` from
/// the `@react-md/icon` package and doing some calculations with the current
/// `text-keyline` within the list.
///
/// This propably shouldn't be used externally.
///
/// @example scss - Example Usage
///   .custom-updater {
///     @include rmd-list-item-addon-spacing(rmd-icon-theme-var(size));
///   }
///
/// @param {String|Number} subtract - The amount that should be subracted
@mixin rmd-list-item-addon-spacing($subtract) {
  $keyline: rmd-list-theme-var(text-keyline);
  $padding: rmd-list-theme-var(item-horizontal-padding);

  @include rmd-icon-theme-update-var(
    text-spacing,
    calc(#{$keyline} - #{$padding} - #{$subtract})
  );
}

/// Creates all the styles for a list item.
@mixin rmd-list-item {
  @include rmd-list-item-base;

  &--clickable {
    @include rmd-utils-hide-focus-outline;
    @include rmd-states-surface;
  }

  &--disabled {
    pointer-events: none;
  }

  &--disabled-color {
    @include rmd-theme(color, text-disabled-on-background);
    @include rmd-theme-update-var(
      text-secondary-on-background,
      rmd-theme-var(text-disabled-on-background)
    );
  }

  &--disabled-opacity {
    opacity: $rmd-list-item-disabled-opacity;
  }

  &--link {
    color: inherit;
    text-decoration: none;
  }

  &--medium {
    @include rmd-list-theme-update-var(
      item-height,
      rmd-list-theme-var(item-medium-height)
    );
  }

  &--large {
    @include rmd-list-theme-update-var(
      item-height,
      rmd-list-theme-var(item-large-height)
    );
  }

  &--extra-large {
    @include rmd-list-theme-update-var(
      item-height,
      rmd-list-theme-var(item-extra-large-height)
    );
  }

  &--three-lines {
    @include rmd-list-theme-update-var(
      item-height,
      rmd-list-theme-var(item-three-line-height)
    );

    .rmd-list-item__text--secondary {
      @include rmd-typography-line-clamp;
      @include rmd-list-theme(max-height, item-secondary-three-line-height);

      line-height: $rmd-list-item-secondary-text-line-height;
      white-space: normal;
    }
  }

  &--dense {
    @include rmd-list-item-dense-theme;
  }

  &__text {
    @include rmd-typography-text-overflow-ellipsis;
    @include rmd-utils-rtl {
      margin-left: auto;
    }

    display: block;
    flex-grow: 1;
    // this is so it overlays the background colors from the interaction states
    z-index: 1;

    &--secondary {
      @include rmd-theme(color, text-secondary-on-background);
    }
  }

  &__addon {
    flex-shrink: 0;

    &--top {
      align-self: flex-start;
    }

    &--bottom {
      align-self: flex-end;
    }

    &--before {
      // this should only be added on the first icon in the list item since it's the only
      // one that should match the "keyline" of the app. The right icon/avatars should
      // have the existing text icon spacing.
      @include rmd-list-item-addon-spacing(rmd-icon-theme-var(size));
    }

    &--avatar-before {
      @include rmd-list-item-addon-spacing(rmd-avatar-theme-var(size));
    }

    &--media {
      @include rmd-icon-theme-update-var(
        text-spacing,
        rmd-list-theme-var(media-spacing)
      );
      @include rmd-list-theme(width, media-size);
    }

    &--media-large {
      @include rmd-list-theme-update-var(
        media-size,
        rmd-list-theme-var(media-large-size)
      );
    }
  }
}

/// Creates the styles for a subheader within a list.
@mixin rmd-list-subheader {
  @include rmd-typography(subtitle-2);
  @include rmd-theme(color, text-secondary-on-background);
  @include rmd-list-item-base;

  &--inset {
    @include rmd-list-theme(padding-left, text-keyline);
    @include rmd-utils-rtl {
      @include rmd-list-theme(padding-left, item-horizontal-padding);
      @include rmd-list-theme(padding-right, text-keyline);
    }
  }
}

/// Creats all the styles for the list package.
@mixin react-md-list {
  @include rmd-theme-create-root-theme($rmd-list-theme-values, list);

  .rmd-list {
    @include rmd-list;
  }

  .rmd-list-item {
    @include rmd-list-item;
  }

  .rmd-list-subheader {
    @include rmd-list-subheader;
  }
}
