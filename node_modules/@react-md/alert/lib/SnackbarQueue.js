"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SnackbarQueue = void 0;
var react_1 = __importStar(require("react"));
var button_1 = require("@react-md/button");
var MessageQueueContext_1 = require("./MessageQueueContext");
var Snackbar_1 = require("./Snackbar");
var Toast_1 = require("./Toast");
function getId(snackbarId, toastId, actionId) {
    if (actionId) {
        return actionId;
    }
    if (toastId) {
        return toastId + "-action";
    }
    return snackbarId + "-action";
}
/**
 * Because the toast renderer is a callback function instead of a React
 * component, it's actually required to create a separate component instance so
 * that the context API can be
 *
 * @internal
 */
function SnackbarQueueT(_a, ref) {
    var queue = _a.queue, onActionClick = _a.onActionClick, props = __rest(_a, ["queue", "onActionClick"]);
    var toast = queue[0];
    var visible = MessageQueueContext_1.useMessageVisibility();
    var _b = MessageQueueContext_1.useMessageQueueActions(), popMessage = _b.popMessage, hideMessage = _b.hideMessage, startTimer = _b.startTimer;
    var content = null;
    if (toast) {
        var snackbarId = props.id;
        var toastId = toast.id;
        var _messageId = toast.messageId, _messagePriority = toast.messagePriority, _c = toast.disableAutohide, disableAutohide = _c === void 0 ? false : _c, _d = toast.disableActionHide, disableActionHide_1 = _d === void 0 ? false : _d, providedAction = toast.action, toastProps = __rest(toast, ["messageId", "messagePriority", "disableAutohide", "disableActionHide", "action"]);
        var action = null;
        if (providedAction) {
            var actionProps_1 = providedAction;
            var onClick = function (event) {
                if (onActionClick) {
                    onActionClick(toast, event);
                }
                if (actionProps_1.onClick) {
                    actionProps_1.onClick(event);
                }
                if (!disableActionHide_1) {
                    hideMessage();
                }
            };
            var t = typeof providedAction;
            if (react_1.isValidElement(providedAction) || t !== "object") {
                action = (react_1.default.createElement(button_1.Button, { id: getId(snackbarId, toastId, undefined), onClick: onClick, theme: "secondary" }, providedAction));
            }
            else {
                action = (react_1.default.createElement(button_1.Button, __assign({ id: getId(snackbarId, toastId, actionProps_1.id), theme: "secondary" }, actionProps_1, { onClick: onClick })));
            }
        }
        content = (react_1.default.createElement(Toast_1.Toast, __assign({}, toastProps, { action: action, visible: visible, onEntered: disableAutohide ? undefined : startTimer, onExited: popMessage })));
    }
    return (react_1.default.createElement(Snackbar_1.Snackbar, __assign({}, props, { ref: ref }), content));
}
exports.SnackbarQueue = react_1.forwardRef(SnackbarQueueT);
//# sourceMappingURL=SnackbarQueue.js.map