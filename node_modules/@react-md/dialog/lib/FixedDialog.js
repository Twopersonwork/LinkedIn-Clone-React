"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FixedDialog = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var transition_1 = require("@react-md/transition");
var utils_1 = require("@react-md/utils");
var Dialog_1 = require("./Dialog");
var DEFAULT_CLASSNAMES = {
    appear: "rmd-dialog--fixed-enter",
    appearActive: "rmd-dialog--fixed-enter-active",
    enter: "rmd-dialog--fixed-enter",
    enterActive: "rmd-dialog--fixed-enter-active",
    exit: "rmd-dialog--fixed-exit",
    exitActive: "rmd-dialog--fixed-exit-active",
};
/**
 * The `FixedDialog` is a wrapper for the `Dialog` component that can be used to
 * be fix itself to another element. Another term for this component might be a
 * "Pop out Dialog".
 */
exports.FixedDialog = react_1.forwardRef(function FixedDialog(_a, ref) {
    var fixedTo = _a.fixedTo, propStyle = _a.style, _b = _a.anchor, anchor = _b === void 0 ? utils_1.TOP_INNER_RIGHT_ANCHOR : _b, options = _a.options, getOptions = _a.getOptions, children = _a.children, className = _a.className, _c = _a.classNames, classNames = _c === void 0 ? DEFAULT_CLASSNAMES : _c, _d = _a.overlayHidden, overlayHidden = _d === void 0 ? true : _d, _e = _a.disableScrollLock, disableScrollLock = _e === void 0 ? true : _e, props = __rest(_a, ["fixedTo", "style", "anchor", "options", "getOptions", "children", "className", "classNames", "overlayHidden", "disableScrollLock"]);
    var onRequestClose = props.onRequestClose;
    var _f = transition_1.useFixedPositioning(__assign(__assign({ style: propStyle, transformOrigin: true }, options), { onScroll: function (_event, _a) {
            var visible = _a.visible;
            if (!visible) {
                onRequestClose();
            }
        }, fixedTo: fixedTo,
        anchor: anchor,
        getOptions: getOptions })), style = _f.style, onEnter = _f.onEnter, onEntering = _f.onEntering, onEntered = _f.onEntered, onExited = _f.onExited;
    return (react_1.default.createElement(Dialog_1.Dialog, __assign({}, props, { ref: ref, type: "custom", style: style, className: classnames_1.default("rmd-dialog--fixed", className), classNames: classNames, overlayHidden: overlayHidden, disableScrollLock: disableScrollLock, onEnter: onEnter, onEntering: onEntering, onEntered: onEntered, onExited: onExited }), children));
});
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        exports.FixedDialog.propTypes = {
            fixedTo: PropTypes.oneOfType([
                PropTypes.string,
                PropTypes.func,
                PropTypes.object,
            ]),
            options: PropTypes.shape({
                vwMargin: PropTypes.number,
                vhMargin: PropTypes.number,
                xMargin: PropTypes.number,
                yMargin: PropTypes.number,
                disableSwapping: PropTypes.bool,
                transformOrigin: PropTypes.bool,
            }),
            getOptions: PropTypes.func,
            onRequestClose: PropTypes.func.isRequired,
            overlayHidden: PropTypes.bool,
            classNames: PropTypes.oneOfType([
                PropTypes.string,
                PropTypes.shape({
                    appear: PropTypes.string,
                    appearActive: PropTypes.string,
                    enter: PropTypes.string,
                    enterActive: PropTypes.string,
                    enterDone: PropTypes.string,
                    exit: PropTypes.string,
                    exitActive: PropTypes.string,
                    exitDone: PropTypes.string,
                }),
            ]),
            timeout: PropTypes.oneOfType([
                PropTypes.number,
                PropTypes.shape({
                    enter: PropTypes.number,
                    exit: PropTypes.number,
                }),
            ]),
            disableScrollLock: PropTypes.bool,
            anchor: PropTypes.shape({
                x: PropTypes.oneOf([
                    "inner-left",
                    "inner-right",
                    "center",
                    "left",
                    "right",
                ]),
                y: PropTypes.oneOf(["above", "below", "center", "top", "bottom"]),
            }),
            children: PropTypes.node,
            className: PropTypes.string,
        };
    }
    catch (e) { }
}
//# sourceMappingURL=FixedDialog.js.map