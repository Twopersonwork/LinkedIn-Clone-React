var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from "react";
import cn from "classnames";
import { bem } from "@react-md/utils";
var block = bem("rmd-dialog");
export var DialogFooter = forwardRef(function DialogFooter(_a, ref) {
    var _b;
    var children = _a.children, className = _a.className, _c = _a.align, align = _c === void 0 ? "end" : _c, props = __rest(_a, ["children", "className", "align"]);
    return (React.createElement("footer", __assign({}, props, { ref: ref, className: cn(block("footer", (_b = {
                flex: align !== "none"
            },
            _b[align] = align !== "none",
            _b)), className) }), children));
});
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        DialogFooter.propTypes = {
            className: PropTypes.string,
            children: PropTypes.node,
            align: PropTypes.oneOf([
                "none",
                "start",
                "end",
                "between",
                "stacked-start",
                "stacked-end",
            ]),
        };
    }
    catch (e) { }
}
//# sourceMappingURL=DialogFooter.js.map