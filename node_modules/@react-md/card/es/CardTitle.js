var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from "react";
import cn from "classnames";
import { bem } from "@react-md/utils";
var block = bem("rmd-card");
/**
 * The `Cardtitle` component should normally be used within the `CardHeader` to
 * create a nicely styled `<h5>` title for your card. This can also be used
 * along with the `CardSubtitle` component within the `CardHeader` for a main
 * title and a subtitle.
 */
export var CardTitle = forwardRef(function CardTitle(_a, ref) {
    var className = _a.className, children = _a.children, _b = _a.small, small = _b === void 0 ? false : _b, _c = _a.noWrap, noWrap = _c === void 0 ? false : _c, props = __rest(_a, ["className", "children", "small", "noWrap"]);
    return (React.createElement("h5", __assign({}, props, { ref: ref, className: cn(block("title", { small: small }), {
            "rmd-card--no-wrap": noWrap,
        }, className) }), children));
});
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        CardTitle.propTypes = {
            small: PropTypes.bool,
            noWrap: PropTypes.bool,
            className: PropTypes.string,
            children: PropTypes.node,
        };
    }
    catch (e) { }
}
//# sourceMappingURL=CardTitle.js.map