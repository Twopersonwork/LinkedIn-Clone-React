var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef, useCallback } from "react";
/**
 * This is probably one of the least useful components available as it doesn't
 * do much styling or logic. All this form component will do is add basic flex
 * behavior and prevent the default form submit behavior.
 */
export var Form = forwardRef(function Form(_a, ref) {
    var children = _a.children, _b = _a.disablePreventDefault, disablePreventDefault = _b === void 0 ? false : _b, onSubmit = _a.onSubmit, props = __rest(_a, ["children", "disablePreventDefault", "onSubmit"]);
    var handleOnSubmit = useCallback(function (event) {
        if (!disablePreventDefault) {
            event.preventDefault();
        }
        if (onSubmit) {
            onSubmit(event);
        }
    }, [disablePreventDefault, onSubmit]);
    return (React.createElement("form", __assign({}, props, { onSubmit: handleOnSubmit, ref: ref }), children));
});
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        Form.propTypes = {
            children: PropTypes.node,
            onSubmit: PropTypes.func,
            disablePreventDefault: PropTypes.bool,
        };
    }
    catch (e) { }
}
//# sourceMappingURL=Form.js.map