var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from "react";
import { useIcon } from "@react-md/icon";
import { MenuItemInputToggle, } from "./MenuItemInputToggle";
/**
 * This is a simple wrapper for the {@link MenuItemInputToggle} component to
 * render it as a checkbox and pulling the checkbox icon from the
 * {@link IconProvider}.
 *
 * @example
 * Simple Example
 * ```tsx
 * import { ReactElement, useState } from "react";
 * import { DropdownMenu } from "@react-md/menu";
 * import { MenuItemCheckbox } from "@react-md/form";
 *
 * function Example(): ReactElement {
 *   const [checked, setChecked] = useState(false);
 *
 *   return (
 *     <DropdownMenu
 *       id="dropdown-menu-id"
 *       items={[
 *         <MenuItemCheckbox
 *           id="checkbox-1"
 *           checked={checked}
 *           onCheckedChange={(nextChecked) => setChecked(nextChecked)}
 *         >
 *           Checkbox
 *        </MenuItemCheckbox>,
 *       ]}
 *     >
 *       Button
 *     </DropdownMenu>
 *   );
 * }
 * ```
 */
export var MenuItemCheckbox = forwardRef(function MenuItemCheckbox(_a, ref) {
    var propIcon = _a.icon, props = __rest(_a, ["icon"]);
    var icon = useIcon("checkbox", propIcon);
    return (React.createElement(MenuItemInputToggle, __assign({}, props, { ref: ref, icon: icon, type: "checkbox" })));
});
//# sourceMappingURL=MenuItemCheckbox.js.map