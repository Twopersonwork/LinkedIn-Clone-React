var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from "react";
import cn from "classnames";
import { FormMessage } from "./FormMessage";
/**
 * A wrapper component that can be used to display a `TextField` related
 * component or `TextArea` along with the `FormMessage` component.
 *
 * @remarks \@since 2.5.0
 */
export var FormMessageContainer = forwardRef(function FormMessageContainer(_a, ref) {
    var className = _a.className, children = _a.children, messageProps = _a.messageProps, props = __rest(_a, ["className", "children", "messageProps"]);
    if (!messageProps) {
        return React.createElement(React.Fragment, null, children);
    }
    return (React.createElement("div", __assign({}, props, { ref: ref, className: cn("rmd-field-message-container", className) }),
        children,
        React.createElement(FormMessage, __assign({}, messageProps))));
});
//# sourceMappingURL=FormMessageContainer.js.map