"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileInput = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var button_1 = require("@react-md/button");
var icon_1 = require("@react-md/icon");
var states_1 = require("@react-md/states");
var typography_1 = require("@react-md/typography");
var utils_1 = require("@react-md/utils");
var block = utils_1.bem("rmd-file-input");
/**
 * This component is a wrapper for the `<input type="file" />` that can be themed
 * like a button.
 */
exports.FileInput = react_1.forwardRef(function FileInput(_a, ref) {
    var style = _a.style, propClassName = _a.className, propIcon = _a.icon, _b = _a.iconAfter, iconAfter = _b === void 0 ? false : _b, _c = _a.children, children = _c === void 0 ? react_1.default.createElement(typography_1.SrOnly, null, "Upload") : _c, _d = _a.theme, theme = _d === void 0 ? "primary" : _d, _e = _a.themeType, themeType = _e === void 0 ? "contained" : _e, _f = _a.buttonType, buttonType = _f === void 0 ? "icon" : _f, _g = _a.multiple, multiple = _g === void 0 ? false : _g, _h = _a.disableIconSpacing, disableIconSpacing = _h === void 0 ? false : _h, _j = _a.disableRepeatableFiles, disableRepeatableFiles = _j === void 0 ? false : _j, onKeyDown = _a.onKeyDown, onKeyUp = _a.onKeyUp, onMouseDown = _a.onMouseDown, onMouseUp = _a.onMouseUp, onMouseLeave = _a.onMouseLeave, onClick = _a.onClick, onTouchStart = _a.onTouchStart, onTouchMove = _a.onTouchMove, onTouchEnd = _a.onTouchEnd, onChange = _a.onChange, props = __rest(_a, ["style", "className", "icon", "iconAfter", "children", "theme", "themeType", "buttonType", "multiple", "disableIconSpacing", "disableRepeatableFiles", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseUp", "onMouseLeave", "onClick", "onTouchStart", "onTouchMove", "onTouchEnd", "onChange"]);
    var id = props.id, disabled = props.disabled;
    var icon = icon_1.useIcon("download", propIcon);
    var _k = states_1.useInteractionStates({
        handlers: {
            onKeyDown: onKeyDown,
            onKeyUp: onKeyUp,
            onMouseDown: onMouseDown,
            onMouseUp: onMouseUp,
            onMouseLeave: onMouseLeave,
            onClick: onClick,
            onTouchStart: onTouchStart,
            onTouchMove: onTouchMove,
            onTouchEnd: onTouchEnd,
        },
        className: button_1.buttonThemeClassNames({
            theme: theme,
            themeType: themeType,
            buttonType: buttonType,
            disabled: disabled,
            className: propClassName,
        }),
        // pressing enter or space would trigger two click events otherwise.
        disableEnterClick: true,
    }), ripples = _k.ripples, className = _k.className, handlers = _k.handlers;
    var content = icon;
    if (disableIconSpacing || (children && !icon)) {
        content = (react_1.default.createElement(react_1.default.Fragment, null,
            !iconAfter && icon,
            children,
            iconAfter && icon));
    }
    else if (children) {
        content = (react_1.default.createElement(icon_1.TextIconSpacing, { icon: icon, iconAfter: iconAfter }, children));
    }
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("input", __assign({}, props, handlers, { ref: ref, onChange: onChange, value: disableRepeatableFiles ? undefined : "", type: "file", className: block(), multiple: multiple })),
        react_1.default.createElement("label", { htmlFor: id, style: style, className: classnames_1.default("rmd-file-input-label", className) },
            content,
            ripples)));
});
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        exports.FileInput.propTypes = {
            id: PropTypes.string.isRequired,
            style: PropTypes.object,
            className: PropTypes.string,
            name: PropTypes.string,
            onChange: PropTypes.func.isRequired,
            icon: PropTypes.node,
            iconAfter: PropTypes.bool,
            multiple: PropTypes.bool,
            disableIconSpacing: PropTypes.bool,
            disableRepeatableFiles: PropTypes.bool,
            theme: PropTypes.oneOf([
                "clear",
                "primary",
                "secondary",
                "warning",
                "error",
            ]),
            themeType: PropTypes.oneOf(["flat", "outline", "contained"]),
            buttonType: PropTypes.oneOf(["text", "icon"]),
            disabled: PropTypes.bool,
            children: PropTypes.node,
            onKeyDown: PropTypes.func,
            onKeyUp: PropTypes.func,
            onMouseDown: PropTypes.func,
            onMouseUp: PropTypes.func,
            onMouseLeave: PropTypes.func,
            onClick: PropTypes.func,
            onTouchStart: PropTypes.func,
            onTouchMove: PropTypes.func,
            onTouchEnd: PropTypes.func,
        };
    }
    catch (e) { }
}
//# sourceMappingURL=FileInput.js.map