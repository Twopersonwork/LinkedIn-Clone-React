"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormMessage = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var utils_1 = require("@react-md/utils");
var FormThemeProvider_1 = require("./FormThemeProvider");
var block = utils_1.bem("rmd-form-message");
/**
 * The `FormMessage` component is used to create additional helper messages or
 * error messages and generally placed below the related `TextField`. If a
 * `length` (of the `value`) and `maxLength` are provided, a counter will also
 * be displayed to the right of the `children`.
 *
 * This component can also be used to create form-level validation messages by
 * setting the `role` prop to `"alert"`.
 */
exports.FormMessage = react_1.forwardRef(function FormMessage(_a, ref) {
    var _b;
    var id = _a.id, role = _a.role, className = _a.className, counterStyle = _a.counterStyle, counterClassName = _a.counterClassName, messageStyle = _a.messageStyle, messageClassName = _a.messageClassName, _c = _a.error, error = _c === void 0 ? false : _c, _d = _a.disableWrap, disableWrap = _d === void 0 ? false : _d, propTheme = _a.theme, children = _a.children, length = _a.length, maxLength = _a.maxLength, props = __rest(_a, ["id", "role", "className", "counterStyle", "counterClassName", "messageStyle", "messageClassName", "error", "disableWrap", "theme", "children", "length", "maxLength"]);
    var theme = FormThemeProvider_1.useFormTheme({ theme: propTheme }).theme;
    var message = children;
    if (!disableWrap && children) {
        message = (react_1.default.createElement("p", { id: id + "-message", style: messageStyle, className: classnames_1.default(block("message"), messageClassName) }, children));
    }
    return (react_1.default.createElement("div", __assign({}, props, { id: id, ref: ref, "aria-live": role !== "alert" ? "polite" : undefined, role: role, className: classnames_1.default(block((_b = {
                error: error
            },
            _b[theme] = theme !== "none",
            _b)), className) }),
        message,
        typeof length === "number" && typeof maxLength === "number" && (react_1.default.createElement("span", { id: id + "-counter", style: counterStyle, className: classnames_1.default(block("counter"), counterClassName) }, length + " / " + maxLength))));
});
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        exports.FormMessage.propTypes = {
            id: PropTypes.string.isRequired,
            role: PropTypes.oneOf(["alert"]),
            className: PropTypes.string,
            messageStyle: PropTypes.object,
            messageClassName: PropTypes.string,
            counterStyle: PropTypes.object,
            counterClassName: PropTypes.string,
            error: PropTypes.bool,
            length: PropTypes.number,
            maxLength: PropTypes.number,
            disableWrap: PropTypes.bool,
            children: PropTypes.node,
            theme: PropTypes.oneOf(["none", "underline", "filled", "outline"]),
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-expect-error
            _counterValidator: function (props, _propName, component) {
                var length = props.length, maxLength = props.maxLength;
                var lengthType = typeof length;
                var maxLengthType = typeof maxLength;
                if (lengthType === maxLengthType) {
                    return null;
                }
                return new Error("Both the `length` and `maxLength` props are required to be defined " +
                    ("and a number to create a counter in the `" + component + "` component, but ") +
                    ("received `length: " + length + "` and `maxLength: " + maxLength + "`"));
            },
        };
    }
    catch (e) { }
}
//# sourceMappingURL=FormMessage.js.map