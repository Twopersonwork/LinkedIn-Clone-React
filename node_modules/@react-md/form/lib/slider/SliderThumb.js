"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SliderThumb = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var utils_1 = require("@react-md/utils");
var constants_1 = require("./constants");
var SliderValue_1 = require("./SliderValue");
var useDiscreteValueVisibility_1 = require("./useDiscreteValueVisibility");
var styles = utils_1.bem("rmd-slider-thumb");
/**
 * The slider thumb implements the `role="slider"` for the `Slider` and
 * `RangeSlider` components.
 *
 * @remarks \@since 2.5.0
 */
exports.SliderThumb = react_1.forwardRef(function SliderThumb(_a, ref) {
    var propId = _a.id, baseId = _a.baseId, className = _a.className, _b = _a.min, min = _b === void 0 ? constants_1.DEFAULT_SLIDER_MIN : _b, _c = _a.max, max = _c === void 0 ? constants_1.DEFAULT_SLIDER_MAX : _c, _d = _a.animationDuration, animationDuration = _d === void 0 ? constants_1.DEFAULT_SLIDER_ANIMATION_TIME : _d, _e = _a.getValueText, getValueText = _e === void 0 ? constants_1.DEFAULT_SLIDER_GET_VALUE_TEXT : _e, name = _a.name, value = _a.value, index = _a.index, _f = _a.active, active = _f === void 0 ? false : _f, _g = _a.animate, animate = _g === void 0 ? false : _g, _h = _a.discrete, discrete = _h === void 0 ? false : _h, _j = _a.disabled, disabled = _j === void 0 ? false : _j, _k = _a.vertical, vertical = _k === void 0 ? false : _k, _l = _a.tabIndex, tabIndex = _l === void 0 ? disabled ? -1 : 0 : _l, propOnBlur = _a.onBlur, propOnFocus = _a.onFocus, props = __rest(_a, ["id", "baseId", "className", "min", "max", "animationDuration", "getValueText", "name", "value", "index", "active", "animate", "discrete", "disabled", "vertical", "tabIndex", "onBlur", "onFocus"]);
    var id = propId || baseId + "-thumb-" + (index + 1);
    var isFirst = index === 0;
    var _m = useDiscreteValueVisibility_1.useDiscreteValueVisibility({
        active: active,
        animate: animate,
        discrete: discrete,
        disabled: disabled,
        onBlur: propOnBlur,
        onFocus: propOnFocus,
        animationDuration: animationDuration,
    }), onBlur = _m.onBlur, onFocus = _m.onFocus, animateValue = _m.animateValue, visible = _m.visible;
    var styleOptions = {
        h: !vertical,
        h1: !vertical && isFirst,
        h2: !vertical && !isFirst,
        v: vertical,
        v1: vertical && isFirst,
        v2: vertical && !isFirst,
        active: active,
        animate: animate,
        disabled: disabled,
    };
    return (react_1.default.createElement(react_1.default.Fragment, null,
        disabled && (react_1.default.createElement("span", { className: classnames_1.default(styles(__assign(__assign({}, styleOptions), { mask: true, "mask-h": !vertical, "mask-v": vertical })), className) })),
        react_1.default.createElement("span", __assign({}, props, { id: id, ref: ref, role: "slider", "aria-valuemin": min, "aria-valuemax": max, "aria-valuenow": value, "aria-valuetext": getValueText(value) || undefined, "aria-disabled": disabled || undefined, "aria-orientation": (vertical && "vertical") || undefined, tabIndex: tabIndex, onBlur: onBlur, onFocus: onFocus, className: classnames_1.default(styles(__assign(__assign({}, styleOptions), { "disabled-h": disabled && !vertical, "disabled-v": disabled && vertical })), className) })),
        react_1.default.createElement("input", { id: id + "-value", type: "hidden", name: name, value: value }),
        react_1.default.createElement(SliderValue_1.SliderValue, { id: id + "-value", visible: visible, index: index, animate: animateValue, discrete: discrete, vertical: vertical }, value)));
});
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        exports.SliderThumb.propTypes = {
            id: PropTypes.string,
            baseId: PropTypes.string,
            className: PropTypes.string,
            min: PropTypes.number,
            max: PropTypes.number,
            active: PropTypes.bool,
            animate: PropTypes.bool,
            animationDuration: PropTypes.number,
            vertical: PropTypes.bool,
            discrete: PropTypes.bool,
            disabled: PropTypes.bool,
            getValueText: PropTypes.func,
            index: PropTypes.oneOf([0, 1]).isRequired,
            value: PropTypes.number.isRequired,
            name: PropTypes.string,
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-expect-error
            _a11yValidator: function (props, _propName, component) {
                var id = props.id, baseId = props.baseId;
                if (id || baseId) {
                    return null;
                }
                return new Error("The `" + component + "` component requires either the `id` or `baseId` props " +
                    "to provided for accessibility, but both were missing.");
            },
        };
    }
    catch (e) { }
}
//# sourceMappingURL=SliderThumb.js.map