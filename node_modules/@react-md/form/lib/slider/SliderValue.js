"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SliderValue = void 0;
var react_1 = __importDefault(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var tooltip_1 = require("@react-md/tooltip");
var utils_1 = require("@react-md/utils");
var styles = utils_1.bem("rmd-slider-value");
var HORIZONTAL_CLASS_NAMES = {
    enter: "rmd-slider-value--h-off",
    enterActive: "rmd-slider-value--h-on rmd-slider-value--animate",
    exit: "rmd-slider-value--animate",
    exitActive: "rmd-slider-value--h-off",
};
var VERTICAL_CLASS_NAMES = {
    enter: "rmd-slider-value--v-off",
    enterActive: "rmd-slider-value--v-on rmd-slider-value--animate",
    exit: "rmd-slider-value--animate",
    exitActive: "rmd-slider-value--v-off",
};
/**
 * This component creates the "discrete" slider thumb value by rendering a
 * tooltip when needed.
 *
 * @remarks \@since 2.5.0
 * @internal
 */
function SliderValue(_a) {
    var _b;
    var index = _a.index, animate = _a.animate, discrete = _a.discrete, vertical = _a.vertical, children = _a.children, className = _a.className, _c = _a.portal, portal = _c === void 0 ? false : _c, props = __rest(_a, ["index", "animate", "discrete", "vertical", "children", "className", "portal"]);
    if (!discrete) {
        return null;
    }
    return (react_1.default.createElement(tooltip_1.Tooltip, __assign({}, props, { portal: portal, className: classnames_1.default(styles({
            h: !vertical,
            v: vertical,
        }), (_b = {
                "rmd-slider-thumb--animate": animate
            },
            _b["rmd-slider-thumb--h" + (index + 1)] = !vertical,
            _b["rmd-slider-thumb--v" + (index + 1)] = vertical,
            _b), className), classNames: vertical ? VERTICAL_CLASS_NAMES : HORIZONTAL_CLASS_NAMES, position: vertical ? "left" : "above", dense: true }), children));
}
exports.SliderValue = SliderValue;
//# sourceMappingURL=SliderValue.js.map