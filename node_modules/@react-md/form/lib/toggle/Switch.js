"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Switch = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var icon_1 = require("@react-md/icon");
var Label_1 = require("../label/Label");
var ToggleContainer_1 = require("./ToggleContainer");
var SwitchTrack_1 = require("./SwitchTrack");
exports.Switch = react_1.forwardRef(function Switch(_a, ref) {
    var style = _a.style, className = _a.className, ballStyle = _a.ballStyle, ballClassName = _a.ballClassName, trackStyle = _a.trackStyle, trackClassName = _a.trackClassName, label = _a.label, labelStyle = _a.labelStyle, labelClassName = _a.labelClassName, labelDisabled = _a.labelDisabled, _b = _a.error, error = _b === void 0 ? false : _b, _c = _a.disabled, disabled = _c === void 0 ? false : _c, _d = _a.stacked, stacked = _d === void 0 ? false : _d, _e = _a.inline, inline = _e === void 0 ? false : _e, _f = _a.iconAfter, iconAfter = _f === void 0 ? false : _f, children = _a.children, props = __rest(_a, ["style", "className", "ballStyle", "ballClassName", "trackStyle", "trackClassName", "label", "labelStyle", "labelClassName", "labelDisabled", "error", "disabled", "stacked", "inline", "iconAfter", "children"]);
    var id = props.id;
    return (react_1.default.createElement(ToggleContainer_1.ToggleContainer, { style: style, className: classnames_1.default("rmd-switch-container", className), inline: inline, stacked: stacked },
        react_1.default.createElement(icon_1.TextIconSpacing, { icon: react_1.default.createElement(Label_1.Label, { style: labelStyle, className: labelClassName, htmlFor: id, error: error, disabled: labelDisabled !== null && labelDisabled !== void 0 ? labelDisabled : disabled }, label), iconAfter: !iconAfter },
            react_1.default.createElement(SwitchTrack_1.SwitchTrack, __assign({}, props, { ref: ref, style: trackStyle, className: trackClassName, disabled: disabled, ballStyle: ballStyle, ballClassName: ballClassName }), children))));
});
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        exports.Switch.propTypes = {
            id: PropTypes.string.isRequired,
            style: PropTypes.object,
            className: PropTypes.string,
            ballStyle: PropTypes.object,
            ballClassName: PropTypes.string,
            trackStyle: PropTypes.object,
            trackClassName: PropTypes.string,
            label: PropTypes.node,
            labelStyle: PropTypes.object,
            labelClassName: PropTypes.string,
            labelDisabled: PropTypes.bool,
            error: PropTypes.bool,
            inline: PropTypes.bool,
            disabled: PropTypes.bool,
            stacked: PropTypes.bool,
            iconAfter: PropTypes.bool,
            children: PropTypes.node,
        };
    }
    catch (e) { }
}
//# sourceMappingURL=Switch.js.map