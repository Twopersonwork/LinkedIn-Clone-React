"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextFieldContainer = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var utils_1 = require("@react-md/utils");
var FormThemeProvider_1 = require("../FormThemeProvider");
var TextFieldAddon_1 = require("./TextFieldAddon");
var block = utils_1.bem("rmd-text-field-container");
/**
 * This is a container component that is used to structure the text field with
 * different parts and themes.
 */
exports.TextFieldContainer = react_1.forwardRef(function TextFieldContainer(_a, ref) {
    var _b;
    var className = _a.className, children = _a.children, _c = _a.inline, inline = _c === void 0 ? false : _c, propTheme = _a.theme, _d = _a.error, error = _d === void 0 ? false : _d, active = _a.active, label = _a.label, _e = _a.dense, dense = _e === void 0 ? false : _e, _f = _a.disabled, disabled = _f === void 0 ? false : _f, _g = _a.isLeftAddon, isLeftAddon = _g === void 0 ? true : _g, _h = _a.isRightAddon, isRightAddon = _h === void 0 ? true : _h, leftChildren = _a.leftChildren, rightChildren = _a.rightChildren, propUnderlineDirection = _a.underlineDirection, props = __rest(_a, ["className", "children", "inline", "theme", "error", "active", "label", "dense", "disabled", "isLeftAddon", "isRightAddon", "leftChildren", "rightChildren", "underlineDirection"]);
    var _j = FormThemeProvider_1.useFormTheme({
        theme: propTheme,
        underlineDirection: propUnderlineDirection,
    }), theme = _j.theme, underlineDirection = _j.underlineDirection;
    var underline = theme === "underline";
    var outline = theme === "outline";
    var filled = theme === "filled";
    var isUnderlined = underline || filled;
    var isOutlineActive = outline && active;
    return (react_1.default.createElement("div", __assign({}, props, { ref: ref, className: classnames_1.default(block((_b = {
                error: error,
                inline: inline,
                filled: filled,
                outline: outline,
                disabled: disabled,
                hoverable: !disabled && !isOutlineActive,
                label: label && !dense,
                dense: !label && dense,
                "dense-label": dense && label,
                "dense-placeholder": dense && isUnderlined && !label,
                "outline-active": isOutlineActive,
                "outline-error": outline && error,
                "outline-left": outline && leftChildren,
                "outline-right": outline && rightChildren,
                underline: isUnderlined,
                "underline-labelled": label && isUnderlined,
                "underline-active": isUnderlined && active
            },
            _b["underline-" + underlineDirection] = isUnderlined,
            _b["underline-left-addon"] = isUnderlined && leftChildren,
            _b["underline-right-addon"] = isUnderlined && rightChildren,
            _b)), className) }),
        isLeftAddon ? (react_1.default.createElement(TextFieldAddon_1.TextFieldAddon, null, leftChildren)) : (leftChildren),
        children,
        isRightAddon ? (react_1.default.createElement(TextFieldAddon_1.TextFieldAddon, null, rightChildren)) : (rightChildren)));
});
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        exports.TextFieldContainer.propTypes = {
            className: PropTypes.string,
            disabled: PropTypes.bool,
            inline: PropTypes.bool,
            theme: PropTypes.oneOf(["none", "underline", "outline", "filled"]),
            active: PropTypes.bool,
            error: PropTypes.bool,
            underlineDirection: PropTypes.oneOf(["left", "center", "right"]),
            isLeftAddon: PropTypes.bool,
            isRightAddon: PropTypes.bool,
            leftChildren: PropTypes.node,
            rightChildren: PropTypes.node,
            label: PropTypes.bool,
            dense: PropTypes.bool,
            children: PropTypes.node,
        };
    }
    catch (e) { }
}
//# sourceMappingURL=TextFieldContainer.js.map