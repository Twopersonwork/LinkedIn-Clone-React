import { ReactElement, ReactNode } from "react";
import { FormThemeOptions } from "@react-md/form";
import { ConfigurableIcons } from "@react-md/icon";
import { StatesConfigProps } from "@react-md/states";
import { AppSizeListenerProps, AppSizeOptions, HoverModeConfiguration, WritingDirection } from "@react-md/utils";
export interface ConfigurationProps extends AppSizeOptions, StatesConfigProps {
    /**
     * An optional function to call when the app gets resized based on media
     * queries. This is useful if you want to store the current app state in redux
     * if you can't always access this state with the `useAppSize` hook.
     */
    onAppResize?: AppSizeListenerProps["onChange"];
    /**
     * Boolean if the default tooltip hover mode should be disabled.
     *
     * @deprecated \@since 2.8.0 Use the {@link hoverMode} configuration object
     * instead.
     */
    disableTooltipHoverMode?: boolean;
    /**
     * The default delay before the tooltip hover mode is enabled.
     *
     * @deprecated \@since 2.8.0 Use the {@link hoverMode} configuration object
     * instead.
     */
    tooltipDefaultDelay?: number;
    /**
     * The delay before the tooltip should become visible.
     *
     * @deprecated \@since 2.8.0 Use the {@link hoverMode} configuration object
     * instead.
     */
    tooltipDelayTimeout?: number;
    /**
     * The children that should gain this configuration. This is required since
     * there's really no reason to use this component if you don't have children
     * that consume the React context.
     */
    children: ReactNode;
    /**
     * An object of all the configurable icons that you want to override
     * throughout react-md.
     */
    icons?: ConfigurableIcons;
    /**
     * An object of any overrides for the `FormThemeProvider`.
     */
    formTheme?: FormThemeOptions;
    /**
     * The current writing direction for your app. This defaults to `"ltr"` but
     * should be changed to `"rtl"` if using a language that is read from right to
     * left.
     *
     * @remarks \@since 2.3.0
     */
    defaultDir?: WritingDirection | (() => WritingDirection);
    /**
     * @see {@link HoverModeConfiguration}
     * @remarks \@since 2.8.0
     */
    hoverMode?: HoverModeConfiguration;
}
/**
 * This component allows you to quickly configure different functionality within
 * `react-md` in one place with reasonable defaults.
 */
export declare function Configuration({ onAppResize, children, icons, formTheme, defaultDir, phoneMaxWidth, tabletMinWidth, tabletMaxWidth, desktopMinWidth, desktopLargeMinWidth, defaultSize, rippleTimeout, rippleClassNames, disableRipple, disableProgrammaticRipple, disableTooltipHoverMode, tooltipDefaultDelay, tooltipDelayTimeout, hoverMode, }: ConfigurationProps): ReactElement;
export declare namespace Configuration {
    var propTypes: {
        children: any;
        onAppResize: any;
        phoneMaxWidth: any;
        tabletMinWidth: any;
        tabletMaxWidth: any;
        desktopMinWidth: any;
        desktopLargeMinWidth: any;
        defaultSize: any;
        rippleTimeout: any;
        rippleClassNames: any;
        disableRipple: any;
        disableProgrammaticRipple: any;
        tooltipDelayTimeout: any;
        tooltipDefaultDelay: any;
        disableTooltipHoverMode: any;
        icons: any;
        formTheme: any;
        defaultDir: any;
    };
}
