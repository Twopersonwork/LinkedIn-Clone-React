"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MiniLayoutWrapper = void 0;
var react_1 = __importDefault(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var utils_1 = require("@react-md/utils");
var LayoutNavigation_1 = require("./LayoutNavigation");
var LayoutProvider_1 = require("./LayoutProvider");
var styles = utils_1.bem("rmd-layout-mini-wrapper");
/**
 * This is probably an internal only component.
 *
 * @remarks \@since 2.8.3
 */
function MiniLayoutWrapper(_a) {
    var mini = _a.mini, miniHidden = _a.miniHidden, miniNav = _a.miniNav, miniNavItems = _a.miniNavItems, treeProps = _a.treeProps, header = _a.header, headerProps = _a.headerProps, headerTitle = _a.headerTitle, headerTitleProps = _a.headerTitleProps, closeNav = _a.closeNav, closeNavProps = _a.closeNavProps, children = _a.children, containerProps = _a.containerProps, props = __rest(_a, ["mini", "miniHidden", "miniNav", "miniNavItems", "treeProps", "header", "headerProps", "headerTitle", "headerTitleProps", "closeNav", "closeNavProps", "children", "containerProps"]);
    var fixedAppBar = LayoutProvider_1.useLayoutConfig().fixedAppBar;
    if (!mini || !treeProps || typeof miniNav !== "undefined") {
        return (react_1.default.createElement(react_1.default.Fragment, null,
            miniNav,
            children));
    }
    var miniTreeProps = treeProps;
    if (miniNavItems) {
        miniTreeProps = __assign(__assign({}, miniTreeProps), { navItems: miniNavItems });
    }
    var miniNavigation = (react_1.default.createElement(LayoutNavigation_1.LayoutNavigation, __assign({ header: header, headerProps: headerProps, headerTitle: headerTitle, headerTitleProps: headerTitleProps, closeNav: closeNav, closeNavProps: closeNavProps, treeProps: miniTreeProps }, props, { mini: true, sticky: !fixedAppBar, hidden: miniHidden })));
    if (fixedAppBar) {
        return (react_1.default.createElement(react_1.default.Fragment, null,
            miniNavigation,
            children));
    }
    return (react_1.default.createElement("div", __assign({}, containerProps, { className: classnames_1.default(!miniHidden && styles(), containerProps === null || containerProps === void 0 ? void 0 : containerProps.className) }),
        miniNavigation,
        children));
}
exports.MiniLayoutWrapper = MiniLayoutWrapper;
//# sourceMappingURL=MiniLayoutWrapper.js.map