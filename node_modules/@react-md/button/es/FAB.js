var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
/* eslint-disable react/prop-types */
import React, { forwardRef } from "react";
import cn from "classnames";
import { bem } from "@react-md/utils";
var styles = bem("rmd-fab");
/**
 * This is a simple wrapper for the `Button` component that will conditionally
 * render the `Button` in a `<span>` to render as a floating action button.
 *
 * Note: You probably don't really want to use this externally since this is
 * really just required so that the click and focus states behavior will still
 * be contained within the button. The states behavior requires
 * `position: relative` to work while changing into a floating action button
 * makes it `position: fixed`.
 */
export var FAB = forwardRef(function FAB(_a, ref) {
    var _b = _a.position, position = _b === void 0 ? null : _b, children = _a.children, className = _a.className, props = __rest(_a, ["position", "children", "className"]);
    if (!position) {
        return React.createElement(React.Fragment, null, children);
    }
    return (React.createElement("span", __assign({}, props, { ref: ref, className: cn(styles({
            tl: position === "top-left",
            tr: position === "top-right",
            bl: position === "bottom-left",
            br: position === "bottom-right",
        }), className) }), children));
});
//# sourceMappingURL=FAB.js.map