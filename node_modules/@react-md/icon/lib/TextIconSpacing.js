"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextIconSpacing = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
function TextIconSpacing(_a) {
    var _b;
    var className = _a.className, propIcon = _a.icon, _c = _a.children, children = _c === void 0 ? null : _c, _d = _a.stacked, stacked = _d === void 0 ? false : _d, _e = _a.iconAfter, iconAfter = _e === void 0 ? false : _e, _f = _a.flexReverse, flexReverse = _f === void 0 ? false : _f, _g = _a.forceIconWrap, forceIconWrap = _g === void 0 ? false : _g, _h = _a.beforeClassName, beforeClassName = _h === void 0 ? "rmd-icon--before" : _h, _j = _a.afterClassName, afterClassName = _j === void 0 ? "rmd-icon--after" : _j, _k = _a.aboveClassName, aboveClassName = _k === void 0 ? "rmd-icon--above" : _k, _l = _a.belowClassName, belowClassName = _l === void 0 ? "rmd-icon--below" : _l;
    if (!propIcon) {
        return react_1.default.createElement(react_1.default.Fragment, null, children);
    }
    var isAfter = flexReverse ? !iconAfter : iconAfter;
    var baseClassName = classnames_1.default((_b = {},
        _b[beforeClassName] = !stacked && !isAfter,
        _b[afterClassName] = !stacked && isAfter,
        _b[aboveClassName] = stacked && !isAfter,
        _b[belowClassName] = stacked && isAfter,
        _b), className);
    var iconEl = propIcon;
    var content = children;
    if (!forceIconWrap && react_1.isValidElement(propIcon)) {
        var icon = react_1.Children.only(propIcon);
        iconEl = react_1.cloneElement(icon, {
            className: classnames_1.default(baseClassName, icon.props.className),
        });
    }
    else if (propIcon) {
        iconEl = (react_1.default.createElement("span", { className: classnames_1.default("rmd-text-icon-spacing", baseClassName) }, propIcon));
    }
    if (iconEl) {
        content = (react_1.default.createElement(react_1.default.Fragment, null,
            !iconAfter && iconEl,
            children,
            iconAfter && iconEl));
    }
    return react_1.default.createElement(react_1.default.Fragment, null, content);
}
exports.TextIconSpacing = TextIconSpacing;
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        TextIconSpacing.propTypes = {
            className: PropTypes.string,
            icon: PropTypes.oneOfType([
                PropTypes.element,
                PropTypes.node,
                PropTypes.object,
            ]),
            iconAfter: PropTypes.bool,
            stacked: PropTypes.bool,
            children: PropTypes.node,
            beforeClassName: PropTypes.string,
            afterClassName: PropTypes.string,
            aboveClassName: PropTypes.string,
            belowClassName: PropTypes.string,
            forceIconWrap: PropTypes.bool,
        };
    }
    catch (e) { }
}
//# sourceMappingURL=TextIconSpacing.js.map