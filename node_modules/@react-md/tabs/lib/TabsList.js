"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TabsList = void 0;
/* eslint-disable jsx-a11y/interactive-supports-focus */
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var utils_1 = require("@react-md/utils");
var useTabIndicatorStyle_1 = require("./useTabIndicatorStyle");
var useTabsMovement_1 = require("./useTabsMovement");
var block = utils_1.bem("rmd-tabs");
/**
 * The `TabsList` component is the container for all the individual `Tab`s that
 * should be rendered. This handles adding an active indicator underneath the
 * active tab and animating it to the new location when a new tab becomes
 * active. It also handles the ability update which tab is selected when it has
 * been clicked or updated with keyboard movement.
 *
 * This should probably not be used outside of this package unless a custom
 * implementation is desired.
 */
exports.TabsList = react_1.forwardRef(function TabsList(_a, forwardedRef) {
    var _b;
    var style = _a.style, className = _a.className, onClick = _a.onClick, onKeyDown = _a.onKeyDown, children = _a.children, activeIndex = _a.activeIndex, _c = _a.align, align = _c === void 0 ? "left" : _c, _d = _a.automatic, automatic = _d === void 0 ? false : _d, _e = _a.padded, padded = _e === void 0 ? false : _e, _f = _a.orientation, orientation = _f === void 0 ? "horizontal" : _f, onActiveIndexChange = _a.onActiveIndexChange, _g = _a.disableTransition, disableTransition = _g === void 0 ? false : _g, props = __rest(_a, ["style", "className", "onClick", "onKeyDown", "children", "activeIndex", "align", "automatic", "padded", "orientation", "onActiveIndexChange", "disableTransition"]);
    var horizontal = orientation === "horizontal";
    var _h = useTabsMovement_1.useTabsMovement({
        onClick: onClick,
        onKeyDown: onKeyDown,
        children: children,
        horizontal: horizontal,
        activeIndex: activeIndex,
        onActiveIndexChange: onActiveIndexChange,
        automatic: automatic,
    }), tabs = _h.tabs, itemRefs = _h.itemRefs, handleClick = _h.handleClick, handleKeyDown = _h.handleKeyDown;
    var _j = useTabIndicatorStyle_1.useTabIndicatorStyle({
        style: style,
        ref: forwardedRef,
        align: align,
        itemRefs: itemRefs,
        totalTabs: tabs.length,
        activeIndex: activeIndex,
    }), mergedStyle = _j[0], tabsRefHandler = _j[1], tabsRef = _j[2], updateIndicatorStyles = _j[3];
    var isKeyboard = utils_1.useIsUserInteractionMode("keyboard");
    var prevActiveIndex = react_1.useRef(activeIndex);
    react_1.useEffect(function () {
        var tabs = tabsRef.current;
        var tabRef = itemRefs[activeIndex] && itemRefs[activeIndex].current;
        var incrementing = prevActiveIndex.current < activeIndex;
        prevActiveIndex.current = activeIndex;
        if (!tabs || !tabRef) {
            return;
        }
        var currentX = tabs.scrollLeft + tabs.offsetWidth;
        var tabLeft = tabRef.offsetLeft;
        var tabWidth = tabRef.offsetWidth;
        if (incrementing && currentX < tabLeft + tabWidth) {
            tabs.scrollLeft = tabLeft - tabWidth;
        }
        else if (!incrementing && tabs.scrollLeft > tabLeft) {
            tabs.scrollLeft = tabLeft;
        }
        // don't want this to trigger on itemRefs or tabsRef changes since those
        // have a chance of updating each render.
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [activeIndex]);
    return (react_1.default.createElement(useTabIndicatorStyle_1.UpdateIndicatorStylesProvider, { value: updateIndicatorStyles },
        react_1.default.createElement("div", __assign({}, props, { "aria-orientation": orientation, style: mergedStyle, role: "tablist", className: classnames_1.default(block((_b = {},
                _b[align] = true,
                _b.padded = padded,
                _b.vertical = !horizontal,
                _b.animate = !disableTransition && (!automatic || !isKeyboard),
                _b)), className), ref: tabsRefHandler, onClick: handleClick, onKeyDown: handleKeyDown }), react_1.Children.map(tabs, function (child, i) {
            if (!react_1.isValidElement(child)) {
                return child;
            }
            var tab = react_1.Children.only(child);
            var ref = itemRefs[i];
            if (tab.props.ref) {
                ref = function (instance) {
                    itemRefs[i].current = instance;
                    utils_1.applyRef(instance, tab.props.ref);
                };
            }
            return react_1.cloneElement(tab, { ref: ref });
        }))));
});
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        exports.TabsList.propTypes = {
            style: PropTypes.object,
            className: PropTypes.string,
            children: PropTypes.node,
            onClick: PropTypes.func,
            onKeyDown: PropTypes.func,
            align: PropTypes.oneOf(["left", "center", "right"]),
            automatic: PropTypes.bool,
            padded: PropTypes.bool,
            orientation: PropTypes.oneOf(["horizontal", "vertical"]),
            activeIndex: PropTypes.number.isRequired,
            onActiveIndexChange: PropTypes.func.isRequired,
            disableTransition: PropTypes.bool,
        };
    }
    catch (e) { }
}
//# sourceMappingURL=TabsList.js.map