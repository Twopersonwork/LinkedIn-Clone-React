import { MutableRefObject, Ref } from "react";
import { ItemRefList } from "@react-md/utils";
interface Options {
    style: React.CSSProperties | undefined;
    ref?: Ref<HTMLDivElement | null>;
    itemRefs: ItemRefList;
    totalTabs: number;
    activeIndex: number;
    align: "left" | "center" | "right";
}
declare const TAB_WIDTH_VAR = "--rmd-tab-width";
declare const TAB_OFFSET_VAR = "--rmd-tab-offset";
interface CSSVariables {
    [TAB_WIDTH_VAR]: string;
    [TAB_OFFSET_VAR]: string;
}
declare type CSSProperties = React.CSSProperties & CSSVariables;
declare type UpdateIndicatorStyles = () => void;
declare type MergedTabRef = (instance: HTMLDivElement | null) => void;
declare type ReturnValue = [
    CSSProperties,
    MergedTabRef,
    MutableRefObject<HTMLDivElement | null>,
    UpdateIndicatorStyles
];
/**
 * @remarks \@since 2.3.0
 * @internal
 */
export declare const UpdateIndicatorStylesProvider: import("react").Provider<UpdateIndicatorStyles>;
/**
 * @remarks \@since 2.3.0
 * @internal
 */
export declare function useUpdateIndicatorStyles(): UpdateIndicatorStyles;
/**
 * This hook will merge the provided style object along with the required css
 * variables for the active tab underline moving to the correct location. The
 * indicator will be updated to be the same width as the tab along with offset
 * by all the tabs' sizes.
 *
 * @internal
 */
export declare function useTabIndicatorStyle({ style, ref: propRef, align, itemRefs, totalTabs, activeIndex, }: Options): ReturnValue;
export {};
