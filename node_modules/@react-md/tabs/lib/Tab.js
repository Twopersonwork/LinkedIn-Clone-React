"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Tab = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var icon_1 = require("@react-md/icon");
var states_1 = require("@react-md/states");
var utils_1 = require("@react-md/utils");
var useTabIndicatorStyle_1 = require("./useTabIndicatorStyle");
var block = utils_1.bem("rmd-tab");
/**
 * The `Tab` is a low-level component that just renders an accessible tab widget
 * along with some general styles and an optional icon.
 */
exports.Tab = react_1.forwardRef(function Tab(_a, propRef) {
    var propClassName = _a.className, contentStyle = _a.contentStyle, contentClassName = _a.contentClassName, _b = _a.disabled, disabled = _b === void 0 ? false : _b, icon = _a.icon, _c = _a.stacked, stacked = _c === void 0 ? false : _c, _d = _a.iconAfter, iconAfter = _d === void 0 ? false : _d, children = _a.children, active = _a.active, panelId = _a.panelId, disableRipple = _a.disableRipple, disableProgrammaticRipple = _a.disableProgrammaticRipple, rippleTimeout = _a.rippleTimeout, rippleClassNames = _a.rippleClassNames, rippleClassName = _a.rippleClassName, rippleContainerClassName = _a.rippleContainerClassName, enablePressedAndRipple = _a.enablePressedAndRipple, props = __rest(_a, ["className", "contentStyle", "contentClassName", "disabled", "icon", "stacked", "iconAfter", "children", "active", "panelId", "disableRipple", "disableProgrammaticRipple", "rippleTimeout", "rippleClassNames", "rippleClassName", "rippleContainerClassName", "enablePressedAndRipple"]);
    var _e = states_1.useInteractionStates({
        handlers: props,
        className: propClassName,
        disabled: disabled,
        disableRipple: disableRipple,
        disableProgrammaticRipple: disableProgrammaticRipple,
        rippleTimeout: rippleTimeout,
        rippleClassNames: rippleClassNames,
        rippleClassName: rippleClassName,
        rippleContainerClassName: rippleContainerClassName,
        enablePressedAndRipple: enablePressedAndRipple,
    }), ripples = _e.ripples, className = _e.className, handlers = _e.handlers;
    // TODO: Look into removing this resize observer. This is only required if
    // someone manually updates the width of the tab (dev utils) or if the width
    // was not changed due to the tabs container element resizing (iffy)
    var updateIndicatorStyles = useTabIndicatorStyle_1.useUpdateIndicatorStyles();
    var _f = utils_1.useResizeObserver(updateIndicatorStyles, {
        ref: propRef,
    }), refHandler = _f[1];
    return (react_1.default.createElement("button", __assign({}, props, handlers, { ref: active ? refHandler : propRef, "aria-selected": active, "aria-controls": panelId, type: "button", role: "tab", disabled: disabled, className: classnames_1.default(block({ active: active, stacked: icon && stacked }), className), tabIndex: active ? undefined : -1 }),
        react_1.default.createElement(icon_1.TextIconSpacing, { icon: icon, stacked: stacked, iconAfter: iconAfter },
            react_1.default.createElement("span", { style: contentStyle, className: classnames_1.default(block("content"), contentClassName) }, children)),
        ripples));
});
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        exports.Tab.propTypes = {
            id: PropTypes.string.isRequired,
            panelId: PropTypes.string,
            active: PropTypes.bool.isRequired,
            className: PropTypes.string,
            contentStyle: PropTypes.object,
            contentClassName: PropTypes.string,
            children: PropTypes.node,
            icon: PropTypes.node,
            stacked: PropTypes.bool,
            iconAfter: PropTypes.bool,
            disabled: PropTypes.bool,
            onKeyDown: PropTypes.func,
            disableRipple: PropTypes.bool,
            disableProgrammaticRipple: PropTypes.bool,
            rippleTimeout: PropTypes.oneOfType([
                PropTypes.number,
                PropTypes.shape({
                    appear: PropTypes.number,
                    enter: PropTypes.number,
                    exit: PropTypes.number,
                }),
            ]),
            rippleClassNames: PropTypes.oneOfType([
                PropTypes.string,
                PropTypes.shape({
                    appear: PropTypes.string,
                    appearActive: PropTypes.string,
                    enter: PropTypes.string,
                    enterActive: PropTypes.string,
                    enterDone: PropTypes.string,
                    exit: PropTypes.string,
                    exitActive: PropTypes.string,
                    exitDone: PropTypes.string,
                }),
            ]),
            rippleClassName: PropTypes.string,
            rippleContainerClassName: PropTypes.string,
            enablePressedAndRipple: PropTypes.bool,
        };
    }
    catch (e) { }
}
//# sourceMappingURL=Tab.js.map