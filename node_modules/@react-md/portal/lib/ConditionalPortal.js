"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConditionalPortal = void 0;
var react_1 = __importDefault(require("react"));
var Portal_1 = require("./Portal");
/**
 * This is a very simple component that is used in other places within react-md
 * to conditionally render the children within a portal or not based on general
 * portal config props.
 */
function ConditionalPortal(_a) {
    var portal = _a.portal, portalInto = _a.portalInto, portalIntoId = _a.portalIntoId, children = _a.children;
    if (!portal && !portalInto && !portalIntoId) {
        return children;
    }
    return (react_1.default.createElement(Portal_1.Portal, { into: portalInto, intoId: portalIntoId }, children));
}
exports.ConditionalPortal = ConditionalPortal;
/* istanbul ignore next */
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        ConditionalPortal.propTypes = {
            portal: PropTypes.bool,
            portalInto: PropTypes.oneOfType([
                PropTypes.string,
                PropTypes.func,
                PropTypes.object,
            ]),
            portalIntoId: PropTypes.string,
            children: PropTypes.node,
        };
    }
    catch (e) { }
}
//# sourceMappingURL=ConditionalPortal.js.map