[{"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/index.js":"1","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/App.js":"2","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/reportWebVitals.js":"3","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Widgets/Widgets.js":"4","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Header/Header.js":"5","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Sidebar/Sidebar.js":"6","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Feed.js":"7","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Login/Login.js":"8","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Header/HeaderOption.js":"9","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/InputOption.js":"10","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Post.js":"11","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Count.js":"12","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Home/Home.js":"13","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Register/Register.js":"14","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/CreatePost.js":"15","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Comments.js":"16","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/Profile.js":"17","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/About.js":"18","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/Education.js":"19","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/License.js":"20","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/EditPost.js":"21","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/AddProfilePic.js":"22","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/ActivityLeft.js":"23","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/ActivityRight.js":"24","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/ActivityMain.js":"25","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/AddSkills.js":"26","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/EditInfoModal.js":"27","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/EditSkill.js":"28","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/GenerateData.js":"29","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Network/Network.js":"30","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Network/NetworkLeft.js":"31","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Network/UserList.js":"32","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Network/UserCards.js":"33","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/AddCoverPic.js":"34","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/OtherUserProfile.js":"35","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/ContactInfo.js":"36","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/ShowFollowers.js":"37","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/FollowersList.js":"38","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/userContext.js":"39"},{"size":948,"mtime":1620910827581,"results":"40","hashOfConfig":"41"},{"size":4345,"mtime":1621503272070,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1619935431325,"results":"43","hashOfConfig":"41"},{"size":1528,"mtime":1619939290332,"results":"44","hashOfConfig":"41"},{"size":13237,"mtime":1621778079054,"results":"45","hashOfConfig":"41"},{"size":2359,"mtime":1621772210340,"results":"46","hashOfConfig":"41"},{"size":4391,"mtime":1621496889760,"results":"47","hashOfConfig":"41"},{"size":5378,"mtime":1621692520160,"results":"48","hashOfConfig":"41"},{"size":541,"mtime":1620125144348,"results":"49","hashOfConfig":"41"},{"size":659,"mtime":1621173233143,"results":"50","hashOfConfig":"41"},{"size":14885,"mtime":1621513195215,"results":"51","hashOfConfig":"41"},{"size":4367,"mtime":1621336922757,"results":"52","hashOfConfig":"41"},{"size":2812,"mtime":1620397308552,"results":"53","hashOfConfig":"41"},{"size":5723,"mtime":1620046239287,"results":"54","hashOfConfig":"41"},{"size":4952,"mtime":1621762333353,"results":"55","hashOfConfig":"41"},{"size":2922,"mtime":1621336886717,"results":"56","hashOfConfig":"41"},{"size":32560,"mtime":1621789507243,"results":"57","hashOfConfig":"41"},{"size":4502,"mtime":1621759052791,"results":"58","hashOfConfig":"41"},{"size":10149,"mtime":1621765643740,"results":"59","hashOfConfig":"41"},{"size":11547,"mtime":1621767434842,"results":"60","hashOfConfig":"41"},{"size":5509,"mtime":1620665041787,"results":"61","hashOfConfig":"41"},{"size":7520,"mtime":1621782458540,"results":"62","hashOfConfig":"41"},{"size":1642,"mtime":1621507828404,"results":"63","hashOfConfig":"41"},{"size":216,"mtime":1620654406250,"results":"64","hashOfConfig":"41"},{"size":4724,"mtime":1621335678470,"results":"65","hashOfConfig":"41"},{"size":4698,"mtime":1621763322825,"results":"66","hashOfConfig":"41"},{"size":7942,"mtime":1621788673196,"results":"67","hashOfConfig":"41"},{"size":2455,"mtime":1621761979613,"results":"68","hashOfConfig":"41"},{"size":816,"mtime":1620741633693,"results":"69","hashOfConfig":"41"},{"size":8027,"mtime":1621789762236,"results":"70","hashOfConfig":"41"},{"size":2611,"mtime":1621504640500,"results":"71","hashOfConfig":"41"},{"size":2406,"mtime":1621789829580,"results":"72","hashOfConfig":"41"},{"size":3812,"mtime":1621337250979,"results":"73","hashOfConfig":"41"},{"size":7494,"mtime":1621184556486,"results":"74","hashOfConfig":"41"},{"size":16971,"mtime":1621771986839,"results":"75","hashOfConfig":"41"},{"size":1943,"mtime":1621771889301,"results":"76","hashOfConfig":"41"},{"size":1711,"mtime":1621335678470,"results":"77","hashOfConfig":"41"},{"size":1532,"mtime":1621505898199,"results":"78","hashOfConfig":"41"},{"size":99,"mtime":1621503689640,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"vv7q23",{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/index.js",[],["168","169"],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/App.js",["170"],"import React, { Component } from \"react\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Header from \"./components/Header/Header\";\nimport Feed from \"./components/Feed/Feed\";\nimport Widgets from \"./components/Widgets/Widgets\";\nimport Register from \"./components/Register/Register\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"./components/Home/Home\";\nimport \"./App.css\";\nimport { withCookies } from \"react-cookie\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport Profile from \"./components/Profile/Profile\";\nimport ActivityLeft from \"./components/Profile/ActivityLeft\";\nimport ActivityMain from \"./components/Profile/ActivityMain\";\nimport ActivityRight from \"./components/Profile/ActivityRight\";\nimport GenerateData from \"./components/GenerateData\";\nimport Network from \"./components/Network/Network\";\nimport NetworkLeft from \"./components/Network/NetworkLeft\";\nimport UserContext from \"./components/userContext\";\nimport OtherUserProfile from \"./components/Profile/OtherUserProfile\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: [],\n      c: [],\n    };\n  }\n\n  updateNework = () => {\n    fetch(\n      `${process.env.REACT_APP_API_URL}/uapi/users/${\n        this.props.cookies.get(\"auth-token\").user.id\n      }/`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n        },\n      }\n    )\n      .then((resp) => resp.json())\n      .then((resp) => {\n        this.setState({ user: resp });\n      })\n      .catch((error) => console.log(error));\n  };\n\n  componentDidMount() {\n    if (this.props.cookies.get(\"auth-token\")) {\n      this.updateNework();\n    }\n  }\n\n  render() {\n    const { user, c } = this.state;\n\n    return (\n      <UserContext.Provider value={{ user, c }}>\n        <BrowserRouter>\n          <div>\n            <Switch>\n              {this.props.cookies.get(\"auth-token\") ? (\n                <Route>\n                  <div className=\"app\">\n                    <Header />\n\n                    {/*  To generate multiple post at a time (Devlopement purpose) */}\n                    {/* <GenerateData /> */}\n                    <div className=\"app__body\">\n                      <Route exact path=\"/\">\n                        <Sidebar />\n                        <Feed />\n                        <Widgets />\n                      </Route>\n                      <Route\n                        exact\n                        path=\"/profile\"\n                        component={() => <Profile />}\n                      />\n                      <Route\n                        exact\n                        path=\"/user_profile\"\n                        component={(props) => <OtherUserProfile {...props} />}\n                      />\n                      <Route\n                        exact\n                        path=\"/activity\"\n                        component={(props) => (\n                          <React.Fragment>\n                            <ActivityLeft {...props} />\n                            <ActivityMain {...props} />\n                            <ActivityRight />\n                          </React.Fragment>\n                        )}\n                      />\n\n                      <Route exact path=\"/network\">\n                        <NetworkLeft />\n                        <Network updateNework={this.updateNework} />\n                      </Route>\n                    </div>\n                  </div>\n                </Route>\n              ) : (\n                <React.Fragment>\n                  <Route exact path=\"/home\" component={() => <Home />} />\n                  <Route\n                    exact\n                    path=\"/login\"\n                    render={(props) => <Login {...props} />}\n                  />\n                  <Route\n                    exact\n                    path=\"/join_now\"\n                    component={() => <Register />}\n                  />\n                  <Route exact path=\"/\" component={() => <Home />} />\n                </React.Fragment>\n              )}\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default withCookies(App);\n","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/reportWebVitals.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Widgets/Widgets.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Header/Header.js",["171","172","173","174","175","176"],"import { withCookies } from \"react-cookie\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport React, { Component } from \"react\";\nimport UserContext from \"../userContext\";\n\nconst styles = (theme) => ({\n  customBadge: {\n    color: \"white\",\n    backgroundColor: \"rgb(205, 64, 30)\",\n  },\n});\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeHome: true,\n      activeNetwork: false,\n      loc: \"\",\n    };\n  }\n\n  removeallCookies = () => {\n    this.props.cookies.remove(\"auth-token\");\n    this.props.cookies.remove(\"profile\");\n    this.props.cookies.remove(\"profile-id\");\n    this.props.cookies.remove(\"about-id\");\n  };\n\n  thisClicked = () => {\n    console.log(window.location.pathname);\n\n    console.log(window.location.href.split(\"/\"));\n    this.setState({\n      loc: window.location.href.split(\"/\")[\n        window.location.href.split(\"/\").length - 1\n      ],\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Container style={{ position: \"fixed\" }}>\n        <Content>\n          <Logo>\n            <a href=\"/\">\n              <img src=\"/images/home-logo.svg\" alt=\"\" />\n            </a>\n          </Logo>\n          <Search>\n            <div>\n              <input type=\"text\" placeholder=\"Search\" />\n            </div>\n            <SearchIcon>\n              <img src=\"/images/search-icon.svg\" alt=\"\" />\n            </SearchIcon>\n          </Search>\n          <Nav>\n            <NavListWrap>\n              <NavList>\n                <Link onClick={this.thisClicked} to={\"/\"}>\n                  {window.location.pathname.slice(1) == \"\" ? (\n                    <svg\n                      onClick={this.thisClicked}\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      height=\"24\"\n                      width=\"24\"\n                    >\n                      <path d=\"m23 9v2h-2v7c0 1.7-1.3 3-3 3h-4v-6h-4v6h-4c-1.7 0-3-1.3-3-3v-7h-2v-2l11-7z\"></path>\n                      <path d=\"m20 2h-3v3.2l3 1.9z\"></path>\n                    </svg>\n                  ) : (\n                    <svg\n                      onClick={this.thisClicked}\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      height=\"24\"\n                      width=\"24\"\n                      fill=\"rgba(0,0,0,0.6)\"\n                    >\n                      <path d=\"m23 9v2h-2v7c0 1.7-1.3 3-3 3h-4v-6h-4v6h-4c-1.7 0-3-1.3-3-3v-7h-2v-2l11-7z\"></path>\n                      <path d=\"m20 2h-3v3.2l3 1.9z\"></path>\n                    </svg>\n                  )}\n\n                  <NavList\n                    className={\n                      window.location.pathname.slice(1) == \"\" ? \"active\" : null\n                    }\n                  >\n                    {/* <img\n                    onClick={this.thisClicked}\n                    src=\"/images/nav-home.svg\"\n                    alt=\"\"\n                  /> */}\n\n                    <span onClick={this.thisClicked}>Home</span>\n                  </NavList>\n                </Link>\n              </NavList>\n\n              <NavList>\n                <Link onClick={this.thisClicked} to={\"/network\"}>\n                  <UserContext.Consumer>\n                    {(props) => (\n                      <Badge\n                        classes={{ badge: classes.customBadge }}\n                        style={{ paddingLeft: \"35px\" }}\n                        badgeContent={\n                          props.user.waitFollowers\n                            ? props.user.waitFollowers.length\n                            : null\n                        }\n                      />\n                    )}\n                  </UserContext.Consumer>\n                  {window.location.pathname.slice(1) == \"network\" ? (\n                    <svg\n                      onClick={this.thisClicked}\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      height=\"24\"\n                      width=\"24\"\n                    >\n                      <path d=\"m12 16v6h-9v-6c0-1.7 1.3-3 3-3h3c1.7 0 3 1.3 3 3zm5.5-3c1.9 0 3.5-1.6 3.5-3.5s-1.6-3.5-3.5-3.5-3.5 1.6-3.5 3.5 1.6 3.5 3.5 3.5zm1 2h-2c-1.4 0-2.5 1.1-2.5 2.5v4.5h7v-4.5c0-1.4-1.1-2.5-2.5-2.5zm-11-13c-2.5 0-4.5 2-4.5 4.5s2 4.5 4.5 4.5 4.5-2 4.5-4.5-2-4.5-4.5-4.5z\"></path>\n                    </svg>\n                  ) : (\n                    <svg\n                      onClick={this.thisClicked}\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      height=\"24\"\n                      width=\"24\"\n                      fill=\"rgba(0,0,0,0.6)\"\n                    >\n                      <path d=\"m12 16v6h-9v-6c0-1.7 1.3-3 3-3h3c1.7 0 3 1.3 3 3zm5.5-3c1.9 0 3.5-1.6 3.5-3.5s-1.6-3.5-3.5-3.5-3.5 1.6-3.5 3.5 1.6 3.5 3.5 3.5zm1 2h-2c-1.4 0-2.5 1.1-2.5 2.5v4.5h7v-4.5c0-1.4-1.1-2.5-2.5-2.5zm-11-13c-2.5 0-4.5 2-4.5 4.5s2 4.5 4.5 4.5 4.5-2 4.5-4.5-2-4.5-4.5-4.5z\"></path>\n                    </svg>\n                  )}\n                  <NavList\n                    className={\n                      window.location.pathname.slice(1) == \"network\"\n                        ? \"active\"\n                        : null\n                    }\n                  >\n                    <span onClick={this.thisClicked}>My Network</span>\n                  </NavList>\n                </Link>\n              </NavList>\n\n              <NavList\n              // className={\n              //   window.location.pathname.slice(1) == \"/#\" ? \"active\" : null\n              // }\n              >\n                <Link onClick={(event) => event.preventDefault()}>\n                  <img src=\"/images/nav-jobs.svg\" alt=\"\" />\n                  <span onClick={this.thisClicked}>Jobs</span>\n                </Link>\n              </NavList>\n\n              <NavList\n              // className={\n              //   window.location.pathname.slice(1) == \"/#\" ? \"active\" : null\n              // }\n              >\n                <Link onClick={(event) => event.preventDefault()}>\n                  <img src=\"/images/nav-messaging.svg\" alt=\"\" />\n                  <span>Messaging</span>\n                </Link>\n              </NavList>\n\n              <NavList\n              // className={\n              //   window.location.pathname.slice(1) == \"/#\" ? \"active\" : null\n              // }\n              >\n                <Link onClick={(event) => event.preventDefault()}>\n                  <img src=\"/images/nav-notifications.svg\" alt=\"\" />\n                  <span>Notifications</span>\n                </Link>\n              </NavList>\n              <User>\n                <NavList\n                  className={\n                    window.location.pathname.slice(1) == \"profile\"\n                      ? \"active\"\n                      : null\n                  }\n                >\n                  {window.location.pathname.slice(1) == \"profile\" ? (\n                    <Link onClick={(event) => event.preventDefault()}>\n                      <UserContext.Consumer>\n                        {(props) => {\n                          return (\n                            <img\n                              onClick={this.thisClicked}\n                              src={props.user.profile_pic}\n                              alt=\"\"\n                            />\n                          );\n                        }}\n                      </UserContext.Consumer>\n                      <span>Me</span>\n\n                      {/* <img src=\"/images/down-icon.svg\" alt=\"\" /> */}\n                    </Link>\n                  ) : (\n                    <Link onClick={this.thisClicked} to={\"/profile\"}>\n                      <UserContext.Consumer>\n                        {(props) => {\n                          return (\n                            <img\n                              onClick={this.thisClicked}\n                              src={props.user.profile_pic}\n                              alt=\"\"\n                            />\n                          );\n                        }}\n                      </UserContext.Consumer>\n                      <span>Me</span>\n\n                      {/* <img src=\"/images/down-icon.svg\" alt=\"\" /> */}\n                    </Link>\n                  )}\n                </NavList>\n                <SignOut>\n                  <Link to={\"/home\"} onClick={this.removeallCookies}>\n                    Sign Out\n                  </Link>\n                </SignOut>\n              </User>\n              <Work>\n                <Link to={\"/\"}>\n                  <img src=\"/images/nav-work.svg\" alt=\"\" />\n                  <span>\n                    Work\n                    <img src=\"/images/down-icon.svg\" alt=\"\" />\n                  </span>\n                </Link>\n              </Work>\n            </NavListWrap>\n          </Nav>\n        </Content>\n      </Container>\n      // <div className=\"header\">\n      //   <div className=\"header__left\">\n      //       <img\n      //         src=\"https://www.flaticon.com/svg/static/icons/svg/174/174857.svg\"\n      //         alt=\"linkedin logo\"\n      //         onClick={() => window.location.href=\"/\"}\n      //       />\n\n      //     <div className=\"header__search\">\n      //       <SearchIcon style={{ color: \"black\" }} />\n      //       <input type=\"text\" placeholder=\"Search\" />\n      //     </div>\n      //   </div>\n\n      //   <div className=\"header__right\">\n      //     <HeaderOption Icon={HomeIcon} title=\"Home\" />\n      //     <HeaderOption Icon={SupervisorAccountIcon} title=\"My Network\" />\n      //     <HeaderOption Icon={BusinessCenterIcon} title=\"Jobs\" />\n      //     <HeaderOption Icon={ChatIcon} title=\"Messaging\" />\n      //     <HeaderOption Icon={NotificationsIcon} title=\"Notifications\" />\n      //     <Link to={\"/\"}>\n      //       <HeaderOption\n      //         avatar={true}\n      //         title=\"Log Out\"\n      //         onClick={this.removeallCookies}\n      //       />\n      //     </Link>\n      //   </div>\n      // </div>\n    );\n  }\n}\n\nconst Container = styled.div`\n  background-color: white;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.08);\n  left: 0;\n  padding: 0 24px;\n  // position: sticky;\n  top: 0;\n  width: 100vw;\n  z-index: 100;\n  padding-top: 8px;\n  padding-bottom: 2px;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 auto;\n  min-height: 100%;\n  max-width: 1190px;\n`;\n\nconst Logo = styled.span`\n  margin-right: 8px;\n  font-size: 0px;\n  margin-top: -10px;\n`;\n\nconst Search = styled.div`\n  opacity: 1;\n  flex-grow: 1;\n  margin-top: -10px;\n  position: relative;\n  & > div {\n    max-width: 280px;\n    input {\n      border: none;\n      box-shadow: none;\n      background-color: #eef3f8;\n      border-radius: 2px;\n      color: rgba(0, 0, 0, 0.9);\n      width: 270px;\n      padding: 0 8px 0 40px;\n      line-height: 1.75;\n      font-weight: 400;\n      font-size: 14px;\n      height: 34px;\n      border-color: #dce6f1;\n      vertical-align: text-top;\n    }\n  }\n`;\n\nconst SearchIcon = styled.div`\n  width: 40px;\n  position: absolute;\n  z-index: 1;\n  top: 10px;\n  left: 2px;\n  border-radius: 0 2px 2px 0;\n  margin: 0;\n  pointer-events: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Nav = styled.nav`\n  margin-left: auto;\n  display: block;\n  margin-bottom: -20px;\n  @media (max-width: 768px) {\n    position: fixed;\n    left: 0;\n    bottom: 0;\n    background: white;\n    width: 100%;\n  }\n`;\n\nconst NavListWrap = styled.ul`\n  display: flex;\n  flex-wrap: nowrap;\n  list-style-type: none;\n  .active {\n    span:after {\n      content: \"\";\n      transform: scaleX(1);\n      border-bottom: 2px solid var(--white, #fff);\n      bottom: 0;\n      left: 0;\n      position: absolute;\n      transition: transform 0.2s ease-in-out;\n      width: 100%;\n      border-color: rgba(0, 0, 0, 0.9);\n    }\n  }\n`;\n\nconst NavList = styled.li`\n  display: flex;\n  align-items: center;\n  a {\n    align-items: center;\n    background: transparent;\n    display: flex;\n    flex-direction: column;\n    font-size: 12px;\n    font-weight: 400;\n    justify-content: center;\n    line-height: 1.5;\n    min-height: 52px;\n    min-width: 80px;\n    position: relative;\n    text-decoration: none;\n    span {\n      color: rgba(0, 0, 0, 0.6);\n      display: flex;\n      align-items: center;\n    }\n    @media (max-width: 768px) {\n      min-width: 70px;\n    }\n  }\n  &:hover,\n  &:active {\n    a {\n      span {\n        color: rgba(0, 0, 0, 0.9);\n      }\n    }\n  }\n`;\n\nconst SignOut = styled.div`\n  position: absolute;\n  top: 45px;\n  background: white;\n  border-radius: 0 0 5px 5px;\n  width: 100px;\n  height: 40px;\n  font-size: 16px;\n  transition-duration: 167ms;\n  text-align: center;\n  display: none;\n`;\n\nconst User = styled(NavList)`\n  a > svg {\n    width: 24px;\n    border-radius: 50%;\n  }\n  a > img {\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n  }\n  span {\n    display: flex;\n    align-items: center;\n  }\n  &:hover {\n    ${SignOut} {\n      align-items: center;\n      display: flex;\n      justify-content: center;\n    }\n  }\n`;\n\nconst Work = styled(User)`\n  border-left: 1px solid rgba(0, 0, 0, 0.08);\n`;\n\nexport default withStyles(styles, { withTheme: true })(withCookies(Header));\n","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Sidebar/Sidebar.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Feed.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Login/Login.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Header/HeaderOption.js",[],["177","178"],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/InputOption.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Post.js",["179","180"],"import InputOption from \"./InputOption\";\nimport \"./Post.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport React, { Component } from \"react\";\nimport Count from \"./Count\";\nimport { withCookies } from \"react-cookie\";\nimport Comments from \"./Comments\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport EditPost from \"./EditPost\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Link } from \"react-router-dom\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UserContext from \"../userContext\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: \"\",\n      has_liked: false,\n      has_commented: false,\n      post: this.props.post,\n      showComment: false,\n      comment: \"\",\n      user_commented: false,\n      editPost: false,\n      anchorEl: null,\n      modalPost: false,\n      deleteModal: false,\n    };\n  }\n  moreOptions = (e) => {\n    console.log(\"more clicked\");\n    this.setState({\n      anchorEl: e.currentTarget,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      anchorEl: null,\n    });\n  };\n  handleEdit = () => {\n    this.setState({ modalPost: true });\n    this.handleClose();\n  };\n  modalDelete = () => {\n    this.setState({ deleteModal: true });\n    this.handleClose();\n  };\n  handleDelete = () => {\n    this.setState({ deleteModal: false });\n    fetch(\n      `${process.env.REACT_APP_API_URL}/papi/posts/${this.props.post.id}/`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n        },\n      }\n    )\n      .then((resp) => {\n        console.log(this.props.activityDelete);\n        if (this.props.activityDelete) {\n          this.props.activityUpdate();\n\n          this.setState({ deleteModal: false });\n        } else {\n          this.props.updatePost();\n        }\n      })\n\n      .catch((error) => console.log(error));\n    this.handleClose();\n  };\n  handleComment = (e) => {\n    console.log(e.target.value);\n    this.setState({ comment: e.target.value });\n  };\n  submitComment = () => {\n    this.setState({ has_commented: false });\n    fetch(\n      `${process.env.REACT_APP_API_URL}/papi/posts/${this.props.post.id}/comment/`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n        },\n        body: JSON.stringify({\n          comment: this.state.comment,\n        }),\n      }\n    )\n      .then((resp) => resp.json())\n      .then((resp) => {\n        if (resp.result) {\n          this.setState({ has_commented: true, user_commented: true });\n        }\n      })\n\n      .catch((error) => console.log(error));\n    this.setState({\n      comment: \"\",\n    });\n  };\n  submitLike = () => {\n    if (!this.state.has_liked) {\n      fetch(\n        `${process.env.REACT_APP_API_URL}/papi/posts/${this.props.post.id}/likePost/`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${\n              this.props.cookies.get(\"auth-token\").token\n            }`,\n          },\n        }\n      )\n        .then((resp) => resp.json())\n        .then((resp) => {\n          if (resp.result) {\n            this.setState({\n              has_liked: true,\n            });\n          }\n        })\n        .catch((errors) => console.log(errors));\n    } else {\n      fetch(\n        `${process.env.REACT_APP_API_URL}/papi/posts/${this.props.post.id}/dislikePost/`,\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${\n              this.props.cookies.get(\"auth-token\").token\n            }`,\n          },\n        }\n      )\n        .then(() => {\n          this.setState({ has_liked: false });\n        })\n        .catch((errors) => console.log(errors));\n    }\n  };\n\n  fetchUser = (id) => {\n    fetch(`${process.env.REACT_APP_API_URL}/uapi/users/${id}/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then((res) =>\n        this.setState({\n          user: res,\n        })\n      )\n      .catch((error) => console.log(error));\n  };\n\n  componentDidMount() {\n    // will highlight like blue if current use has liked the post\n    this.fetchUser(this.props.post.user);\n    if (\n      this.props.post.likes.some(\n        (e) => e.user === this.props.cookies.get(\"auth-token\").user.id\n      )\n    ) {\n      this.setState({ has_liked: true });\n    }\n  }\n  // to instantly getting the comments and likes w/o refreshing\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.has_liked !== this.state.has_liked ||\n      prevState.has_commented !== this.state.has_commented\n    ) {\n      fetch(\n        `${process.env.REACT_APP_API_URL}/papi/posts/${this.props.post.id}/`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${\n              this.props.cookies.get(\"auth-token\").token\n            }`,\n          },\n        }\n      )\n        .then((resp) => resp.json())\n        .then((res) =>\n          this.setState({\n            post: res,\n          })\n        )\n        .catch((error) => console.log(error));\n    }\n  }\n  modalShowComment = () => {\n    this.setState({ showComment: !this.state.showComment });\n  };\n  render() {\n    const { post } = this.props;\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__header\">\n          {this.state.user.profile_pic ? (\n            <Avatar src={this.state.user.profile_pic} alt=\"Profile\" />\n          ) : (\n            <Avatar\n              className=\"post__image\"\n              src=\"/images/user.svg\"\n              alt=\"Profile\"\n            />\n          )}\n\n          <div className=\"post__info\">\n            {this.state.user.id ==\n            this.props.cookies.get(\"auth-token\").user.id ? (\n              <Link to={{ pathname: \"profile\" }} style={{ color: \"black\" }}>\n                <span style={{ fontWeight: \"bold\" }}>\n                  {this.state.user.username}\n                </span>\n              </Link>\n            ) : (\n              <Link\n                to={{ pathname: \"user_profile\", state: this.state.user.id }}\n                style={{ color: \"black\" }}\n              >\n                <span style={{ fontWeight: \"bold\" }}>\n                  {this.state.user.username}\n                </span>\n              </Link>\n            )}\n            <br />\n            <span className=\"text-muted\" style={{ fontSize: \"17px\" }}>\n              {this.state.user.firstName}\n            </span>\n            <span className=\"text-muted ml-1\" style={{ fontSize: \"17px\" }}>\n              {this.state.user.lastName}\n            </span>\n          </div>\n          {this.state.user.id ==\n          this.props.cookies.get(\"auth-token\").user.id ? (\n            <MoreHorizIcon\n              style={{ marginLeft: \"auto\", color: \"gray\" }}\n              onClick={(e) => this.moreOptions(e)}\n            />\n          ) : null}\n          <Menu\n            style={{ borderRadius: \"50%\" }}\n            id=\"simple-menu\"\n            anchorEl={this.state.anchorEl}\n            keepMounted\n            open={Boolean(this.state.anchorEl)}\n            onClose={this.handleClose}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"bottom\",\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"right\",\n            }}\n          >\n            <div className=\"p-1\">\n              <MenuItem onClick={this.handleEdit}>\n                <EditOutlinedIcon style={{ color: \"gray\" }} className=\"mr-2\" />\n                <span style={{ fontSize: \"18px\", fontWeight: \"bold\" }}>\n                  Edit Post\n                </span>\n              </MenuItem>\n              <MenuItem onClick={this.modalDelete}>\n                <DeleteIcon style={{ color: \"gray\" }} className=\"mr-2\" />\n                <span style={{ fontSize: \"18px\", fontWeight: \"bold\" }}>\n                  Delete Post\n                </span>\n              </MenuItem>\n            </div>\n            {/* <MenuItem onClick={this.handleClose}>Logout</MenuItem> */}\n          </Menu>\n          {this.state.deleteModal ? (\n            <Modal\n              show={this.state.deleteModal}\n              size=\"sm\"\n              aria-labelledby=\"contained-modal-title-vcenter\"\n              onHide={() => this.setState({ deleteModal: false })}\n              style={{\n                background: \"rgba(0,0,0,0.3)\",\n              }}\n              className=\"fade\"\n            >\n              <Modal.Header style={{ margin: \"auto\", borderBottom: \"0 none\" }}>\n                Delete Post?\n              </Modal.Header>\n\n              <Modal.Body\n                style={{\n                  padding: \"0px\",\n                  borderRadius: \"60px\",\n                }}\n              >\n                <div className=\"m-auto p-2 pb-3\">\n                  <span\n                    style={{\n                      fontSize: \"0.8rem\",\n                      lineHeight: \"0.5\",\n                      color: \"rgba(0,0,0,0.6)\",\n                    }}\n                  >\n                    Are you sure you want to permanently remove this post from\n                    LinkedIn?\n                  </span>\n                </div>\n                <Modal.Footer style={{ padding: \"0px\", paddingBottom: \"5px\" }}>\n                  <Button\n                    onClick={() => this.setState({ deleteModal: false })}\n                    style={cancel_button}\n                    type=\"submit\"\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    onClick={this.handleDelete}\n                    style={delete_button}\n                    type=\"submit\"\n                  >\n                    Delete\n                  </Button>\n                </Modal.Footer>\n              </Modal.Body>\n            </Modal>\n          ) : null}\n          {this.state.modalPost ? (\n            <Link\n              component={() => (\n                <EditPost\n                  post={post}\n                  closemodalPost={(e) => this.setState({ modalPost: e })}\n                />\n              )}\n            />\n          ) : null}\n        </div>\n\n        <div className=\"post__body\">\n          <p>{post.body}</p>\n          <img className=\"post__image\" src={post.image} alt=\"\" />\n\n          <Count\n            post={this.state.post}\n            modalShowComment={this.modalShowComment}\n          />\n        </div>\n        <div className=\"post__buttons\">\n          <InputOption\n            function={this.submitLike}\n            Icon={ThumbUpIcon}\n            title=\"Like\"\n            color={this.state.has_liked ? \"rgb(28, 133, 189)\" : \"gray\"}\n            post={post}\n          />\n          <InputOption\n            Icon={ChatOutlinedIcon}\n            function={this.modalShowComment}\n            title=\"Comment\"\n            color=\"gray\"\n          />\n          <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\n          <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\n        </div>\n\n        {this.state.showComment ? (\n          <div style={{ display: \"flex\" }} className=\"mt-3\">\n            <UserContext.Consumer>\n              {(props) => {\n                return <Avatar src={props.user.profile_pic} alt=\"Profile\" />;\n              }}\n            </UserContext.Consumer>\n            <input\n              placeholder=\"Add a comment...\"\n              value={this.state.comment}\n              onChange={(e) => this.handleComment(e)}\n              style={{ width: \"100%\", marginLeft: \"10px\", outline: \"none\" }}\n              className=\"feed__input\"\n            />\n            {this.state.comment.length > 0 ? (\n              <Button style={post_button} onClick={this.submitComment}>\n                Post\n              </Button>\n            ) : null}\n          </div>\n        ) : null}\n        {this.state.showComment &&\n          this.state.post.comments.map((comment) => (\n            <Comments\n              key={comment.id}\n              post={this.state.post}\n              comment={comment}\n            />\n          ))}\n\n        {this.state.editPost ? <EditPost /> : null}\n      </div>\n    );\n  }\n}\nconst post_button = {\n  marginTop: \"-10px\",\n  paddingLeft: \"10px\",\n  paddingRight: \"10px\",\n  marginLeft: \"10px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  // display: \"flex\",\n  background: \"#0c66c2\",\n  color: \"white\",\n  border: \"solid 1px #0c66c2\",\n  width: \"110px\",\n};\nconst delete_button = {\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  marginTop: \"10px\",\n  marginLeft: \"5px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  display: \"flex\",\n  background: \"#0c66c2\",\n  color: \"white\",\n  border: \"solid 1px #0c66c2\",\n  fontSize: \"16px\",\n};\nconst cancel_button = {\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  marginTop: \"10px\",\n  marginLeft: \"10px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  display: \"flex\",\n  background: \"white\",\n  color: \"rgba(0,0,0,0.6)\",\n  border: \"solid 1px black\",\n  fontSize: \"16px\",\n};\n\nexport default withCookies(Post);\n\n// const Post =  forwardRef (({name,description, message, photoUrl}, ref) => {\n//     return (\n//         <div ref ={ref} className ='post'>\n//         <div className=\"post__header\">\n//             <Avatar className=\"mt-1\" src=\"https://img.republicworld.com/republic-prod/stories/promolarge/xxhdpi/sdwpmnu8jc7dl86x_1613127617.jpeg\">{name[0]}</Avatar>\n//             <div className=\"post__info\">\n//                 <span style={{fontWeight:\"bold\"}}>{name}</span><br/>\n//                 <span className=\"text-muted\" style={{fontSize:\"17px\"}}>{description}</span>\n//             </div>\n//         </div>\n\n//          <div className=\"post__body\">\n//              <p>{message}</p>\n//          </div>\n//          <div className=\"post__buttons\">\n//              <InputOption Icon = {ThumbUpIcon}  title =\"Like\" color =\"gray\"/>\n//              <InputOption Icon = {ChatOutlinedIcon}  title =\"Comment\" color =\"gray\"/>\n//              <InputOption Icon = {ShareOutlinedIcon}  title =\"Share\" color =\"gray\"/>\n//              <InputOption Icon = {SendOutlinedIcon}  title =\"Send\" color =\"gray\"/>\n//          </div>\n//         </div>\n//     )\n// })\n\n// export default Post;\n","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Count.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Home/Home.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Register/Register.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/CreatePost.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Comments.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/Profile.js",["181"],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/About.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/Education.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/License.js",["182"],"import React, { Component } from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { Modal } from \"react-bootstrap\";\nimport { withCookies } from \"react-cookie\";\nimport \"./License.css\";\n\nclass License extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modelShow: true,\n      issue_date_error: \"\",\n      expiration_date_error: \"\",\n      deleteModalShow: false,\n      credentials: {\n        name: \"\",\n        issuing_org: \"\",\n        issue_date: null,\n        expiration_date: null,\n        credential_id: \"\",\n        user: this.props.cookies.get(\"auth-token\").user.id,\n      },\n    };\n  }\n\n  inputChanged = (event) => {\n    let cred = this.state.credentials;\n    cred[event.target.name] = event.target.value;\n    if (event.target.name === \"expiration_date\" && event.target.value === \"\") {\n      cred[\"expiration_date\"] = null;\n    }\n    if (event.target.name === \"issue_date\" && event.target.value === \"\") {\n      cred[\"issue_date\"] = null;\n    }\n    this.setState({ credentials: cred });\n  };\n\n  // for hide the modal\n  onhide = () => {\n    this.setState({ modelShow: false });\n    this.props.onLicenseModal(false);\n  };\n  // create new liecense or cetificate for currently login user\n  createLicense = (e) => {\n    fetch(`${process.env.REACT_APP_API_URL}/profile/license/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n      },\n      body: JSON.stringify(this.state.credentials),\n    })\n      .then((resp) => resp.json())\n      .then((resp) => {\n        console.log(resp);\n        this.props.cookies.set(\"license-id\", resp.id);\n        this.props.updateLicense();\n      })\n      .catch((error) => console.log(error));\n\n    e.preventDefault();\n    this.props.onLicenseModal(false);\n  };\n\n  // edit license or certificate for currently login user\n  editLicense = (e) => {\n    fetch(\n      `${process.env.REACT_APP_API_URL}/profile/license/${this.props.editLicense_id}/`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n        },\n        body: JSON.stringify(this.state.credentials),\n      }\n    )\n      .then((resp) => resp.json())\n      .then((resp) => {\n        console.log(resp);\n        if (!resp.name) {\n          if (resp.issue_date) {\n            this.setState({ issue_date_error: resp.issue_date });\n          }\n          if (resp.expiration_date) {\n            this.setState({ expiration_date_error: resp.expiration_date });\n          }\n        } else {\n          this.setState({ modelShow: false });\n          this.props.updateLicense();\n          e.preventDefault();\n          this.props.onLicenseModal(false);\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n\n  // get data for particular license\n  getLicenseData = () => {\n    if (\n      this.props.cookies.get(\"deleted-license-id\") !== this.props.editLicense_id\n    ) {\n      fetch(\n        `${process.env.REACT_APP_API_URL}/profile/license/${this.props.editLicense_id}/`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Token ${\n              this.props.cookies.get(\"auth-token\").token\n            }`,\n          },\n        }\n      )\n        .then((resp) => resp.json())\n        .then((resp) => {\n          // console.log(resp);\n          if (resp) {\n            this.setState({\n              credentials: {\n                name: resp.name,\n                issuing_org: resp.issuing_org,\n                issue_date: resp.issue_date,\n                expiration_date: resp.expiration_date,\n                credential_id: resp.credential_id,\n                user: this.props.cookies.get(\"auth-token\").user.id,\n              },\n            });\n          }\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  // delete license\n  deleteLicense = (e) => {\n    this.props.cookies.set(\"deleted-license-id\", this.props.editLicense_id);\n    fetch(\n      `${process.env.REACT_APP_API_URL}/profile/license/${this.props.editLicense_id}/`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n        },\n      }\n    )\n      .then((resp) => this.props.updateLicense())\n\n      .catch((error) => console.log(error));\n  };\n\n  deleteModalDisplay = () => {\n    console.log(\"hell\");\n    this.setState({ deleteModalShow: true });\n  };\n\n  componentDidMount() {\n    if (!this.props.onCreateLicense) {\n      this.getLicenseData();\n    }\n  }\n\n  render() {\n    console.log(this.state.deleteModalShow);\n    return (\n      <Modal\n        show={this.state.modelShow}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        onHide={this.onhide}\n        style={{ background: \"rgba(0,0,0,0.2)\" }}\n        className=\"fade\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            <span style={{ fontSize: \"1.2rem\" }}>\n              Edit license or certification\n            </span>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"profile__modal\">\n          {/* name */}\n          <TextField\n            rowsMax={4}\n            rowsMin={4}\n            variant=\"outlined\"\n            size=\"large\"\n            type=\"text\"\n            fullWidth\n            id=\"name\"\n            value={this.state.credentials.name}\n            label=\"Name\"\n            name=\"name\"\n            onChange={this.inputChanged}\n            required\n            className=\"mb-3\"\n          />\n          {/* issuing_org */}\n          <TextField\n            rowsMax={4}\n            rowsMin={4}\n            variant=\"outlined\"\n            size=\"large\"\n            type=\"text\"\n            fullWidth\n            id=\"issuing_org\"\n            value={this.state.credentials.issuing_org}\n            label=\"Issuing_organization\"\n            name=\"issuing_org\"\n            onChange={this.inputChanged}\n            required\n            className=\"mb-3\"\n          />\n\n          {/* issue_date and expiration date */}\n          <div style={{ display: \"flex  \" }}>\n            <TextField\n              error={this.state.issue_date_error ? true : false}\n              helperText={this.state.issue_date_error}\n              className=\"mt-3 mb-5 mr-2\"\n              size=\"small\"\n              type=\"date\"\n              fullWidth\n              id=\"issue_date\"\n              value={this.state.credentials.issue_date}\n              label=\"Issue Date\"\n              name=\"issue_date\"\n              onChange={this.inputChanged}\n              required\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              error={this.state.expiration_date_error ? true : false}\n              helperText={this.state.expiration_date_error}\n              className=\"mt-3 mb-5 \"\n              size=\"small\"\n              type=\"date\"\n              fullWidth\n              id=\"expiration_date\"\n              value={this.state.credentials.expiration_date}\n              label=\"Expiration Date\"\n              name=\"expiration_date\"\n              onChange={this.inputChanged}\n              required\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </div>\n          {/* credential_id */}\n          <TextField\n            rowsMax={4}\n            rowsMin={4}\n            variant=\"outlined\"\n            size=\"large\"\n            type=\"text\"\n            fullWidth\n            id=\"credential_id\"\n            value={this.state.credentials.credential_id}\n            label=\"Credential ID\"\n            name=\"credential_id\"\n            onChange={this.inputChanged}\n            required\n            className=\"mb-3\"\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          {this.props.onCreateLicense ? (\n            <Button\n              onClick={this.createLicense}\n              style={save_button}\n              type=\"submit\"\n            >\n              <span style={{ fontWeight: \"bold\", textTransform: \"none\" }}>\n                Save\n              </span>\n            </Button>\n          ) : (\n            <React.Fragment>\n              <Button\n                onClick={this.deleteModalDisplay}\n                style={delete_button}\n                type=\"submit\"\n                className=\"mr-auto\"\n              >\n                <span style={{ fontWeight: \"bold\", textTransform: \"none\" }}>\n                  Delete\n                </span>\n              </Button>\n              <Button\n                onClick={this.editLicense}\n                style={save_button}\n                type=\"submit\"\n                className=\"ml-auto\"\n              >\n                <span style={{ fontWeight: \"bold\", textTransform: \"none\" }}>\n                  Save\n                </span>\n              </Button>\n            </React.Fragment>\n          )}\n        </Modal.Footer>\n        {this.state.deleteModalShow ? (\n          <Modal\n            className=\"mine\"\n            show={this.state.deleteModalShow}\n            size=\"sm\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            onHide={() => this.setState({ deleteModalShow: false })}\n            style={{ background: \"rgba(0,0,0,0.3)\" }}\n            className=\"fade\"\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>\n                <span style={{ fontSize: \"1.1rem\" }}>\n                  Delete license or certification\n                </span>\n              </Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n              <span>\n                Are you sure you want to delete {this.state.credentials.name} ?\n              </span>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                onClick={() => this.setState({ deleteModalShow: false })}\n                style={cancel_button}\n                type=\"submit\"\n              >\n                <span style={{ fontWeight: \"bold\", textTransform: \"none\" }}>\n                  No thanks\n                </span>\n              </Button>\n              <Button\n                onClick={this.deleteLicense}\n                style={save_button}\n                type=\"submit\"\n              >\n                <span style={{ fontWeight: \"bold\", textTransform: \"none\" }}>\n                  Delete\n                </span>\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        ) : null}\n      </Modal>\n    );\n  }\n}\n\nconst save_button = {\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  marginTop: \"10px\",\n  marginLeft: \"10px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  display: \"flex\",\n  background: \"#0c66c2\",\n  color: \"white\",\n  border: \"solid 1px #0c66c2\",\n  fontSize: \"20px\",\n};\n\nconst delete_button = {\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  marginTop: \"10px\",\n  marginLeft: \"10px\",\n  borderRadius: \"50px\",\n  display: \"flex\",\n  color: \"rgb(95, 95, 95)\",\n  border: \"solid 1px black\",\n  textTransform: \"none\",\n  fontSize: \"20px\",\n};\n\nconst cancel_button = {\n  // paddingLeft: \"20px\",\n  // paddingRight: \"20px\",\n  marginTop: \"10px\",\n  // marginLeft: \"10px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  display: \"flex\",\n  background: \"white\",\n  color: \"rgba(0,0,0,0.6)\",\n  border: \"solid 1px black\",\n  fontSize: \"20px\",\n};\n\nexport default withCookies(License);\n","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/EditPost.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/AddProfilePic.js",["183"],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/ActivityLeft.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/ActivityRight.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/ActivityMain.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/AddSkills.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/EditInfoModal.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/EditSkill.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/GenerateData.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Network/Network.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Network/NetworkLeft.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Network/UserList.js",["184","185","186","187","188"],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Network/UserCards.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/AddCoverPic.js",["189","190"],"import React, { Component } from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Modal } from \"react-bootstrap\";\nimport CameraAltRoundedIcon from \"@material-ui/icons/CameraAltRounded\";\nimport { Avatar, Button } from \"@material-ui/core\";\nimport \"./AddProfilePic.css\";\nimport { withCookies } from \"react-cookie\";\n\nexport class AddProfilePic extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modalCoverShow: this.props.modalCoverShow,\n      modalCoverDelete: false,\n      cover_pic: this.props.cover_pic,\n      cover_picAsFile: null,\n    };\n  }\n\n  removeImage = () => {\n    this.setState({\n      modalCoverDelete: true,\n    });\n  };\n\n  handleCoverPic = () => {\n    // console.log(window.location.origin + \"/images/user.svg\");\n    var form_data = new FormData();\n\n    if (this.state.cover_picAsFile) {\n      form_data.set(\n        \"cover_pic\",\n        this.state.cover_picAsFile,\n        this.state.cover_picAsFile.name\n      );\n    }\n    console.log(this.props.cookies.get(\"auth-token\").token);\n    fetch(\n      `${process.env.REACT_APP_API_URL}/uapi/users/${\n        this.props.cookies.get(\"auth-token\").user.id\n      }/update_user/`,\n      {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n        },\n        body: form_data,\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        this.setState({ modalCoverShow: false });\n        window.location.reload();\n        console.log(\"response\", res);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  handleDelete = () => {\n    fetch(\n      `${process.env.REACT_APP_API_URL}/uapi/users/${\n        this.props.cookies.get(\"auth-token\").user.id\n      }/delete_cover_pic/`,\n      {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        this.setState({ modalCoverDelete: false, modalCoverShow: false });\n        window.location.reload();\n        console.log(\"response\", res);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    console.log(\n      this.props.cover_pic.split(\"/\")[\n        this.props.cover_pic.split(\"/\").length - 2\n      ]\n    );\n    return (\n      <div className=\"p-auto\">\n        <Modal\n          style={{\n            height: \"700px\",\n          }}\n          scrollable={true}\n          show={this.state.modalCoverShow}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n          onHide={() => this.setState({ modalCoverShow: false })}\n        >\n          <Modal.Header\n            closeButton\n            autoFocus\n            style={{ borderBottom: \"0 none\" }}\n            // onClick={() => this.setState({ modalCoverShow: false })}\n          >\n            <Modal.Title\n              style={{\n                fontSize: \"1.2rem\",\n              }}\n              id=\"contained-modal-title-vcenter\"\n            >\n              <span>Cover Photo</span>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <img\n              className=\"m-auto\"\n              style={{ width: \"100%\", height: \"250px\", objectFit: \"cover\" }}\n              src={this.state.cover_pic}\n              alt=\"Profile\"\n            />\n          </Modal.Body>\n\n          <Modal.Footer style={{ borderTopColor: \"gray\" }}>\n            <input\n              style={{ display: \"none\" }}\n              type=\"file\"\n              id=\"file\"\n              onChange={(e) =>\n                this.setState(\n                  {\n                    cover_pic: URL.createObjectURL(e.target.files[0]),\n                    cover_picAsFile: e.target.files[0],\n                  },\n                  function () {\n                    console.log(\n                      \"file\",\n                      e.target.files[0],\n                      URL.createObjectURL(e.target.files[0])\n                    );\n                  }\n                )\n              }\n            />\n            <label htmlFor=\"file\">\n              <CameraAltRoundedIcon\n                className=\"ml-4\"\n                style={{ marginLeft: \"10px\" }}\n              />\n              <div>\n                <span>Add Photo</span>\n              </div>\n            </label>\n            <div className=\"mr-auto ml-3\">\n              {this.props.cover_pic.split(\"/\")[\n                this.props.cover_pic.split(\"/\").length - 2\n              ] != \"defaults\" ? (\n                <React.Fragment>\n                  <DeleteIcon className=\"ml-2\" onClick={this.removeImage} />\n                  <div>\n                    <span>Delete</span>\n                  </div>\n                </React.Fragment>\n              ) : null}\n            </div>\n            <Button onClick={this.handleCoverPic} style={post_button}>\n              Upload Photo\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        {this.state.cover_pic ? (\n          <Modal\n            show={this.state.modalCoverDelete}\n            size=\"sm\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            onHide={() => this.setState({ modalCoverDelete: false })}\n            style={{\n              background: \"rgba(0,0,0,0.3)\",\n            }}\n          >\n            <Modal.Header closeButton autoFocus>\n              Delete?\n            </Modal.Header>\n\n            <Modal.Body\n              style={{\n                padding: \"0px\",\n                borderRadius: \"60px\",\n              }}\n            >\n              <div className=\"m-auto p-2 pb-3\">\n                <span\n                  style={{\n                    fontSize: \"0.8rem\",\n                    lineHeight: \"0.5\",\n                    color: \"rgba(0,0,0,0.6)\",\n                  }}\n                >\n                  Are you sure you want to remove this cover picture from\n                  LinkedIn?\n                </span>\n              </div>\n              <Modal.Footer>\n                <Button\n                  onClick={() => this.setState({ modalCoverDelete: false })}\n                  style={cancel_button}\n                  type=\"submit\"\n                >\n                  Cancel\n                </Button>\n\n                <Button\n                  onClick={this.handleDelete}\n                  style={delete_button}\n                  type=\"submit\"\n                >\n                  Delete\n                </Button>\n              </Modal.Footer>\n            </Modal.Body>\n          </Modal>\n        ) : null}\n      </div>\n    );\n  }\n}\nconst post_button = {\n  marginTop: \"-10px\",\n  paddingLeft: \"10px\",\n  paddingRight: \"10px\",\n  marginLeft: \"10px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  fontSize: \"15px\",\n  // display: \"flex\",\n  background: \"#0c66c2\",\n  color: \"white\",\n  border: \"solid 1px #0c66c2\",\n  //   width: \"110px\",\n};\nconst delete_button = {\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  marginTop: \"10px\",\n  marginLeft: \"5px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  display: \"flex\",\n  background: \"#0c66c2\",\n  color: \"white\",\n  border: \"solid 1px #0c66c2\",\n  fontSize: \"16px\",\n};\nconst cancel_button = {\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  marginTop: \"10px\",\n  marginLeft: \"10px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  display: \"flex\",\n  background: \"white\",\n  color: \"rgba(0,0,0,0.6)\",\n  border: \"solid 1px black\",\n  fontSize: \"16px\",\n};\n\nexport default withCookies(AddProfilePic);\n","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/OtherUserProfile.js",["191","192"],"import React, { Component } from \"react\";\nimport \"./Profile.css\";\nimport { Avatar, Typography, Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { FiChevronDown, FiChevronUp } from \"react-icons/fi\";\nimport { withCookies } from \"react-cookie\";\nimport ShowFollowers from \"./ShowFollowers\";\nimport ContactInfo from \"./ContactInfo\";\nimport { trackPromise } from \"react-promise-tracker\";\n\nclass OtherUserProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: \"\",\n\n      MAX_items: 2,\n      showMoreSkill: false,\n      showMoreEducation: false,\n      showMoreLicense: false,\n\n      showFollowers: false,\n      showContactInfo: false,\n    };\n  }\n\n  //toggle skill and getRenderSkills for display show more and show less button based on Max_items\n  toggleSkill = () => {\n    this.setState({ showMoreSkill: !this.state.showMoreSkill });\n  };\n\n  getRenderSkills = () => {\n    if (this.state.showMoreSkill) {\n      return this.state.user.user_skills;\n    } else if (this.state.user.user_skills) {\n      return this.state.user.user_skills.slice(0, this.state.MAX_items);\n    }\n    return null;\n  };\n\n  //toggle education and getRendereducations for display show more and show less button based on Max_items\n  toggleEducation = () => {\n    this.setState({ showMoreEducation: !this.state.showMoreEducation });\n  };\n\n  getRenderEducation = () => {\n    if (this.state.showMoreEducation) {\n      return this.state.user.user_education;\n    } else if (this.state.user.user_education) {\n      return this.state.user.user_education.slice(0, this.state.MAX_items);\n    }\n\n    return null;\n  };\n\n  //toggle license and getRenderlicenses for display show more and show less button based on Max_items\n  toggleLicense = () => {\n    this.setState({ showMoreLicense: !this.state.showMoreLicense });\n  };\n\n  getRenderLicense = () => {\n    if (this.state.showMoreLicense) {\n      return this.state.user.user_license;\n    } else if (this.state.user.user_license) {\n      return this.state.user.user_license.slice(0, this.state.MAX_items);\n    }\n    return null;\n  };\n\n  componentDidMount() {\n    trackPromise(\n      fetch(\n        `${process.env.REACT_APP_API_URL}/uapi/users/${this.props.location.state}/`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n        .then((resp) => resp.json())\n        .then((resp) => {\n          this.setState({ user: resp });\n        })\n    ).catch((error) => console.log(error));\n  }\n\n  render() {\n    return (\n      <div className=\"profile\">\n        <div className=\"profile__top\">\n          <img src={this.state.user.cover_pic} alt=\"background\" />\n\n          <Avatar\n            className=\"img_wrp\"\n            src={this.state.user.profile_pic}\n            alt=\"Profile\"\n          />\n\n          <div className=\"profile__stats\" style={{ marginTop: \"-10px\" }}>\n            <div className=\"profile__stat\">\n              <span style={{ fontWeight: \"bold\", fontSize: \"100%\" }}>\n                {\" \"}\n                <h4>\n                  {this.state.user.user_profile ? (\n                    this.state.user.user_profile.firstName ? (\n                      <span style={{ fontWeight: \"bold\", fontSize: \"100%\" }}>\n                        {this.state.user.user_profile.firstName +\n                          \" \" +\n                          this.state.user.user_profile.lastName}\n                      </span>\n                    ) : (\n                      <span style={{ fontWeight: \"bold\", fontSize: \"100%\" }}>\n                        {this.state.user.username}\n                      </span>\n                    )\n                  ) : (\n                    <span style={{ fontWeight: \"bold\", fontSize: \"100%\" }}>\n                      {this.state.user.username}\n                    </span>\n                  )}\n                </h4>\n              </span>\n            </div>\n            {this.state.user.user_profile ? (\n              this.state.user.user_profile.headLine ? (\n                <Typography className=\"profile__stat\">\n                  <span>{this.state.user.user_profile.headLine}</span>\n                </Typography>\n              ) : null\n            ) : null}\n\n            <Typography className=\"profile__stat\">\n              {this.state.user.user_profile ? (\n                this.state.user.user_profile.location ? (\n                  <React.Fragment>\n                    <span className=\"text-muted\" style={{ fontSize: \"16px\" }}>\n                      {this.state.user.user_profile.location}\n                      {\", \"}\n                    </span>\n                    {this.state.user.user_profile.country ? (\n                      <span className=\"text-muted\" style={{ fontSize: \"16px\" }}>\n                        {this.state.user.user_profile.country}\n                      </span>\n                    ) : null}\n                    <Typography className=\"profile__stat_connections\">\n                      <span style={{ fontWeight: \"bold\", fontSize: \"16px\" }}>\n                        {this.state.user.followers &&\n                        this.state.user.followers.length > 500\n                          ? \"500+\"\n                          : this.state.user.followers.length}{\" \"}\n                        {this.state.user.followers &&\n                        this.state.user.followers.length > 1\n                          ? \"Connections\"\n                          : \"Connection\"}\n                      </span>\n                    </Typography>\n                  </React.Fragment>\n                ) : (\n                  <Typography\n                    className=\"profile__stat_connections\"\n                    style={{ marginLeft: \"-20px\" }}\n                  >\n                    <span style={{ fontWeight: \"bold\", fontSize: \"16px\" }}>\n                      {this.state.user.followers &&\n                      this.state.user.followers.length > 500\n                        ? \"500+\"\n                        : this.state.user.followers.length}{\" \"}\n                      {this.state.user.followers &&\n                      this.state.user.followers.length > 1\n                        ? \"Connections\"\n                        : \"Connection\"}\n                    </span>\n                  </Typography>\n                )\n              ) : null}\n            </Typography>\n\n            <Link className=\"profile__stat_connections mt-2\">\n              <span\n                style={{ fontWeight: \"bold\", fontSize: \"16px\" }}\n                onClick={() => this.setState({ showContactInfo: true })}\n              >\n                Contact info\n              </span>\n            </Link>\n            {this.state.showContactInfo ? (\n              this.state.user.user_profile ? (\n                <ContactInfo\n                  user={this.state.user.user_profile}\n                  email={this.state.user.email}\n                  onContactChange={(e) => this.setState({ showContactInfo: e })}\n                />\n              ) : (\n                <ContactInfo\n                  user={this.state.user}\n                  email={this.state.user.email}\n                  onContactChange={(e) => this.setState({ showContactInfo: e })}\n                />\n              )\n            ) : null}\n          </div>\n        </div>\n\n        {/* About */}\n        <div className=\"profile__about mt-3\">\n          <div className=\"profile__about_header d-flex justify-content-between\">\n            <span style={{ fontSize: \"25px\" }}>About</span>\n          </div>\n          <p className=\"profile__stat_about\">\n            {this.state.user.user_about\n              ? this.state.user.user_about.about\n              : null}\n          </p>\n        </div>\n\n        {/*  Activity */}\n\n        <div className=\"profile__activity\">\n          <div className=\"profile__activity_header d-flex justify-content-between\">\n            <span style={{ fontSize: \"25px\" }}>Activity</span>\n          </div>\n          <div>\n            <span\n              className=\"profile__activity_followers\"\n              style={{ marginTop: \"-10px\", marginBottom: \"10px\" }}\n              onClick={() => this.setState({ showFollowers: true })}\n            >\n              {this.state.user.followers ? this.state.user.followers.length : 0}{\" \"}\n              {this.state.user.followers &&\n              this.state.user.followers.length == 1\n                ? \"follower\"\n                : \"followers\"}\n            </span>\n          </div>\n          {this.state.showFollowers ? (\n            <ShowFollowers\n              followers={this.state.user.followers}\n              onChangeFollowers={(e) => this.setState({ showFollowers: e })}\n            />\n          ) : null}\n          <div className=\"pl-1\">\n            <span\n              style={{\n                fontSize: \"19px\",\n              }}\n            >\n              Posts {this.state.user.username} created, shared, or commented on\n              in the last 90 days are displayed here.\n            </span>\n          </div>\n          <div>\n            <Link\n              to={{ pathname: \"/activity\", state: this.state.user.id }}\n              style={{ textDecoration: \"none\" }}\n            >\n              <Button\n                className=\"mt-3\"\n                style={{\n                  width: \"100%\",\n                  marginBottom: \"-9px\",\n                  color: \"rgb(95, 95, 95)\",\n                  textTransform: \"none\",\n                }}\n              >\n                <span style={{ fontWeight: \"bold\" }}>See all Activity</span>\n              </Button>\n            </Link>\n          </div>\n        </div>\n\n        {/* Education  */}\n        <div className=\"profile__education\">\n          <div className=\"profile__education_header d-flex justify-content-between\">\n            <span style={{ fontSize: \"25px\" }}>Education</span>\n          </div>\n\n          <div>\n            {this.getRenderEducation() === null\n              ? null\n              : this.getRenderEducation().map((education) => (\n                  <div>\n                    <div className=\"profile__education_header d-flex justify-content-between\">\n                      <span\n                        style={{\n                          fontWeight: \"bold\",\n                          fontSize: \"25px\",\n                          textTransform: \"uppercase\",\n                        }}\n                      >\n                        {education.school}\n                      </span>\n                    </div>\n                    <span\n                      style={{ fontSize: \"18px\", marginTop: \"-15px\" }}\n                      className=\"d-flex ml-3\"\n                    >\n                      {education.degree}\n                    </span>\n                    <div>\n                      <span\n                        style={{ fontSize: \"15px\", color: \"#686868\" }}\n                        className=\"d-flex ml-3\"\n                      >\n                        {education.start_year}-{education.end_year}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n            {this.state.user.user_education &&\n            this.state.user.user_education.length > 2 ? (\n              <Button style={{ width: \"100%\" }} onClick={this.toggleEducation}>\n                {this.state.showMoreEducation ? (\n                  <span\n                    style={{\n                      fontWeight: \"bold\",\n                      textTransform: \"none\",\n                      color: \"rgb(95, 95, 95)\",\n                    }}\n                  >\n                    Show Less\n                  </span>\n                ) : (\n                  <span\n                    style={{\n                      fontWeight: \"bold\",\n                      textTransform: \"none\",\n                      color: \"rgb(95, 95, 95)\",\n                    }}\n                  >\n                    Show More\n                  </span>\n                )}\n                {this.state.showMoreEducation ? (\n                  <FiChevronUp className=\"ml-2\" />\n                ) : (\n                  <FiChevronDown className=\"ml-2\" />\n                )}\n              </Button>\n            ) : null}\n          </div>\n        </div>\n\n        {/* License & Certificate */}\n\n        <div className=\"profile__license\">\n          <div className=\"profile__license_header d-flex justify-content-between\">\n            <span style={{ fontSize: \"25px\" }}>Licenses & certifications</span>\n          </div>\n\n          <div>\n            {this.getRenderLicense() === null\n              ? null\n              : this.getRenderLicense().map((license) => (\n                  <div>\n                    <div className=\"profile__education_header d-flex justify-content-between\">\n                      <span style={{ fontWeight: \"bold\", fontSize: \"20px\" }}>\n                        {license.name}\n                      </span>\n                    </div>\n                    <span\n                      style={{ fontSize: \"18px\", marginTop: \"-15px\" }}\n                      className=\"d-flex ml-3\"\n                    >\n                      {license.issuing_org}\n                    </span>\n                    <div>\n                      {license.issue_date ? (\n                        <span\n                          style={{ fontSize: \"15px\", color: \"#686868\" }}\n                          className=\"d-flex ml-3\"\n                        >\n                          Issued {license.issue_date}{\" \"}\n                          {license.expiration_date ? \"-Expiration\" : null}{\" \"}\n                          {license.expiration_date}\n                        </span>\n                      ) : null}\n                    </div>\n                  </div>\n                ))}\n\n            {this.state.user.user_license &&\n            this.state.user.user_license.length > 2 ? (\n              <Button style={{ width: \"100%\" }} onClick={this.toggleLicense}>\n                {this.state.showMoreLicense ? (\n                  <span\n                    style={{\n                      fontWeight: \"bold\",\n                      textTransform: \"none\",\n                      color: \"rgb(95, 95, 95)\",\n                    }}\n                  >\n                    Show Less\n                  </span>\n                ) : (\n                  <span\n                    style={{\n                      fontWeight: \"bold\",\n                      textTransform: \"none\",\n                      color: \"rgb(95, 95, 95)\",\n                    }}\n                  >\n                    Show More\n                  </span>\n                )}\n                {this.state.showMoreLicense ? (\n                  <FiChevronUp className=\"ml-2\" />\n                ) : (\n                  <FiChevronDown className=\"ml-2\" />\n                )}\n              </Button>\n            ) : null}\n          </div>\n        </div>\n\n        {/* Skills & endorsements */}\n        <div className=\"profile__skills\">\n          <div className=\"profile__skills_header d-flex bd-highlight\">\n            <span style={{ fontSize: \"25px\" }} className=\"mr-auto\">\n              Skills & Endorsements\n            </span>\n          </div>\n\n          {this.getRenderSkills() == null\n            ? null\n            : this.getRenderSkills().map((skill) => (\n                <div className=\"profile__skills_name\">\n                  <span\n                    className=\"profile__skills_content\"\n                    style={{\n                      fontSize: \"20px\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    {skill.skill}\n                  </span>\n                  <hr />\n                </div>\n              ))}\n\n          {this.state.user.user_skills &&\n          this.state.user.user_skills.length > 2 ? (\n            <Button style={{ width: \"100%\" }} onClick={this.toggleSkill}>\n              {this.state.showMoreSkill ? (\n                <span\n                  style={{\n                    fontWeight: \"bold\",\n                    textTransform: \"none\",\n                    color: \"rgb(95, 95, 95)\",\n                  }}\n                >\n                  Show Less\n                </span>\n              ) : (\n                <span\n                  style={{\n                    fontWeight: \"bold\",\n                    textTransform: \"none\",\n                    color: \"rgb(95, 95, 95)\",\n                  }}\n                >\n                  Show More\n                </span>\n              )}\n              {this.state.showMoreSkill ? (\n                <FiChevronUp className=\"ml-2\" />\n              ) : (\n                <FiChevronDown className=\"ml-2\" />\n              )}\n            </Button>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst profile_button = {\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  marginTop: \"10px\",\n  marginLeft: \"10px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  display: \"flex\",\n  color: \"#0c66c2\",\n  border: \"solid 1px #0c66c2\",\n};\n\nexport default withCookies(OtherUserProfile);\n","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/ContactInfo.js",[],"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/ShowFollowers.js",["193"],"import React, { Component } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { withCookies } from \"react-cookie\";\nimport FollowersList from \"./FollowersList\";\n\nclass ShowFollowers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      modalShow: true,\n      followers: [],\n    };\n  }\n\n  onHide = () => {\n    this.setState({ modelShow: false });\n    this.props.onChangeFollowers(false);\n  };\n\n  componentDidMount() {\n    if (this.props.followers) {\n      for (let index = 0; index < this.props.followers.length; index++) {\n        fetch(\n          `${process.env.REACT_APP_API_URL}/uapi/userDetail/${this.props.followers[index].user_id}/`,\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        )\n          .then((resp) => resp.json())\n          .then((resp) => {\n            var joined = this.state.followers.concat([resp]);\n            this.setState({ followers: joined });\n          });\n      }\n    }\n  }\n\n  render() {\n    console.log(this.state.followers.length);\n    return (\n      <div>\n        <Modal\n          show={this.state.modalShow}\n          size=\"md\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n          onHide={this.onHide}\n        >\n          <Modal.Header closeButton>Followers</Modal.Header>\n          <Modal.Body className=\"profile__modal\">\n            {this.state.followers &&\n              this.state.followers.map((follower) => (\n                <FollowersList key={follower.id} follower={follower} />\n              ))}\n          </Modal.Body>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ShowFollowers;\n","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/FollowersList.js",["194"],"import React, { Component } from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { withCookies } from \"react-cookie\";\n\nclass FollowersList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showDetail: false,\n    };\n  }\n\n  render() {\n    return (\n      <div style={{ display: \"flex\", padding: \"10px\" }}>\n        <Avatar src={this.props.follower.profile_pic} alt=\"Profile\" />\n        {this.props.follower.id ===\n        this.props.cookies.get(\"auth-token\").user.id ? (\n          <Link to={{ pathname: \"profile\" }} style={{ color: \"black\" }}>\n            <span\n              className=\"ml-2 \"\n              style={{ fontWeight: \"bold\" }}\n              onClick={() => {\n                this.setState({ showDetail: true });\n              }}\n            >\n              {this.props.follower.username}\n            </span>\n          </Link>\n        ) : (\n          <Link\n            to={{ pathname: \"user_profile\", state: this.props.follower.id }}\n            style={{ color: \"black\" }}\n          >\n            <span\n              className=\"ml-2 \"\n              style={{ fontWeight: \"bold\" }}\n              onClick={() => {\n                this.setState({ showDetail: true });\n              }}\n            >\n              {this.props.follower.username}\n            </span>\n          </Link>\n        )}\n\n        {this.state.showDetail ? window.location.reload() : null}\n      </div>\n    );\n  }\n}\n\nexport default withCookies(FollowersList);\n","/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/userContext.js",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":17,"column":8,"nodeType":"201","messageId":"202","endLine":17,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":68,"column":54,"nodeType":"205","messageId":"206","endLine":68,"endColumn":56},{"ruleId":"203","severity":1,"message":"204","line":93,"column":57,"nodeType":"205","messageId":"206","endLine":93,"endColumn":59},{"ruleId":"203","severity":1,"message":"204","line":122,"column":54,"nodeType":"205","messageId":"206","endLine":122,"endColumn":56},{"ruleId":"203","severity":1,"message":"204","line":144,"column":57,"nodeType":"205","messageId":"206","endLine":144,"endColumn":59},{"ruleId":"203","severity":1,"message":"204","line":189,"column":55,"nodeType":"205","messageId":"206","endLine":189,"endColumn":57},{"ruleId":"203","severity":1,"message":"204","line":194,"column":54,"nodeType":"205","messageId":"206","endLine":194,"endColumn":56},{"ruleId":"195","replacedBy":"207"},{"ruleId":"197","replacedBy":"208"},{"ruleId":"203","severity":1,"message":"204","line":234,"column":33,"nodeType":"205","messageId":"206","endLine":234,"endColumn":35},{"ruleId":"203","severity":1,"message":"204","line":259,"column":31,"nodeType":"205","messageId":"206","endLine":259,"endColumn":33},{"ruleId":"209","severity":1,"message":"210","line":1018,"column":3,"nodeType":"211","messageId":"206","endLine":1018,"endColumn":12},{"ruleId":"212","severity":1,"message":"213","line":317,"column":13,"nodeType":"214","messageId":"215","endLine":317,"endColumn":29},{"ruleId":"203","severity":1,"message":"216","line":156,"column":17,"nodeType":"205","messageId":"206","endLine":156,"endColumn":19},{"ruleId":"199","severity":1,"message":"217","line":2,"column":10,"nodeType":"201","messageId":"202","endLine":2,"endColumn":16},{"ruleId":"199","severity":1,"message":"218","line":2,"column":18,"nodeType":"201","messageId":"202","endLine":2,"endColumn":24},{"ruleId":"203","severity":1,"message":"216","line":38,"column":36,"nodeType":"205","messageId":"206","endLine":38,"endColumn":38},{"ruleId":"219","severity":1,"message":"220","line":40,"column":19,"nodeType":"221","messageId":"222","endLine":40,"endColumn":66},{"ruleId":"219","severity":1,"message":"220","line":43,"column":19,"nodeType":"221","messageId":"222","endLine":43,"endColumn":76},{"ruleId":"199","severity":1,"message":"217","line":5,"column":10,"nodeType":"201","messageId":"202","endLine":5,"endColumn":16},{"ruleId":"203","severity":1,"message":"216","line":157,"column":17,"nodeType":"205","messageId":"206","endLine":157,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":232,"column":48,"nodeType":"205","messageId":"206","endLine":232,"endColumn":50},{"ruleId":"199","severity":1,"message":"223","line":479,"column":7,"nodeType":"201","messageId":"202","endLine":479,"endColumn":21},{"ruleId":"199","severity":1,"message":"224","line":3,"column":10,"nodeType":"201","messageId":"202","endLine":3,"endColumn":21},{"ruleId":"199","severity":1,"message":"225","line":3,"column":10,"nodeType":"201","messageId":"202","endLine":3,"endColumn":18},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"no-unused-vars","'GenerateData' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["226"],["227"],"no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","Expected '!==' and instead saw '!='.","'Avatar' is defined but never used.","'Button' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","'profile_button' is assigned a value but never used.","'withCookies' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]