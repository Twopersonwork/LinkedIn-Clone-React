{"ast":null,"code":"var _jsxFileName = \"/home/malav/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { usePromiseTracker } from \"react-promise-tracker\"; // const LoadingIndicator = (props) => {\n//   const { promiseInProgress } = usePromiseTracker();\n//   return (\n//     promiseInProgress && (\n//       <div class=\"loading-scr\">\n//         <div class=\"loading-animation\">\n//           <img src=\"/images/home-logo.svg\" alt=\"Linkedin logo\" class=\"logo\" />\n//           <div class=\"load-bar\"></div>\n//         </div>\n//       </div>\n//     )\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Loading = props => {\n  _s();\n\n  const {\n    promiseInProgress\n  } = usePromiseTracker();\n  return promiseInProgress && /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hellooo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 31\n  }, this);\n};\n\n_s(Loading, \"KTo1xiutw/iZHt+hlD1avyNKva4=\", false, function () {\n  return [usePromiseTracker];\n});\n\n_c = Loading;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"Loading\");","map":{"version":3,"sources":["/home/malav/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","usePromiseTracker","Loading","props","promiseInProgress","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,iBAAT,QAAkC,uBAAlC,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAwBH,iBAAiB,EAA/C;AAEA,SAAOG,iBAAiB,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA5B;AACD,CAJD;;GAAMF,O;UAC0BD,iB;;;KAD1BC,O;AAMNJ,QAAQ,CAACO,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,0BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAMEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAP,eAAe","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\n\n// const LoadingIndicator = (props) => {\n//   const { promiseInProgress } = usePromiseTracker();\n\n//   return (\n//     promiseInProgress && (\n//       <div class=\"loading-scr\">\n//         <div class=\"loading-animation\">\n//           <img src=\"/images/home-logo.svg\" alt=\"Linkedin logo\" class=\"logo\" />\n//           <div class=\"load-bar\"></div>\n//         </div>\n//       </div>\n//     )\n//   );\n// };\n\nconst Loading = (props) => {\n  const { promiseInProgress } = usePromiseTracker();\n\n  return promiseInProgress && <h1>Hellooo</h1>;\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <LoadingIndicator />\n    <Loading />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}