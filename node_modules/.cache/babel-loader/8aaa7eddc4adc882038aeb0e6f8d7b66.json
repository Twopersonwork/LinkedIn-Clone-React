{"ast":null,"code":"/**\n * A small utility function that allows me to apply a passed in ref along with\n * my own custom ref logic.\n *\n * @param instance - The DOM Node instance\n * @param ref - The prop ref\n */\nexport function applyRef(instance, ref) {\n  if (!ref) {\n    return;\n  }\n\n  if (typeof ref === \"function\") {\n    ref(instance);\n  } else if (typeof ref === \"object\") {\n    ref.current = instance;\n  }\n}","map":{"version":3,"sources":["../src/applyRef.ts"],"names":[],"mappings":"AAEA;;;;;;AAMG;AACH,OAAM,SAAU,QAAV,CAAsB,QAAtB,EAA0C,GAA1C,EAAsD;AAC1D,MAAI,CAAC,GAAL,EAAU;AACR;AACD;;AAED,MAAI,OAAO,GAAP,KAAe,UAAnB,EAA+B;AAC7B,IAAA,GAAG,CAAC,QAAD,CAAH;AACD,GAFD,MAEO,IAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AACjC,IAAA,GAAkC,CAAC,OAAnC,GAA6C,QAA7C;AACF;AACF","sourceRoot":"","sourcesContent":["/**\n * A small utility function that allows me to apply a passed in ref along with\n * my own custom ref logic.\n *\n * @param instance - The DOM Node instance\n * @param ref - The prop ref\n */\nexport function applyRef(instance, ref) {\n    if (!ref) {\n        return;\n    }\n    if (typeof ref === \"function\") {\n        ref(instance);\n    }\n    else if (typeof ref === \"object\") {\n        ref.current = instance;\n    }\n}\n//# sourceMappingURL=applyRef.js.map"]},"metadata":{},"sourceType":"module"}