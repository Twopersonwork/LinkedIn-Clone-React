{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable react/prop-types */\n\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar styles = bem(\"rmd-fab\");\n/**\n * This is a simple wrapper for the `Button` component that will conditionally\n * render the `Button` in a `<span>` to render as a floating action button.\n *\n * Note: You probably don't really want to use this externally since this is\n * really just required so that the click and focus states behavior will still\n * be contained within the button. The states behavior requires\n * `position: relative` to work while changing into a floating action button\n * makes it `position: fixed`.\n */\n\nexport var FAB = forwardRef(function FAB(_a, ref) {\n  var _b = _a.position,\n      position = _b === void 0 ? null : _b,\n      children = _a.children,\n      className = _a.className,\n      props = __rest(_a, [\"position\", \"children\", \"className\"]);\n\n  if (!position) {\n    return React.createElement(React.Fragment, null, children);\n  }\n\n  return React.createElement(\"span\", __assign({}, props, {\n    ref: ref,\n    className: cn(styles({\n      tl: position === \"top-left\",\n      tr: position === \"top-right\",\n      bl: position === \"bottom-left\",\n      br: position === \"bottom-right\"\n    }), className)\n  }), children);\n});","map":{"version":3,"sources":["../src/FAB.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AACA,OAAO,KAAP,IAAgB,UAAhB,QAAkD,OAAlD;AACA,OAAO,EAAP,MAAe,YAAf;AACA,SAAS,GAAT,QAAoB,iBAApB;AAoBA,IAAM,MAAM,GAAG,GAAG,CAAC,SAAD,CAAlB;AAEA;;;;;;;;;AASG;;AACH,OAAO,IAAM,GAAG,GAAG,UAAU,CAA4B,SAAS,GAAT,CACvD,EADuD,EAEvD,GAFuD,EAEpD;AADD,MAAA,EAAA,GAAA,EAAA,CAAA,QAAA;AAAA,MAAA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,EAAf;AAAA,MAAiB,QAAQ,GAAA,EAAA,CAAA,QAAzB;AAAA,MAA2B,SAAS,GAAA,EAAA,CAAA,SAApC;AAAA,MAAyC,KAAK,GAAA,MAAA,CAAA,EAAA,EAAhD,CAAA,UAAA,EAAA,UAAA,EAAA,WAAA,CAAgD,CAA9C;;AAGF,MAAI,CAAC,QAAL,EAAe;AACb,WAAO,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAG,QAAH,CAAP;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,EACW;AACT,IAAA,GAAG,EAAE,GADI;AAET,IAAA,SAAS,EAAE,EAAE,CACX,MAAM,CAAC;AACL,MAAA,EAAE,EAAE,QAAQ,KAAK,UADZ;AAEL,MAAA,EAAE,EAAE,QAAQ,KAAK,WAFZ;AAGL,MAAA,EAAE,EAAE,QAAQ,KAAK,aAHZ;AAIL,MAAA,EAAE,EAAE,QAAQ,KAAK;AAJZ,KAAD,CADK,EAOX,SAPW;AAFJ,GADX,CAAA,EAaG,QAbH,CADF;AAiBD,CAzB4B,CAAtB","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* eslint-disable react/prop-types */\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar styles = bem(\"rmd-fab\");\n/**\n * This is a simple wrapper for the `Button` component that will conditionally\n * render the `Button` in a `<span>` to render as a floating action button.\n *\n * Note: You probably don't really want to use this externally since this is\n * really just required so that the click and focus states behavior will still\n * be contained within the button. The states behavior requires\n * `position: relative` to work while changing into a floating action button\n * makes it `position: fixed`.\n */\nexport var FAB = forwardRef(function FAB(_a, ref) {\n    var _b = _a.position, position = _b === void 0 ? null : _b, children = _a.children, className = _a.className, props = __rest(_a, [\"position\", \"children\", \"className\"]);\n    if (!position) {\n        return React.createElement(React.Fragment, null, children);\n    }\n    return (React.createElement(\"span\", __assign({}, props, { ref: ref, className: cn(styles({\n            tl: position === \"top-left\",\n            tr: position === \"top-right\",\n            bl: position === \"bottom-left\",\n            br: position === \"bottom-right\",\n        }), className) }), children));\n});\n//# sourceMappingURL=FAB.js.map"]},"metadata":{},"sourceType":"module"}