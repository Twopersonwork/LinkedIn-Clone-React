{"ast":null,"code":"var _jsxFileName = \"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Post.js\";\nimport InputOption from \"./InputOption\"; // import React, { forwardRef } from \"react\";\n\nimport \"./Post.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport React, { Component } from \"react\";\nimport Count from \"./Count\";\nimport { withCookies } from \"react-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitLike = () => {\n      this.setState({\n        color: \"blue\"\n      });\n      fetch(`http://127.0.0.1:8000/papi/posts/${this.props.post.id}/likePost/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token d194a979f94b27587f743071a64f8d5c7d3dfb01\"\n        }\n      }).catch(errors => console.log(errors));\n    };\n\n    this.fetchUser = id => {\n      fetch(`http://127.0.0.1:8000/uapi/users/${id}/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token d194a979f94b27587f743071a64f8d5c7d3dfb01\"\n        }\n      }).then(resp => resp.json()).then(res => this.setState({\n        user: res\n      }, console.log(this.state.user))).catch(error => console.log(error));\n    };\n\n    this.state = {\n      user: \"\",\n      has_liked: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser(this.props.post.user);\n\n    if (this.props.post.likes.some(e => e.user == this.props.cookies.get(\"auth-user\").id)) {\n      this.setState({\n        has_liked: true\n      });\n      console.log(\"wohoo\");\n    }\n\n    console.log(this.props.post.likes);\n  }\n\n  render() {\n    const {\n      post\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__header\",\n        children: [this.state.user.profile_pic ? /*#__PURE__*/_jsxDEV(Avatar, {\n          src: this.state.user.profile_pic,\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n          src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTP9xCw-TO3d5DvvvTaUE2dx6VLYNO52xxG5A&usqp=CAU\",\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: this.state.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted\",\n            style: {\n              fontSize: \"17px\"\n            },\n            children: this.state.user.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted ml-1\",\n            style: {\n              fontSize: \"17px\"\n            },\n            children: this.state.user.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"post__image\",\n          src: post.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Count, {\n          likes: post.likes,\n          comments: post.comments,\n          no_of_like: post.no_of_like,\n          no_of_comment: post.no_of_comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(InputOption, {\n          submitLike: this.submitLike,\n          Icon: ThumbUpIcon,\n          title: \"Like\",\n          color: this.state.has_liked ? \"blue\" : \"grey\" // color={this.state.color}\n          ,\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: ChatOutlinedIcon,\n          title: \"Comment\",\n          color: \"gray\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: ShareOutlinedIcon,\n          title: \"Share\",\n          color: \"gray\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: SendOutlinedIcon,\n          title: \"Send\",\n          color: \"gray\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withCookies(Post); // const Post =  forwardRef (({name,description, message, photoUrl}, ref) => {\n//     return (\n//         <div ref ={ref} className ='post'>\n//         <div className=\"post__header\">\n//             <Avatar className=\"mt-1\" src=\"https://img.republicworld.com/republic-prod/stories/promolarge/xxhdpi/sdwpmnu8jc7dl86x_1613127617.jpeg\">{name[0]}</Avatar>\n//             <div className=\"post__info\">\n//                 <span style={{fontWeight:\"bold\"}}>{name}</span><br/>\n//                 <span className=\"text-muted\" style={{fontSize:\"17px\"}}>{description}</span>\n//             </div>\n//         </div>\n//          <div className=\"post__body\">\n//              <p>{message}</p>\n//          </div>\n//          <div className=\"post__buttons\">\n//              <InputOption Icon = {ThumbUpIcon}  title =\"Like\" color =\"gray\"/>\n//              <InputOption Icon = {ChatOutlinedIcon}  title =\"Comment\" color =\"gray\"/>\n//              <InputOption Icon = {ShareOutlinedIcon}  title =\"Share\" color =\"gray\"/>\n//              <InputOption Icon = {SendOutlinedIcon}  title =\"Send\" color =\"gray\"/>\n//          </div>\n//         </div>\n//     )\n// })\n// export default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Post.js"],"names":["InputOption","Avatar","ThumbUpIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","React","Component","Count","withCookies","Post","constructor","props","submitLike","setState","color","fetch","post","id","method","headers","Authorization","catch","errors","console","log","fetchUser","then","resp","json","res","user","state","error","has_liked","componentDidMount","likes","some","e","cookies","get","render","profile_pic","fontWeight","username","fontSize","firstName","lastName","body","image","comments","no_of_like","no_of_comment"],"mappings":"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","sourcesContent":["import InputOption from \"./InputOption\";\n// import React, { forwardRef } from \"react\";\nimport \"./Post.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport React, { Component } from \"react\";\nimport Count from \"./Count\";\nimport { withCookies } from \"react-cookie\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: \"\",\n\n      has_liked: false,\n    };\n  }\n\n  submitLike = () => {\n    this.setState({ color: \"blue\" });\n    fetch(`http://127.0.0.1:8000/papi/posts/${this.props.post.id}/likePost/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token d194a979f94b27587f743071a64f8d5c7d3dfb01\",\n      },\n    }).catch((errors) => console.log(errors));\n  };\n\n  fetchUser = (id) => {\n    fetch(`http://127.0.0.1:8000/uapi/users/${id}/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token d194a979f94b27587f743071a64f8d5c7d3dfb01\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then((res) =>\n        this.setState(\n          {\n            user: res,\n          },\n          console.log(this.state.user)\n        )\n      )\n      .catch((error) => console.log(error));\n  };\n  componentDidMount() {\n    this.fetchUser(this.props.post.user);\n    if (\n      this.props.post.likes.some(\n        (e) => e.user == this.props.cookies.get(\"auth-user\").id\n      )\n    ) {\n      this.setState({ has_liked: true });\n      console.log(\"wohoo\");\n    }\n    console.log(this.props.post.likes);\n  }\n\n  render() {\n    const { post } = this.props;\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__header\">\n          {this.state.user.profile_pic ? (\n            <Avatar src={this.state.user.profile_pic} alt=\"Profile\" />\n          ) : (\n            <Avatar\n              src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTP9xCw-TO3d5DvvvTaUE2dx6VLYNO52xxG5A&usqp=CAU\"\n              alt=\"Profile\"\n            />\n          )}\n          {/* {this.fetchUser(user)} */}\n\n          <div className=\"post__info\">\n            <span style={{ fontWeight: \"bold\" }}>\n              {this.state.user.username}\n            </span>\n            <br />\n            <span className=\"text-muted\" style={{ fontSize: \"17px\" }}>\n              {this.state.user.firstName}\n            </span>\n            <span className=\"text-muted ml-1\" style={{ fontSize: \"17px\" }}>\n              {this.state.user.lastName}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"post__body\">\n          <p>{post.body}</p>\n          <img className=\"post__image\" src={post.image} />\n          <Count\n            likes={post.likes}\n            comments={post.comments}\n            no_of_like={post.no_of_like}\n            no_of_comment={post.no_of_comment}\n          />\n        </div>\n        <div className=\"post__buttons\">\n          <InputOption\n            submitLike={this.submitLike}\n            Icon={ThumbUpIcon}\n            title=\"Like\"\n            color={this.state.has_liked ? \"blue\" : \"grey\"}\n            // color={this.state.color}\n            post={post}\n          />\n          <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\" />\n          <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\n          <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withCookies(Post);\n\n// const Post =  forwardRef (({name,description, message, photoUrl}, ref) => {\n//     return (\n//         <div ref ={ref} className ='post'>\n//         <div className=\"post__header\">\n//             <Avatar className=\"mt-1\" src=\"https://img.republicworld.com/republic-prod/stories/promolarge/xxhdpi/sdwpmnu8jc7dl86x_1613127617.jpeg\">{name[0]}</Avatar>\n//             <div className=\"post__info\">\n//                 <span style={{fontWeight:\"bold\"}}>{name}</span><br/>\n//                 <span className=\"text-muted\" style={{fontSize:\"17px\"}}>{description}</span>\n//             </div>\n//         </div>\n\n//          <div className=\"post__body\">\n//              <p>{message}</p>\n//          </div>\n//          <div className=\"post__buttons\">\n//              <InputOption Icon = {ThumbUpIcon}  title =\"Like\" color =\"gray\"/>\n//              <InputOption Icon = {ChatOutlinedIcon}  title =\"Comment\" color =\"gray\"/>\n//              <InputOption Icon = {ShareOutlinedIcon}  title =\"Share\" color =\"gray\"/>\n//              <InputOption Icon = {SendOutlinedIcon}  title =\"Send\" color =\"gray\"/>\n//          </div>\n//         </div>\n//     )\n// })\n\n// export default Post;\n"]},"metadata":{},"sourceType":"module"}