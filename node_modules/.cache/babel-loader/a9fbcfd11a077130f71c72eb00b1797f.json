{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { createContext, useContext } from \"react\";\nimport { DEFAULT_APP_SIZE } from \"./useAppSizeMedia\";\n/**\n * @internal\n */\n\nexport var AppSizeContext = createContext(__assign(__assign({}, DEFAULT_APP_SIZE), {\n  __initialized: false\n}));\n/**\n * Gets the current app size.\n *\n * @returns the current AppSize\n */\n\nexport function useAppSize() {\n  var _a = useContext(AppSizeContext),\n      __initialized = _a.__initialized,\n      context = __rest(_a, [\"__initialized\"]);\n\n  if (!__initialized) {\n    throw new Error(\"Unable to get the current `AppSize` from `react-md` because the `AppSizeListener` \" + \"could not be found when using the `useAppSize` hook. To fix this error, either \" + \"initialize the `AppSizeListener` component from `@react-md/utils` or the \" + \"`Configuration` component from `@react-md/layout` near the root of your app.\");\n  }\n\n  return context;\n}","map":{"version":3,"sources":["../../src/sizing/useAppSize.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,aAAT,EAAwB,UAAxB,QAA0C,OAA1C;AAEA,SAAkB,gBAAlB,QAA0C,mBAA1C;AAEA;;AAEG;;AACH,OAAO,IAAM,cAAc,GAAG,aAAa,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAGtC,gBAHsC,CAAA,EAGtB;AACnB,EAAA,aAAa,EAAE;AADI,CAHsB,CAAA,CAApC;AAOP;;;;AAIG;;AACH,OAAM,SAAU,UAAV,GAAoB;AACxB,MAAM,EAAA,GAAgC,UAAU,CAAC,cAAD,CAAhD;AAAA,MAAQ,aAAa,GAAA,EAAA,CAAA,aAArB;AAAA,MAA0B,OAAO,GAAA,MAAA,CAAA,EAAA,EAA3B,CAAA,eAAA,CAA2B,CAAjC;;AACA,MAAI,CAAC,aAAL,EAAoB;AAClB,UAAM,IAAI,KAAJ,CACJ,uFACE,iFADF,GAEE,2EAFF,GAGE,8EAJE,CAAN;AAMD;;AAED,SAAO,OAAP;AACD","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { createContext, useContext } from \"react\";\nimport { DEFAULT_APP_SIZE } from \"./useAppSizeMedia\";\n/**\n * @internal\n */\nexport var AppSizeContext = createContext(__assign(__assign({}, DEFAULT_APP_SIZE), { __initialized: false }));\n/**\n * Gets the current app size.\n *\n * @returns the current AppSize\n */\nexport function useAppSize() {\n    var _a = useContext(AppSizeContext), __initialized = _a.__initialized, context = __rest(_a, [\"__initialized\"]);\n    if (!__initialized) {\n        throw new Error(\"Unable to get the current `AppSize` from `react-md` because the `AppSizeListener` \" +\n            \"could not be found when using the `useAppSize` hook. To fix this error, either \" +\n            \"initialize the `AppSizeListener` component from `@react-md/utils` or the \" +\n            \"`Configuration` component from `@react-md/layout` near the root of your app.\");\n    }\n    return context;\n}\n//# sourceMappingURL=useAppSize.js.map"]},"metadata":{},"sourceType":"module"}