{"ast":null,"code":"var _jsxFileName = \"/home/malav/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/ActivityMain.js\";\nimport React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { withCookies } from \"react-cookie\";\nimport FlipMove from \"react-flip-move\";\nimport Post from \"../Feed/Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ActivityMain extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeState = () => {\n      this.setState({\n        activityDelete: !this.state.activityDelete\n      });\n    };\n\n    this.handleActivity = () => {\n      this.setState({\n        all_activity_btn: true,\n        post_btn: false\n      });\n    };\n\n    this.getActivity = () => {\n      for (let index = 0; index < this.state.activities_id.length; index++) {\n        fetch(`${process.env.REACT_APP_API_URL}/papi/posts/${this.state.activities_id[index].post}/`, {\n          method: \"GET\",\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n          }\n        }).then(resp => resp.json()).then(resp => {\n          console.log(resp);\n          var joined = this.state.activities.concat([resp]);\n          this.setState({\n            activities: joined\n          });\n        }).catch(error => console.log(error));\n      }\n    };\n\n    this.handlePost = () => {\n      this.setState({\n        post_btn: true,\n        all_activity_btn: false\n      });\n    };\n\n    this.getPost = () => {\n      fetch(`${process.env.REACT_APP_API_URL}/uapi/users/${this.props.location.state}/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n        }\n      }).then(resp => resp.json()).then(resp => {\n        this.setState({\n          user: resp,\n          posts: resp.posts,\n          activities_id: resp.activities\n        }, function () {\n          this.getActivity();\n        });\n      }).catch(error => console.log(error));\n    };\n\n    this.state = {\n      all_activity_btn: true,\n      post_btn: false,\n      posts: [],\n      activities_id: [],\n      activities: [],\n      activityDelete: true,\n      user: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getPost();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.activityDelete !== this.state.activityDelete) {\n      this.getPost();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed__inputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: \"bold\",\n              fontSize: \"25px\",\n              paddingLeft: \"10px\"\n            },\n            children: [this.state.user.user_profile && this.state.user.user_profile.firstName ? this.state.user.user_profile.firstName : this.state.user.username, \"Malav's Activity\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            style: this.state.all_activity_btn ? Active_btn : non_Active_btn,\n            onClick: this.handleActivity,\n            children: \"All activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: this.state.post_btn ? Active_btn : non_Active_btn,\n            onClick: this.handlePost,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlipMove, {\n        children: this.state.post_btn && this.state.posts.length > 0 && this.state.posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n          post: post,\n          activityDelete: this.state.post_btn,\n          activityUpdate: () => this.setState({\n            activityDelete: !this.state.activityDelete\n          })\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlipMove, {\n        children: this.state.all_activity_btn && this.state.activities.length > 0 && this.state.activities.map(post => /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst Active_btn = {\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  marginTop: \"10px\",\n  marginLeft: \"10px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  display: \"flex\",\n  background: \"#2E7742\",\n  color: \"white\",\n  border: \"solid 1px #0c66c2\"\n};\nconst non_Active_btn = {\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  marginTop: \"10px\",\n  marginLeft: \"10px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  display: \"flex\",\n  background: \"white\",\n  color: \"grey\",\n  border: \"solid 1px black\"\n};\nexport default _c = withCookies(ActivityMain);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/malav/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Profile/ActivityMain.js"],"names":["React","Component","Button","withCookies","FlipMove","Post","ActivityMain","constructor","props","changeState","setState","activityDelete","state","handleActivity","all_activity_btn","post_btn","getActivity","index","activities_id","length","fetch","process","env","REACT_APP_API_URL","post","method","headers","Authorization","cookies","get","token","then","resp","json","console","log","joined","activities","concat","catch","error","handlePost","getPost","location","user","posts","componentDidMount","componentDidUpdate","prevProps","prevState","render","fontWeight","fontSize","paddingLeft","user_profile","firstName","username","display","Active_btn","non_Active_btn","map","id","paddingRight","marginTop","marginLeft","borderRadius","background","color","border"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { withCookies } from \"react-cookie\";\nimport FlipMove from \"react-flip-move\";\nimport Post from \"../Feed/Post\";\n\nclass ActivityMain extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      all_activity_btn: true,\n      post_btn: false,\n      posts: [],\n      activities_id: [],\n      activities: [],\n      activityDelete: true,\n      user: \"\",\n    };\n  }\n  changeState = () => {\n    this.setState({ activityDelete: !this.state.activityDelete });\n  };\n\n  handleActivity = () => {\n    this.setState({ all_activity_btn: true, post_btn: false });\n  };\n\n  getActivity = () => {\n    for (let index = 0; index < this.state.activities_id.length; index++) {\n      fetch(\n        `${process.env.REACT_APP_API_URL}/papi/posts/${this.state.activities_id[index].post}/`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Token ${\n              this.props.cookies.get(\"auth-token\").token\n            }`,\n          },\n        }\n      )\n        .then((resp) => resp.json())\n        .then((resp) => {\n          console.log(resp);\n          var joined = this.state.activities.concat([resp]);\n          this.setState({ activities: joined });\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  handlePost = () => {\n    this.setState({\n      post_btn: true,\n      all_activity_btn: false,\n    });\n  };\n\n  getPost = () => {\n    fetch(\n      `${process.env.REACT_APP_API_URL}/uapi/users/${this.props.location.state}/`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n        },\n      }\n    )\n      .then((resp) => resp.json())\n      .then((resp) => {\n        this.setState(\n          {\n            user: resp,\n            posts: resp.posts,\n            activities_id: resp.activities,\n          },\n          function () {\n            this.getActivity();\n          }\n        );\n      })\n      .catch((error) => console.log(error));\n  };\n\n  componentDidMount() {\n    this.getPost();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.activityDelete !== this.state.activityDelete) {\n      this.getPost();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"feed\">\n        <div className=\"feed__inputContainer\">\n          <div>\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: \"25px\",\n                paddingLeft: \"10px\",\n              }}\n            >\n              {this.state.user.user_profile &&\n              this.state.user.user_profile.firstName\n                ? this.state.user.user_profile.firstName\n                : this.state.user.username}\n              Malav's Activity\n            </span>\n          </div>\n          <div style={{ display: \"flex\" }} className=\"mt-2\">\n            <Button\n              style={this.state.all_activity_btn ? Active_btn : non_Active_btn}\n              onClick={this.handleActivity}\n            >\n              All activity\n            </Button>\n            <Button\n              style={this.state.post_btn ? Active_btn : non_Active_btn}\n              onClick={this.handlePost}\n            >\n              Post\n            </Button>\n          </div>\n        </div>\n        <hr />\n\n        {/* Posts */}\n        <FlipMove>\n          {this.state.post_btn &&\n            this.state.posts.length > 0 &&\n            this.state.posts.map((post) => (\n              <Post\n                key={post.id}\n                post={post}\n                activityDelete={this.state.post_btn}\n                activityUpdate={() =>\n                  this.setState({ activityDelete: !this.state.activityDelete })\n                }\n              />\n            ))}\n        </FlipMove>\n        <FlipMove>\n          {this.state.all_activity_btn &&\n            this.state.activities.length > 0 &&\n            this.state.activities.map((post) => (\n              <Post key={post.id} post={post} />\n            ))}\n        </FlipMove>\n      </div>\n    );\n  }\n}\n\nconst Active_btn = {\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  marginTop: \"10px\",\n  marginLeft: \"10px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  display: \"flex\",\n  background: \"#2E7742\",\n  color: \"white\",\n  border: \"solid 1px #0c66c2\",\n};\n\nconst non_Active_btn = {\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  marginTop: \"10px\",\n  marginLeft: \"10px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  display: \"flex\",\n  background: \"white\",\n  color: \"grey\",\n  border: \"solid 1px black\",\n};\nexport default withCookies(ActivityMain);\n"]},"metadata":{},"sourceType":"module"}