{"ast":null,"code":"var _jsxFileName = \"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Post.js\";\nimport InputOption from \"./InputOption\";\nimport \"./Post.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport React, { Component } from \"react\";\nimport Count from \"./Count\";\nimport { withCookies } from \"react-cookie\";\nimport Comments from \"./Comments\";\nimport { Button } from \"react-bootstrap\";\nimport EditPost from \"./EditPost\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.moreOptions = e => {\n      console.log(\"more clicked\");\n      this.setState({\n        anchorEl: e.currentTarget\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.handleEdit = () => {\n      this.handleClose();\n    };\n\n    this.handleDelete = () => {\n      fetch(`${process.env.REACT_APP_API_URL}/papi/posts/${this.props.post.id}/`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n        }\n      }).then(resp => resp.json()).catch(error => console.log(error));\n      this.handleClose();\n    };\n\n    this.handleComment = e => {\n      console.log(e.target.value);\n      this.setState({\n        comment: e.target.value\n      });\n    };\n\n    this.submitComment = () => {\n      this.setState({\n        has_commented: false\n      });\n      fetch(`http://127.0.0.1:8000/papi/posts/${this.props.post.id}/comment/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n        },\n        body: JSON.stringify({\n          comment: this.state.comment\n        })\n      }).then(resp => resp.json()).then(resp => {\n        if (resp.result) {\n          this.setState({\n            has_commented: true,\n            user_commented: true\n          });\n        }\n      }).catch(error => console.log(error));\n      this.setState({\n        comment: \"\"\n      });\n    };\n\n    this.submitLike = () => {\n      if (!this.state.has_liked) {\n        fetch(`http://127.0.0.1:8000/papi/posts/${this.props.post.id}/likePost/`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n          }\n        }).then(resp => resp.json()).then(resp => {\n          if (resp.result) {\n            this.setState({\n              has_liked: true\n            });\n          }\n        }).catch(errors => console.log(errors));\n      } else {\n        fetch(`http://127.0.0.1:8000/papi/posts/${this.props.post.id}/dislikePost/`, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n          }\n        }).then(() => {\n          this.setState({\n            has_liked: false\n          });\n        }).catch(errors => console.log(errors));\n      }\n    };\n\n    this.fetchUser = id => {\n      fetch(`http://127.0.0.1:8000/uapi/users/${id}/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(resp => resp.json()).then(res => this.setState({\n        user: res\n      })).catch(error => console.log(error));\n    };\n\n    this.modalShowComment = () => {\n      this.setState({\n        showComment: !this.state.showComment\n      });\n    };\n\n    this.state = {\n      user: \"\",\n      has_liked: false,\n      has_commented: false,\n      post: this.props.post,\n      showComment: false,\n      comment: \"\",\n      user_commented: false,\n      editPost: false,\n      anchorEl: null\n    };\n  }\n\n  componentDidMount() {\n    // will highlight like blue if current use has liked the post\n    this.fetchUser(this.props.post.user);\n\n    if (this.props.post.likes.some(e => e.user == this.props.cookies.get(\"auth-token\").user.id)) {\n      this.state.has_liked = true;\n    }\n  } // to instantly getting the comments and likes w/o refreshing\n\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.has_liked != this.state.has_liked || prevState.has_commented != this.state.has_commented) {\n      fetch(`${process.env.REACT_APP_API_URL}/papi/posts/${this.props.post.id}/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n        }\n      }).then(resp => resp.json()).then(res => this.setState({\n        post: res\n      })).catch(error => console.log(error));\n    }\n  }\n\n  render() {\n    const {\n      post\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__header\",\n        children: [this.state.user.profile_pic ? /*#__PURE__*/_jsxDEV(Avatar, {\n          src: this.state.user.profile_pic,\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n          className: \"post__image\",\n          src: \"/images/user.svg\",\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: this.state.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted\",\n            style: {\n              fontSize: \"17px\"\n            },\n            children: this.state.user.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted ml-1\",\n            style: {\n              fontSize: \"17px\"\n            },\n            children: this.state.user.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n          style: {\n            marginLeft: \"auto\"\n          },\n          onClick: e => this.moreOptions(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          id: \"simple-menu\",\n          anchorEl: this.state.anchorEl,\n          keepMounted: true,\n          open: Boolean(this.state.anchorEl),\n          onClose: this.handleClose,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: this.handleEdit,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: this.handleDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"post__image\",\n          src: post.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Count, {\n          post: this.state.post,\n          modalShowComment: this.modalShowComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(InputOption, {\n          function: this.submitLike,\n          Icon: ThumbUpIcon,\n          title: \"Like\",\n          color: this.state.has_liked ? \"blue\" : \"gray\",\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: ChatOutlinedIcon,\n          function: this.modalShowComment,\n          title: \"Comment\",\n          color: \"gray\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: ShareOutlinedIcon,\n          title: \"Share\",\n          color: \"gray\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: SendOutlinedIcon,\n          title: \"Send\",\n          color: \"gray\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), this.state.showComment ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        className: \"mt-3\",\n        children: [this.state.user.profile_pic ? /*#__PURE__*/_jsxDEV(Avatar, {\n          src: this.state.user.profile_pic,\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n          src: \"/images/user.svg\",\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Add a comment...\",\n          value: this.state.comment,\n          onChange: e => this.handleComment(e),\n          style: {\n            width: \"100%\",\n            marginLeft: \"10px\",\n            outline: \"none\"\n          },\n          className: \"feed__input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), this.state.comment.length > 0 ? /*#__PURE__*/_jsxDEV(Button, {\n          style: post_button,\n          onClick: this.submitComment,\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this) : null, this.state.showComment && this.state.post.comments.map(comment => /*#__PURE__*/_jsxDEV(Comments, {\n        post: this.state.post,\n        comment: comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }, this)), this.state.editPost ? /*#__PURE__*/_jsxDEV(EditPost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 32\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst post_button = {\n  marginTop: \"-10px\",\n  paddingLeft: \"10px\",\n  paddingRight: \"10px\",\n  marginLeft: \"10px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  // display: \"flex\",\n  background: \"#0c66c2\",\n  color: \"white\",\n  border: \"solid 1px #0c66c2\",\n  width: \"110px\"\n};\nexport default _c = withCookies(Post); // const Post =  forwardRef (({name,description, message, photoUrl}, ref) => {\n//     return (\n//         <div ref ={ref} className ='post'>\n//         <div className=\"post__header\">\n//             <Avatar className=\"mt-1\" src=\"https://img.republicworld.com/republic-prod/stories/promolarge/xxhdpi/sdwpmnu8jc7dl86x_1613127617.jpeg\">{name[0]}</Avatar>\n//             <div className=\"post__info\">\n//                 <span style={{fontWeight:\"bold\"}}>{name}</span><br/>\n//                 <span className=\"text-muted\" style={{fontSize:\"17px\"}}>{description}</span>\n//             </div>\n//         </div>\n//          <div className=\"post__body\">\n//              <p>{message}</p>\n//          </div>\n//          <div className=\"post__buttons\">\n//              <InputOption Icon = {ThumbUpIcon}  title =\"Like\" color =\"gray\"/>\n//              <InputOption Icon = {ChatOutlinedIcon}  title =\"Comment\" color =\"gray\"/>\n//              <InputOption Icon = {ShareOutlinedIcon}  title =\"Share\" color =\"gray\"/>\n//              <InputOption Icon = {SendOutlinedIcon}  title =\"Send\" color =\"gray\"/>\n//          </div>\n//         </div>\n//     )\n// })\n// export default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Post.js"],"names":["InputOption","Avatar","ThumbUpIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","React","Component","Count","withCookies","Comments","Button","EditPost","MoreHorizIcon","Menu","MenuItem","Post","constructor","props","moreOptions","e","console","log","setState","anchorEl","currentTarget","handleClose","handleEdit","handleDelete","fetch","process","env","REACT_APP_API_URL","post","id","method","headers","Authorization","cookies","get","token","then","resp","json","catch","error","handleComment","target","value","comment","submitComment","has_commented","body","JSON","stringify","state","result","user_commented","submitLike","has_liked","errors","fetchUser","res","user","modalShowComment","showComment","editPost","componentDidMount","likes","some","componentDidUpdate","prevProps","prevState","render","profile_pic","fontWeight","username","fontSize","firstName","lastName","marginLeft","Boolean","image","display","width","outline","length","post_button","comments","map","marginTop","paddingLeft","paddingRight","borderRadius","background","color","border"],"mappings":"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","sourcesContent":["import InputOption from \"./InputOption\";\nimport \"./Post.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport React, { Component } from \"react\";\nimport Count from \"./Count\";\nimport { withCookies } from \"react-cookie\";\nimport Comments from \"./Comments\";\nimport { Button } from \"react-bootstrap\";\nimport EditPost from \"./EditPost\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: \"\",\n      has_liked: false,\n      has_commented: false,\n      post: this.props.post,\n      showComment: false,\n      comment: \"\",\n      user_commented: false,\n      editPost: false,\n      anchorEl: null,\n    };\n  }\n  moreOptions = (e) => {\n    console.log(\"more clicked\");\n    this.setState({\n      anchorEl: e.currentTarget,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      anchorEl: null,\n    });\n  };\n  handleEdit = () => {\n    this.handleClose();\n  };\n  handleDelete = () => {\n    fetch(\n      `${process.env.REACT_APP_API_URL}/papi/posts/${this.props.post.id}/`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n        },\n      }\n    )\n      .then((resp) => resp.json())\n\n      .catch((error) => console.log(error));\n    this.handleClose();\n  };\n  handleComment = (e) => {\n    console.log(e.target.value);\n    this.setState({ comment: e.target.value });\n  };\n  submitComment = () => {\n    this.setState({ has_commented: false });\n    fetch(`http://127.0.0.1:8000/papi/posts/${this.props.post.id}/comment/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n      },\n      body: JSON.stringify({\n        comment: this.state.comment,\n      }),\n    })\n      .then((resp) => resp.json())\n      .then((resp) => {\n        if (resp.result) {\n          this.setState({ has_commented: true, user_commented: true });\n        }\n      })\n\n      .catch((error) => console.log(error));\n    this.setState({\n      comment: \"\",\n    });\n  };\n  submitLike = () => {\n    if (!this.state.has_liked) {\n      fetch(\n        `http://127.0.0.1:8000/papi/posts/${this.props.post.id}/likePost/`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${\n              this.props.cookies.get(\"auth-token\").token\n            }`,\n          },\n        }\n      )\n        .then((resp) => resp.json())\n        .then((resp) => {\n          if (resp.result) {\n            this.setState({\n              has_liked: true,\n            });\n          }\n        })\n        .catch((errors) => console.log(errors));\n    } else {\n      fetch(\n        `http://127.0.0.1:8000/papi/posts/${this.props.post.id}/dislikePost/`,\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${\n              this.props.cookies.get(\"auth-token\").token\n            }`,\n          },\n        }\n      )\n        .then(() => {\n          this.setState({ has_liked: false });\n        })\n        .catch((errors) => console.log(errors));\n    }\n  };\n\n  fetchUser = (id) => {\n    fetch(`http://127.0.0.1:8000/uapi/users/${id}/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then((res) =>\n        this.setState({\n          user: res,\n        })\n      )\n      .catch((error) => console.log(error));\n  };\n\n  componentDidMount() {\n    // will highlight like blue if current use has liked the post\n    this.fetchUser(this.props.post.user);\n    if (\n      this.props.post.likes.some(\n        (e) => e.user == this.props.cookies.get(\"auth-token\").user.id\n      )\n    ) {\n      this.state.has_liked = true;\n    }\n  }\n  // to instantly getting the comments and likes w/o refreshing\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.has_liked != this.state.has_liked ||\n      prevState.has_commented != this.state.has_commented\n    ) {\n      fetch(\n        `${process.env.REACT_APP_API_URL}/papi/posts/${this.props.post.id}/`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${\n              this.props.cookies.get(\"auth-token\").token\n            }`,\n          },\n        }\n      )\n        .then((resp) => resp.json())\n        .then((res) =>\n          this.setState({\n            post: res,\n          })\n        )\n        .catch((error) => console.log(error));\n    }\n  }\n  modalShowComment = () => {\n    this.setState({ showComment: !this.state.showComment });\n  };\n  render() {\n    const { post } = this.props;\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__header\">\n          {this.state.user.profile_pic ? (\n            <Avatar src={this.state.user.profile_pic} alt=\"Profile\" />\n          ) : (\n            <Avatar\n              className=\"post__image\"\n              src=\"/images/user.svg\"\n              alt=\"Profile\"\n            />\n          )}\n\n          <div className=\"post__info\">\n            <span style={{ fontWeight: \"bold\" }}>\n              {this.state.user.username}\n            </span>\n            <br />\n            <span className=\"text-muted\" style={{ fontSize: \"17px\" }}>\n              {this.state.user.firstName}\n            </span>\n            <span className=\"text-muted ml-1\" style={{ fontSize: \"17px\" }}>\n              {this.state.user.lastName}\n            </span>\n          </div>\n          <MoreHorizIcon\n            style={{ marginLeft: \"auto\" }}\n            onClick={(e) => this.moreOptions(e)}\n          />\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={this.state.anchorEl}\n            keepMounted\n            open={Boolean(this.state.anchorEl)}\n            onClose={this.handleClose}\n          >\n            <MenuItem onClick={this.handleEdit}>Edit</MenuItem>\n            <MenuItem onClick={this.handleDelete}>Delete</MenuItem>\n            {/* <MenuItem onClick={this.handleClose}>Logout</MenuItem> */}\n          </Menu>\n        </div>\n\n        <div className=\"post__body\">\n          <p>{post.body}</p>\n          <img className=\"post__image\" src={post.image} />\n\n          <Count\n            post={this.state.post}\n            modalShowComment={this.modalShowComment}\n          />\n        </div>\n        <div className=\"post__buttons\">\n          <InputOption\n            function={this.submitLike}\n            Icon={ThumbUpIcon}\n            title=\"Like\"\n            color={this.state.has_liked ? \"blue\" : \"gray\"}\n            post={post}\n          />\n          <InputOption\n            Icon={ChatOutlinedIcon}\n            function={this.modalShowComment}\n            title=\"Comment\"\n            color=\"gray\"\n          />\n          <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\n          <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\n        </div>\n\n        {this.state.showComment ? (\n          <div style={{ display: \"flex\" }} className=\"mt-3\">\n            {this.state.user.profile_pic ? (\n              <Avatar src={this.state.user.profile_pic} alt=\"Profile\" />\n            ) : (\n              <Avatar src=\"/images/user.svg\" alt=\"Profile\" />\n            )}\n\n            <input\n              placeholder=\"Add a comment...\"\n              value={this.state.comment}\n              onChange={(e) => this.handleComment(e)}\n              style={{ width: \"100%\", marginLeft: \"10px\", outline: \"none\" }}\n              className=\"feed__input\"\n            />\n            {this.state.comment.length > 0 ? (\n              <Button style={post_button} onClick={this.submitComment}>\n                Post\n              </Button>\n            ) : null}\n          </div>\n        ) : null}\n        {this.state.showComment &&\n          this.state.post.comments.map((comment) => (\n            <Comments\n              key={comment.id}\n              post={this.state.post}\n              comment={comment}\n            />\n          ))}\n\n        {this.state.editPost ? <EditPost /> : null}\n      </div>\n    );\n  }\n}\nconst post_button = {\n  marginTop: \"-10px\",\n  paddingLeft: \"10px\",\n  paddingRight: \"10px\",\n  marginLeft: \"10px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  // display: \"flex\",\n  background: \"#0c66c2\",\n  color: \"white\",\n  border: \"solid 1px #0c66c2\",\n  width: \"110px\",\n};\n\nexport default withCookies(Post);\n\n// const Post =  forwardRef (({name,description, message, photoUrl}, ref) => {\n//     return (\n//         <div ref ={ref} className ='post'>\n//         <div className=\"post__header\">\n//             <Avatar className=\"mt-1\" src=\"https://img.republicworld.com/republic-prod/stories/promolarge/xxhdpi/sdwpmnu8jc7dl86x_1613127617.jpeg\">{name[0]}</Avatar>\n//             <div className=\"post__info\">\n//                 <span style={{fontWeight:\"bold\"}}>{name}</span><br/>\n//                 <span className=\"text-muted\" style={{fontSize:\"17px\"}}>{description}</span>\n//             </div>\n//         </div>\n\n//          <div className=\"post__body\">\n//              <p>{message}</p>\n//          </div>\n//          <div className=\"post__buttons\">\n//              <InputOption Icon = {ThumbUpIcon}  title =\"Like\" color =\"gray\"/>\n//              <InputOption Icon = {ChatOutlinedIcon}  title =\"Comment\" color =\"gray\"/>\n//              <InputOption Icon = {ShareOutlinedIcon}  title =\"Share\" color =\"gray\"/>\n//              <InputOption Icon = {SendOutlinedIcon}  title =\"Send\" color =\"gray\"/>\n//          </div>\n//         </div>\n//     )\n// })\n\n// export default Post;\n"]},"metadata":{},"sourceType":"module"}