{"ast":null,"code":"import React, { createContext, useContext, useMemo } from \"react\";\nimport { FontIcon } from \"./FontIcon\";\nvar DEFAULT_ICONS = {\n  back: React.createElement(FontIcon, null, \"keyboard_arrow_left\"),\n  checkbox: React.createElement(FontIcon, null, \"check_box\"),\n  download: React.createElement(FontIcon, null, \"file_download\"),\n  dropdown: React.createElement(FontIcon, null, \"arrow_drop_down\"),\n  error: React.createElement(FontIcon, null, \"error_outline\"),\n  expander: React.createElement(FontIcon, null, \"keyboard_arrow_down\"),\n  forward: React.createElement(FontIcon, null, \"keyboard_arrow_right\"),\n  menu: React.createElement(FontIcon, null, \"menu\"),\n  notification: React.createElement(FontIcon, null, \"notifications\"),\n  password: React.createElement(FontIcon, null, \"remove_red_eye\"),\n  radio: React.createElement(FontIcon, null, \"radio_button_checked\"),\n  selected: React.createElement(FontIcon, null, \"check\"),\n  sort: React.createElement(FontIcon, null, \"arrow_upward\")\n};\nvar context = createContext(DEFAULT_ICONS);\nvar Provider = context.Provider;\n/**\n * Gets one of the configured icons from the `IconProvider`. This is probably\n * just for use within `react-md`, but might be helpful outside if you want to\n * reuse the existing icon configuration for other custom components.\n *\n * If te second argument is provided and it is not `undefined`, that value will\n * be used instead of the inherited icon type.\n *\n * @param name - The name of the icon you want to use.\n * @param override - An optional override to use instead of the inherited icon.\n * @returns The overridden icon value or the inherited icon.\n */\n\nexport function useIcon(name, override) {\n  var icons = useContext(context);\n\n  if (typeof override !== \"undefined\") {\n    return override;\n  }\n\n  return icons[name];\n}\n/**\n * The `IconProvider` component is used to override all the default icons within\n * `react-md` with a newly defined set of icons. This is super nice since you\n * won't need to create new component wrappers for all the components within\n * `react-md` if you want to switch to SVG icons instead of the default font\n * icons.\n */\n\nexport function IconProvider(_a) {\n  var children = _a.children,\n      _b = _a.back,\n      back = _b === void 0 ? DEFAULT_ICONS.back : _b,\n      _c = _a.checkbox,\n      checkbox = _c === void 0 ? DEFAULT_ICONS.checkbox : _c,\n      _d = _a.download,\n      download = _d === void 0 ? DEFAULT_ICONS.download : _d,\n      _e = _a.dropdown,\n      dropdown = _e === void 0 ? DEFAULT_ICONS.dropdown : _e,\n      _f = _a.expander,\n      expander = _f === void 0 ? DEFAULT_ICONS.expander : _f,\n      _g = _a.error,\n      error = _g === void 0 ? DEFAULT_ICONS.error : _g,\n      _h = _a.forward,\n      forward = _h === void 0 ? DEFAULT_ICONS.forward : _h,\n      _j = _a.menu,\n      menu = _j === void 0 ? DEFAULT_ICONS.menu : _j,\n      _k = _a.notification,\n      notification = _k === void 0 ? DEFAULT_ICONS.notification : _k,\n      _l = _a.password,\n      password = _l === void 0 ? DEFAULT_ICONS.password : _l,\n      _m = _a.radio,\n      radio = _m === void 0 ? DEFAULT_ICONS.radio : _m,\n      _o = _a.selected,\n      selected = _o === void 0 ? DEFAULT_ICONS.selected : _o,\n      _p = _a.sort,\n      sort = _p === void 0 ? DEFAULT_ICONS.sort : _p;\n  var value = useMemo(function () {\n    return {\n      back: back,\n      checkbox: checkbox,\n      download: download,\n      dropdown: dropdown,\n      error: error,\n      expander: expander,\n      forward: forward,\n      menu: menu,\n      notification: notification,\n      password: password,\n      radio: radio,\n      selected: selected,\n      sort: sort\n    };\n  }, [back, checkbox, download, dropdown, error, expander, forward, menu, notification, password, radio, selected, sort]);\n  return React.createElement(Provider, {\n    value: value\n  }, children);\n}\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    IconProvider.propTypes = {\n      children: PropTypes.node,\n      back: PropTypes.node,\n      checkbox: PropTypes.node,\n      download: PropTypes.node,\n      dropdown: PropTypes.node,\n      error: PropTypes.node,\n      expander: PropTypes.node,\n      forward: PropTypes.node,\n      menu: PropTypes.node,\n      notification: PropTypes.node,\n      password: PropTypes.node,\n      radio: PropTypes.node,\n      selected: PropTypes.node,\n      sort: PropTypes.node\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../src/IconProvider.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { createContext, useContext, useMemo, } from \"react\";\nimport { FontIcon } from \"./FontIcon\";\nvar DEFAULT_ICONS = {\n    back: React.createElement(FontIcon, null, \"keyboard_arrow_left\"),\n    checkbox: React.createElement(FontIcon, null, \"check_box\"),\n    download: React.createElement(FontIcon, null, \"file_download\"),\n    dropdown: React.createElement(FontIcon, null, \"arrow_drop_down\"),\n    error: React.createElement(FontIcon, null, \"error_outline\"),\n    expander: React.createElement(FontIcon, null, \"keyboard_arrow_down\"),\n    forward: React.createElement(FontIcon, null, \"keyboard_arrow_right\"),\n    menu: React.createElement(FontIcon, null, \"menu\"),\n    notification: React.createElement(FontIcon, null, \"notifications\"),\n    password: React.createElement(FontIcon, null, \"remove_red_eye\"),\n    radio: React.createElement(FontIcon, null, \"radio_button_checked\"),\n    selected: React.createElement(FontIcon, null, \"check\"),\n    sort: React.createElement(FontIcon, null, \"arrow_upward\"),\n};\nvar context = createContext(DEFAULT_ICONS);\nvar Provider = context.Provider;\n/**\n * Gets one of the configured icons from the `IconProvider`. This is probably\n * just for use within `react-md`, but might be helpful outside if you want to\n * reuse the existing icon configuration for other custom components.\n *\n * If te second argument is provided and it is not `undefined`, that value will\n * be used instead of the inherited icon type.\n *\n * @param name - The name of the icon you want to use.\n * @param override - An optional override to use instead of the inherited icon.\n * @returns The overridden icon value or the inherited icon.\n */\nexport function useIcon(name, override) {\n    var icons = useContext(context);\n    if (typeof override !== \"undefined\") {\n        return override;\n    }\n    return icons[name];\n}\n/**\n * The `IconProvider` component is used to override all the default icons within\n * `react-md` with a newly defined set of icons. This is super nice since you\n * won't need to create new component wrappers for all the components within\n * `react-md` if you want to switch to SVG icons instead of the default font\n * icons.\n */\nexport function IconProvider(_a) {\n    var children = _a.children, _b = _a.back, back = _b === void 0 ? DEFAULT_ICONS.back : _b, _c = _a.checkbox, checkbox = _c === void 0 ? DEFAULT_ICONS.checkbox : _c, _d = _a.download, download = _d === void 0 ? DEFAULT_ICONS.download : _d, _e = _a.dropdown, dropdown = _e === void 0 ? DEFAULT_ICONS.dropdown : _e, _f = _a.expander, expander = _f === void 0 ? DEFAULT_ICONS.expander : _f, _g = _a.error, error = _g === void 0 ? DEFAULT_ICONS.error : _g, _h = _a.forward, forward = _h === void 0 ? DEFAULT_ICONS.forward : _h, _j = _a.menu, menu = _j === void 0 ? DEFAULT_ICONS.menu : _j, _k = _a.notification, notification = _k === void 0 ? DEFAULT_ICONS.notification : _k, _l = _a.password, password = _l === void 0 ? DEFAULT_ICONS.password : _l, _m = _a.radio, radio = _m === void 0 ? DEFAULT_ICONS.radio : _m, _o = _a.selected, selected = _o === void 0 ? DEFAULT_ICONS.selected : _o, _p = _a.sort, sort = _p === void 0 ? DEFAULT_ICONS.sort : _p;\n    var value = useMemo(function () { return ({\n        back: back,\n        checkbox: checkbox,\n        download: download,\n        dropdown: dropdown,\n        error: error,\n        expander: expander,\n        forward: forward,\n        menu: menu,\n        notification: notification,\n        password: password,\n        radio: radio,\n        selected: selected,\n        sort: sort,\n    }); }, [\n        back,\n        checkbox,\n        download,\n        dropdown,\n        error,\n        expander,\n        forward,\n        menu,\n        notification,\n        password,\n        radio,\n        selected,\n        sort,\n    ]);\n    return React.createElement(Provider, { value: value }, children);\n}\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        IconProvider.propTypes = {\n            children: PropTypes.node,\n            back: PropTypes.node,\n            checkbox: PropTypes.node,\n            download: PropTypes.node,\n            dropdown: PropTypes.node,\n            error: PropTypes.node,\n            expander: PropTypes.node,\n            forward: PropTypes.node,\n            menu: PropTypes.node,\n            notification: PropTypes.node,\n            password: PropTypes.node,\n            radio: PropTypes.node,\n            selected: PropTypes.node,\n            sort: PropTypes.node,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=IconProvider.js.map"]},"metadata":{},"sourceType":"module"}