{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from \"react\";\nimport { useRippleTransition } from \"./reducer\";\nimport { RippleContainer } from \"./RippleContainer\";\nimport { useRippleHandlers } from \"./useRippleHandlers\";\n/**\n * A hook that will return an object containing the ripples element\n * and an object of event handlers to apply to an element to trigger\n * the ripple effects.\n */\n\nexport function useRipples(_a) {\n  var rippleTimeout = _a.rippleTimeout,\n      rippleClassNames = _a.rippleClassNames,\n      rippleContainerClassName = _a.rippleContainerClassName,\n      rippleClassName = _a.rippleClassName,\n      disableRipple = _a.disableRipple,\n      disableSpacebarClick = _a.disableSpacebarClick,\n      options = __rest(_a, [\"rippleTimeout\", \"rippleClassNames\", \"rippleContainerClassName\", \"rippleClassName\", \"disableRipple\", \"disableSpacebarClick\"]);\n\n  var _b = useRippleTransition(disableSpacebarClick),\n      create = _b.create,\n      state = _b.state,\n      release = _b.release,\n      entered = _b.entered,\n      remove = _b.remove,\n      cancel = _b.cancel;\n\n  var handlers = useRippleHandlers(__assign({\n    create: create,\n    release: release,\n    cancel: cancel,\n    disableRipple: disableRipple\n  }, options));\n  return {\n    handlers: handlers,\n    ripples: disableRipple ? null : React.createElement(RippleContainer, {\n      key: \"ripples\",\n      ripples: state,\n      className: rippleContainerClassName,\n      rippleClassName: rippleClassName,\n      timeout: rippleTimeout,\n      classNames: rippleClassNames,\n      entered: entered,\n      exited: remove\n    })\n  };\n}","map":{"version":3,"sources":["../../src/ripples/useRipples.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAiC,OAAjC;AAEA,SAAS,mBAAT,QAAoC,WAApC;AACA,SAAS,eAAT,QAAgC,mBAAhC;AAEA,SAAS,iBAAT,QAAkC,qBAAlC;AAOA;;;;AAIG;;AACH,OAAM,SAAU,UAAV,CAA0D,EAA1D,EAQc;AAPlB,MAAA,aAAa,GAAA,EAAA,CAAA,aAAb;AAAA,MACA,gBAAgB,GAAA,EAAA,CAAA,gBADhB;AAAA,MAEA,wBAAwB,GAAA,EAAA,CAAA,wBAFxB;AAAA,MAGA,eAAe,GAAA,EAAA,CAAA,eAHf;AAAA,MAIA,aAAa,GAAA,EAAA,CAAA,aAJb;AAAA,MAKA,oBAAoB,GAAA,EAAA,CAAA,oBALpB;AAAA,MAMG,OAAO,GAAA,MAAA,CAAA,EAAA,EAPoD,CAAA,eAAA,EAAA,kBAAA,EAAA,0BAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,sBAAA,CAOpD,CANV;;AAQM,MAAA,EAAA,GAOF,mBAAmB,CAAC,oBAAD,CAPjB;AAAA,MACJ,MAAM,GAAA,EAAA,CAAA,MADF;AAAA,MAEJ,KAAK,GAAA,EAAA,CAAA,KAFD;AAAA,MAGJ,OAAO,GAAA,EAAA,CAAA,OAHH;AAAA,MAIJ,OAAO,GAAA,EAAA,CAAA,OAJH;AAAA,MAKJ,MAAM,GAAA,EAAA,CAAA,MALF;AAAA,MAMJ,MAAM,GAAA,EAAA,CAAA,MANF;;AAQN,MAAM,QAAQ,GAAG,iBAAiB,CAAA,QAAA,CAAA;AAChC,IAAA,MAAM,EAAA,MAD0B;AAEhC,IAAA,OAAO,EAAA,OAFyB;AAGhC,IAAA,MAAM,EAAA,MAH0B;AAIhC,IAAA,aAAa,EAAA;AAJmB,GAAA,EAK7B,OAL6B,CAAA,CAAlC;AAQA,SAAO;AACL,IAAA,QAAQ,EAAA,QADH;AAEL,IAAA,OAAO,EAAE,aAAa,GAAG,IAAH,GACpB,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AACd,MAAA,GAAG,EAAC,SADU;AAEd,MAAA,OAAO,EAAE,KAFK;AAGd,MAAA,SAAS,EAAE,wBAHG;AAId,MAAA,eAAe,EAAE,eAJH;AAKd,MAAA,OAAO,EAAE,aALK;AAMd,MAAA,UAAU,EAAE,gBANE;AAOd,MAAA,OAAO,EAAE,OAPK;AAQd,MAAA,MAAM,EAAE;AARM,KAAhB;AAHG,GAAP;AAeD","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from \"react\";\nimport { useRippleTransition } from \"./reducer\";\nimport { RippleContainer } from \"./RippleContainer\";\nimport { useRippleHandlers } from \"./useRippleHandlers\";\n/**\n * A hook that will return an object containing the ripples element\n * and an object of event handlers to apply to an element to trigger\n * the ripple effects.\n */\nexport function useRipples(_a) {\n    var rippleTimeout = _a.rippleTimeout, rippleClassNames = _a.rippleClassNames, rippleContainerClassName = _a.rippleContainerClassName, rippleClassName = _a.rippleClassName, disableRipple = _a.disableRipple, disableSpacebarClick = _a.disableSpacebarClick, options = __rest(_a, [\"rippleTimeout\", \"rippleClassNames\", \"rippleContainerClassName\", \"rippleClassName\", \"disableRipple\", \"disableSpacebarClick\"]);\n    var _b = useRippleTransition(disableSpacebarClick), create = _b.create, state = _b.state, release = _b.release, entered = _b.entered, remove = _b.remove, cancel = _b.cancel;\n    var handlers = useRippleHandlers(__assign({ create: create,\n        release: release,\n        cancel: cancel,\n        disableRipple: disableRipple }, options));\n    return {\n        handlers: handlers,\n        ripples: disableRipple ? null : (React.createElement(RippleContainer, { key: \"ripples\", ripples: state, className: rippleContainerClassName, rippleClassName: rippleClassName, timeout: rippleTimeout, classNames: rippleClassNames, entered: entered, exited: remove })),\n    };\n}\n//# sourceMappingURL=useRipples.js.map"]},"metadata":{},"sourceType":"module"}