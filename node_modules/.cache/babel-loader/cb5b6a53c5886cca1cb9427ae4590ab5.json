{"ast":null,"code":"var _jsxFileName = \"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Post.js\";\nimport InputOption from \"./InputOption\";\nimport \"./Post.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport React, { Component } from \"react\";\nimport Count from \"./Count\";\nimport { withCookies } from \"react-cookie\";\nimport Comments from \"./Comments\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleComment = e => {\n      this.setState({\n        comment: e.target.value\n      });\n    };\n\n    this.submitComment = () => {\n      fetch(`http://127.0.0.1:8000/papi/posts/${this.props.post.id}/comment/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n        },\n        body: JSON.stringify({\n          comment: this.state.comment\n        })\n      }).then(resp => resp.json()).catch(error => console.log(error));\n    };\n\n    this.submitLike = () => {\n      if (!this.state.has_liked) {\n        fetch(`http://127.0.0.1:8000/papi/posts/${this.props.post.id}/likePost/`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n          }\n        }).then(resp => resp.json()).then(resp => {\n          if (resp.result) {\n            this.setState({\n              has_liked: true\n            });\n          }\n        }).catch(errors => console.log(errors));\n      } else {\n        fetch(`http://127.0.0.1:8000/papi/posts/${this.props.post.id}/dislikePost/`, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n          }\n        }).then(() => {\n          this.setState({\n            has_liked: false\n          });\n        }).catch(errors => console.log(errors));\n      }\n    };\n\n    this.fetchUser = id => {\n      fetch(`http://127.0.0.1:8000/uapi/users/${id}/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(resp => resp.json()).then(res => this.setState({\n        user: res\n      })).catch(error => console.log(error));\n    };\n\n    this.modalShowComment = () => {\n      // this.FetchComment();\n      this.setState({\n        showComment: !this.state.showComment\n      });\n    };\n\n    this.state = {\n      user: \"\",\n      has_liked: false,\n      post: this.props.post,\n      showComment: false,\n      comment: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser(this.props.post.user);\n\n    if (this.props.post.likes.some(e => e.user == this.props.cookies.get(\"auth-token\").user.id)) {\n      this.state.has_liked = true;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.has_liked != this.state.has_liked) {\n      fetch(`${process.env.REACT_APP_API_URL}/papi/posts/${this.props.post.id}/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n        }\n      }).then(resp => resp.json()).then(res => this.setState({\n        post: res\n      })).catch(error => console.log(error));\n    }\n  }\n\n  render() {\n    const {\n      post\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__header\",\n        children: [this.state.user.profile_pic ? /*#__PURE__*/_jsxDEV(Avatar, {\n          src: this.state.user.profile_pic,\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n          className: \"post__image\",\n          src: \"/images/user.svg\",\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: this.state.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted\",\n            style: {\n              fontSize: \"17px\"\n            },\n            children: this.state.user.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted ml-1\",\n            style: {\n              fontSize: \"17px\"\n            },\n            children: this.state.user.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"post__image\",\n          src: post.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Count, {\n          post: this.state.post,\n          modalShowComment: this.modalShowComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(InputOption, {\n          submitLike: this.submitLike,\n          Icon: ThumbUpIcon,\n          title: \"Like\",\n          color: this.state.has_liked ? \"blue\" : \"gray\",\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: ChatOutlinedIcon,\n          title: \"Comment\",\n          color: \"gray\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: ShareOutlinedIcon,\n          title: \"Share\",\n          color: \"gray\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: SendOutlinedIcon,\n          title: \"Send\",\n          color: \"gray\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), this.state.showComment && post.comments.map(comment => /*#__PURE__*/_jsxDEV(Comments, {\n        post: post,\n        comment: comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => this.handleComment,\n          style: {\n            width: \"100%\"\n          },\n          className: \"feed__input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.submitComment,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withCookies(Post); // const Post =  forwardRef (({name,description, message, photoUrl}, ref) => {\n//     return (\n//         <div ref ={ref} className ='post'>\n//         <div className=\"post__header\">\n//             <Avatar className=\"mt-1\" src=\"https://img.republicworld.com/republic-prod/stories/promolarge/xxhdpi/sdwpmnu8jc7dl86x_1613127617.jpeg\">{name[0]}</Avatar>\n//             <div className=\"post__info\">\n//                 <span style={{fontWeight:\"bold\"}}>{name}</span><br/>\n//                 <span className=\"text-muted\" style={{fontSize:\"17px\"}}>{description}</span>\n//             </div>\n//         </div>\n//          <div className=\"post__body\">\n//              <p>{message}</p>\n//          </div>\n//          <div className=\"post__buttons\">\n//              <InputOption Icon = {ThumbUpIcon}  title =\"Like\" color =\"gray\"/>\n//              <InputOption Icon = {ChatOutlinedIcon}  title =\"Comment\" color =\"gray\"/>\n//              <InputOption Icon = {ShareOutlinedIcon}  title =\"Share\" color =\"gray\"/>\n//              <InputOption Icon = {SendOutlinedIcon}  title =\"Send\" color =\"gray\"/>\n//          </div>\n//         </div>\n//     )\n// })\n// export default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Post.js"],"names":["InputOption","Avatar","ThumbUpIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","React","Component","Count","withCookies","Comments","Button","Post","constructor","props","handleComment","e","setState","comment","target","value","submitComment","fetch","post","id","method","headers","Authorization","cookies","get","token","body","JSON","stringify","state","then","resp","json","catch","error","console","log","submitLike","has_liked","result","errors","fetchUser","res","user","modalShowComment","showComment","componentDidMount","likes","some","componentDidUpdate","prevProps","prevState","process","env","REACT_APP_API_URL","render","profile_pic","fontWeight","username","fontSize","firstName","lastName","image","comments","map","display","width"],"mappings":"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","sourcesContent":["import InputOption from \"./InputOption\";\nimport \"./Post.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport React, { Component } from \"react\";\nimport Count from \"./Count\";\nimport { withCookies } from \"react-cookie\";\nimport Comments from \"./Comments\";\nimport { Button } from \"react-bootstrap\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: \"\",\n      has_liked: false,\n      post: this.props.post,\n      showComment: false,\n      comment: \"\",\n    };\n  }\n  handleComment = (e) => {\n    this.setState({ comment: e.target.value });\n  };\n  submitComment = () => {\n    fetch(`http://127.0.0.1:8000/papi/posts/${this.props.post.id}/comment/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n      },\n      body: JSON.stringify({\n        comment: this.state.comment,\n      }),\n    })\n      .then((resp) => resp.json())\n\n      .catch((error) => console.log(error));\n  };\n  submitLike = () => {\n    if (!this.state.has_liked) {\n      fetch(\n        `http://127.0.0.1:8000/papi/posts/${this.props.post.id}/likePost/`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${\n              this.props.cookies.get(\"auth-token\").token\n            }`,\n          },\n        }\n      )\n        .then((resp) => resp.json())\n        .then((resp) => {\n          if (resp.result) {\n            this.setState({\n              has_liked: true,\n            });\n          }\n        })\n        .catch((errors) => console.log(errors));\n    } else {\n      fetch(\n        `http://127.0.0.1:8000/papi/posts/${this.props.post.id}/dislikePost/`,\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${\n              this.props.cookies.get(\"auth-token\").token\n            }`,\n          },\n        }\n      )\n        .then(() => {\n          this.setState({ has_liked: false });\n        })\n        .catch((errors) => console.log(errors));\n    }\n  };\n\n  fetchUser = (id) => {\n    fetch(`http://127.0.0.1:8000/uapi/users/${id}/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then((res) =>\n        this.setState({\n          user: res,\n        })\n      )\n      .catch((error) => console.log(error));\n  };\n\n  componentDidMount() {\n    this.fetchUser(this.props.post.user);\n    if (\n      this.props.post.likes.some(\n        (e) => e.user == this.props.cookies.get(\"auth-token\").user.id\n      )\n    ) {\n      this.state.has_liked = true;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.has_liked != this.state.has_liked) {\n      fetch(\n        `${process.env.REACT_APP_API_URL}/papi/posts/${this.props.post.id}/`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${\n              this.props.cookies.get(\"auth-token\").token\n            }`,\n          },\n        }\n      )\n        .then((resp) => resp.json())\n        .then((res) =>\n          this.setState({\n            post: res,\n          })\n        )\n        .catch((error) => console.log(error));\n    }\n  }\n  modalShowComment = () => {\n    // this.FetchComment();\n    this.setState({ showComment: !this.state.showComment });\n  };\n  render() {\n    const { post } = this.props;\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__header\">\n          {this.state.user.profile_pic ? (\n            <Avatar src={this.state.user.profile_pic} alt=\"Profile\" />\n          ) : (\n            <Avatar\n              className=\"post__image\"\n              src=\"/images/user.svg\"\n              alt=\"Profile\"\n            />\n          )}\n\n          <div className=\"post__info\">\n            <span style={{ fontWeight: \"bold\" }}>\n              {this.state.user.username}\n            </span>\n            <br />\n            <span className=\"text-muted\" style={{ fontSize: \"17px\" }}>\n              {this.state.user.firstName}\n            </span>\n            <span className=\"text-muted ml-1\" style={{ fontSize: \"17px\" }}>\n              {this.state.user.lastName}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"post__body\">\n          <p>{post.body}</p>\n          <img className=\"post__image\" src={post.image} />\n\n          <Count\n            post={this.state.post}\n            modalShowComment={this.modalShowComment}\n          />\n        </div>\n        <div className=\"post__buttons\">\n          <InputOption\n            submitLike={this.submitLike}\n            Icon={ThumbUpIcon}\n            title=\"Like\"\n            color={this.state.has_liked ? \"blue\" : \"gray\"}\n            post={post}\n          />\n          <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\" />\n          <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\n          <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\n        </div>\n        {this.state.showComment &&\n          post.comments.map((comment) => (\n            <Comments post={post} comment={comment} />\n          ))}\n        <div style={{ display: \"flex\" }}>\n          <input\n            onChange={(e) => this.handleComment}\n            style={{ width: \"100%\" }}\n            className=\"feed__input\"\n          />\n          <Button onClick={this.submitComment}>Comment</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withCookies(Post);\n\n// const Post =  forwardRef (({name,description, message, photoUrl}, ref) => {\n//     return (\n//         <div ref ={ref} className ='post'>\n//         <div className=\"post__header\">\n//             <Avatar className=\"mt-1\" src=\"https://img.republicworld.com/republic-prod/stories/promolarge/xxhdpi/sdwpmnu8jc7dl86x_1613127617.jpeg\">{name[0]}</Avatar>\n//             <div className=\"post__info\">\n//                 <span style={{fontWeight:\"bold\"}}>{name}</span><br/>\n//                 <span className=\"text-muted\" style={{fontSize:\"17px\"}}>{description}</span>\n//             </div>\n//         </div>\n\n//          <div className=\"post__body\">\n//              <p>{message}</p>\n//          </div>\n//          <div className=\"post__buttons\">\n//              <InputOption Icon = {ThumbUpIcon}  title =\"Like\" color =\"gray\"/>\n//              <InputOption Icon = {ChatOutlinedIcon}  title =\"Comment\" color =\"gray\"/>\n//              <InputOption Icon = {ShareOutlinedIcon}  title =\"Share\" color =\"gray\"/>\n//              <InputOption Icon = {SendOutlinedIcon}  title =\"Send\" color =\"gray\"/>\n//          </div>\n//         </div>\n//     )\n// })\n\n// export default Post;\n"]},"metadata":{},"sourceType":"module"}