{"ast":null,"code":"/**\n * Attempts to find a sizing container based on the provided HTMLElement. By\n * default, the sizing element will just be the provided element unless:\n * - the item has a known role within react-md that can target known classes\n * - the item has a `data-sizing-selector` attribute that is a valid query\n *   selector for the nested item.\n *\n * NOTE: The `data-sizing-selector` will be run from the current element instead\n * of the `document`.\n *\n * @param el - The element to find a sizing container for.\n * @returns the sizing container relative to the provided element, or `null` if\n * none could be found.\n * @throws This error will be thrown if using the `data-query-selector` and the\n * query selector does not return an element on the page.\n */\nexport function findSizingContainer(el) {\n  if (!el) {\n    return null;\n  }\n\n  if (/(tree|list)item/.test(el.getAttribute(\"role\") || \"\")) {\n    var content = el.querySelector(\".rmd-tree-item__content, .rmd-item-text\");\n\n    if (content) {\n      return content;\n    }\n  } else if (el.getAttribute(\"type\") === \"file\") {\n    var label = document.querySelector(\"[for=\\\"\" + el.id + \"\\\"]\");\n\n    if (label) {\n      return label;\n    }\n  }\n\n  var data = el.getAttribute(\"data-sizing-selector\");\n\n  if (data) {\n    var content = el.querySelector(data);\n\n    if (content) {\n      return content;\n    }\n\n    if (process.env.NODE_ENV !== \"production\") {\n      throw new Error(\"Unable to find a child element using the `data-sizing-selector`\");\n    }\n  }\n\n  return el;\n}","map":{"version":3,"sources":["../../src/positioning/findSizingContainer.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AACH,OAAM,SAAU,mBAAV,CACJ,EADI,EACkB;AAEtB,MAAI,CAAC,EAAL,EAAS;AACP,WAAO,IAAP;AACD;;AAED,MAAI,kBAAkB,IAAlB,CAAuB,EAAE,CAAC,YAAH,CAAgB,MAAhB,KAA2B,EAAlD,CAAJ,EAA2D;AACzD,QAAM,OAAO,GAAG,EAAE,CAAC,aAAH,CACd,yCADc,CAAhB;;AAGA,QAAI,OAAJ,EAAa;AACX,aAAO,OAAP;AACD;AACF,GAPD,MAOO,IAAI,EAAE,CAAC,YAAH,CAAgB,MAAhB,MAA4B,MAAhC,EAAwC;AAC7C,QAAM,KAAK,GAAG,QAAQ,CAAC,aAAT,CAAyC,YAAS,EAAE,CAAC,EAAZ,GAAc,KAAvD,CAAd;;AACA,QAAI,KAAJ,EAAW;AACT,aAAO,KAAP;AACD;AACF;;AAED,MAAM,IAAI,GAAG,EAAE,CAAC,YAAH,CAAgB,sBAAhB,CAAb;;AACA,MAAI,IAAJ,EAAU;AACR,QAAM,OAAO,GAAG,EAAE,CAAC,aAAH,CAAiB,IAAjB,CAAhB;;AACA,QAAI,OAAJ,EAAa;AACX,aAAO,OAAP;AACD;;AAED,QAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,YAAM,IAAI,KAAJ,CACJ,iEADI,CAAN;AAGD;AACF;;AAED,SAAO,EAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * Attempts to find a sizing container based on the provided HTMLElement. By\n * default, the sizing element will just be the provided element unless:\n * - the item has a known role within react-md that can target known classes\n * - the item has a `data-sizing-selector` attribute that is a valid query\n *   selector for the nested item.\n *\n * NOTE: The `data-sizing-selector` will be run from the current element instead\n * of the `document`.\n *\n * @param el - The element to find a sizing container for.\n * @returns the sizing container relative to the provided element, or `null` if\n * none could be found.\n * @throws This error will be thrown if using the `data-query-selector` and the\n * query selector does not return an element on the page.\n */\nexport function findSizingContainer(el) {\n    if (!el) {\n        return null;\n    }\n    if (/(tree|list)item/.test(el.getAttribute(\"role\") || \"\")) {\n        var content = el.querySelector(\".rmd-tree-item__content, .rmd-item-text\");\n        if (content) {\n            return content;\n        }\n    }\n    else if (el.getAttribute(\"type\") === \"file\") {\n        var label = document.querySelector(\"[for=\\\"\" + el.id + \"\\\"]\");\n        if (label) {\n            return label;\n        }\n    }\n    var data = el.getAttribute(\"data-sizing-selector\");\n    if (data) {\n        var content = el.querySelector(data);\n        if (content) {\n            return content;\n        }\n        if (process.env.NODE_ENV !== \"production\") {\n            throw new Error(\"Unable to find a child element using the `data-sizing-selector`\");\n        }\n    }\n    return el;\n}\n//# sourceMappingURL=findSizingContainer.js.map"]},"metadata":{},"sourceType":"module"}