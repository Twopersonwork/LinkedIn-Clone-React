{"ast":null,"code":"var _jsxFileName = \"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Post.js\";\nimport InputOption from \"./InputOption\";\nimport \"./Post.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport React, { Component } from \"react\";\nimport Count from \"./Count\";\nimport { withCookies } from \"react-cookie\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Feed from \"./Feed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitLike = () => {\n      if (!this.state.has_liked) {\n        fetch(`http://127.0.0.1:8000/papi/posts/${this.props.post.id}/likePost/`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n          }\n        }).then(resp => resp.json()).then(resp => {\n          console.log(resp);\n\n          if (resp.result) {\n            this.setState({\n              has_liked: true // no_of_like: this.props.post.no_of_like + 1,\n\n            });\n          }\n        }).catch(errors => console.log(errors));\n      } else {\n        console.log(\"disliked\");\n        fetch(`http://127.0.0.1:8000/papi/posts/${this.props.post.id}/dislikePost/`, {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n          }\n        }).then(resp => resp.json()).then(() => {\n          this.setState({\n            has_liked: !this.state.has_liked\n          });\n        }).catch(errors => console.log(errors));\n      }\n    };\n\n    this.fetchUser = id => {\n      fetch(`http://127.0.0.1:8000/uapi/users/${id}/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(resp => resp.json()).then(res => this.setState({\n        user: res\n      })).catch(error => console.log(error));\n    };\n\n    this.handleRefresh = () => {\n      this.setState({});\n    };\n\n    this.state = {\n      user: \"\",\n      no_of_like: null,\n      has_liked: false,\n      post: this.props.post\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser(this.props.post.user);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.has_liked != this.state.has_liked) {\n      fetch(`${process.env.REACT_APP_API_URL}/papi/posts/${this.props.post.id}/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n        }\n      }).then(resp => resp.json()).then(res => this.setState({\n        post: res\n      })).catch(error => console.log(error));\n    }\n  }\n\n  render() {\n    console.log(\"called render\");\n    const {\n      post\n    } = this.props;\n\n    if (this.props.post.likes.some(e => e.user == this.props.cookies.get(\"auth-token\").user.id)) {\n      this.state.has_liked = true;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__header\",\n        children: [this.state.user.profile_pic ? /*#__PURE__*/_jsxDEV(Avatar, {\n          src: this.state.user.profile_pic,\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n          src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTP9xCw-TO3d5DvvvTaUE2dx6VLYNO52xxG5A&usqp=CAU\",\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: this.state.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted\",\n            style: {\n              fontSize: \"17px\"\n            },\n            children: this.state.user.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted ml-1\",\n            style: {\n              fontSize: \"17px\"\n            },\n            children: this.state.user.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"post__image\",\n          src: post.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Count, {\n          post: this.state.post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__buttons\",\n        children: [/*#__PURE__*/_jsxDEV(InputOption, {\n          submitLike: this.submitLike,\n          Icon: ThumbUpIcon,\n          title: \"Like\",\n          color: this.state.has_liked ? \"blue\" : \"gray\" // color={this.state.color}\n          ,\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: ChatOutlinedIcon,\n          title: \"Comment\",\n          color: \"gray\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: ShareOutlinedIcon,\n          title: \"Share\",\n          color: \"gray\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n          Icon: SendOutlinedIcon,\n          title: \"Send\",\n          color: \"gray\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withCookies(Post); // const Post =  forwardRef (({name,description, message, photoUrl}, ref) => {\n//     return (\n//         <div ref ={ref} className ='post'>\n//         <div className=\"post__header\">\n//             <Avatar className=\"mt-1\" src=\"https://img.republicworld.com/republic-prod/stories/promolarge/xxhdpi/sdwpmnu8jc7dl86x_1613127617.jpeg\">{name[0]}</Avatar>\n//             <div className=\"post__info\">\n//                 <span style={{fontWeight:\"bold\"}}>{name}</span><br/>\n//                 <span className=\"text-muted\" style={{fontSize:\"17px\"}}>{description}</span>\n//             </div>\n//         </div>\n//          <div className=\"post__body\">\n//              <p>{message}</p>\n//          </div>\n//          <div className=\"post__buttons\">\n//              <InputOption Icon = {ThumbUpIcon}  title =\"Like\" color =\"gray\"/>\n//              <InputOption Icon = {ChatOutlinedIcon}  title =\"Comment\" color =\"gray\"/>\n//              <InputOption Icon = {ShareOutlinedIcon}  title =\"Share\" color =\"gray\"/>\n//              <InputOption Icon = {SendOutlinedIcon}  title =\"Send\" color =\"gray\"/>\n//          </div>\n//         </div>\n//     )\n// })\n// export default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Post.js"],"names":["InputOption","Avatar","ThumbUpIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","React","Component","Count","withCookies","Link","Redirect","Feed","Post","constructor","props","submitLike","state","has_liked","fetch","post","id","method","headers","Authorization","cookies","get","token","then","resp","json","console","log","result","setState","catch","errors","fetchUser","res","user","error","handleRefresh","no_of_like","componentDidMount","componentDidUpdate","prevProps","prevState","process","env","REACT_APP_API_URL","render","likes","some","e","profile_pic","fontWeight","username","fontSize","firstName","lastName","body","image"],"mappings":"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","sourcesContent":["import InputOption from \"./InputOption\";\nimport \"./Post.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ChatOutlinedIcon from \"@material-ui/icons/ChatOutlined\";\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\nimport React, { Component } from \"react\";\nimport Count from \"./Count\";\nimport { withCookies } from \"react-cookie\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Feed from \"./Feed\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: \"\",\n      no_of_like: null,\n      has_liked: false,\n      post: this.props.post,\n    };\n  }\n\n  submitLike = () => {\n    if (!this.state.has_liked) {\n      fetch(\n        `http://127.0.0.1:8000/papi/posts/${this.props.post.id}/likePost/`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${\n              this.props.cookies.get(\"auth-token\").token\n            }`,\n          },\n        }\n      )\n        .then((resp) => resp.json())\n        .then((resp) => {\n          console.log(resp);\n          if (resp.result) {\n            this.setState({\n              has_liked: true,\n              // no_of_like: this.props.post.no_of_like + 1,\n            });\n          }\n        })\n        .catch((errors) => console.log(errors));\n    } else {\n      console.log(\"disliked\");\n      fetch(\n        `http://127.0.0.1:8000/papi/posts/${this.props.post.id}/dislikePost/`,\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${\n              this.props.cookies.get(\"auth-token\").token\n            }`,\n          },\n        }\n      )\n        .then((resp) => resp.json())\n        .then(() => {\n          this.setState({ has_liked: !this.state.has_liked });\n        })\n        .catch((errors) => console.log(errors));\n    }\n  };\n\n  fetchUser = (id) => {\n    fetch(`http://127.0.0.1:8000/uapi/users/${id}/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then((res) =>\n        this.setState({\n          user: res,\n        })\n      )\n      .catch((error) => console.log(error));\n  };\n  handleRefresh = () => {\n    this.setState({});\n  };\n  componentDidMount() {\n    this.fetchUser(this.props.post.user);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.has_liked != this.state.has_liked) {\n      fetch(\n        `${process.env.REACT_APP_API_URL}/papi/posts/${this.props.post.id}/`,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${\n              this.props.cookies.get(\"auth-token\").token\n            }`,\n          },\n        }\n      )\n        .then((resp) => resp.json())\n        .then((res) =>\n          this.setState({\n            post: res,\n          })\n        )\n        .catch((error) => console.log(error));\n    }\n  }\n  render() {\n    console.log(\"called render\");\n    const { post } = this.props;\n    if (\n      this.props.post.likes.some(\n        (e) => e.user == this.props.cookies.get(\"auth-token\").user.id\n      )\n    ) {\n      this.state.has_liked = true;\n    }\n    return (\n      <div className=\"post\">\n        <div className=\"post__header\">\n          {this.state.user.profile_pic ? (\n            <Avatar src={this.state.user.profile_pic} alt=\"Profile\" />\n          ) : (\n            <Avatar\n              src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTP9xCw-TO3d5DvvvTaUE2dx6VLYNO52xxG5A&usqp=CAU\"\n              alt=\"Profile\"\n            />\n          )}\n          {/* {this.fetchUser(user)} */}\n\n          <div className=\"post__info\">\n            <span style={{ fontWeight: \"bold\" }}>\n              {this.state.user.username}\n            </span>\n            <br />\n            <span className=\"text-muted\" style={{ fontSize: \"17px\" }}>\n              {this.state.user.firstName}\n            </span>\n            <span className=\"text-muted ml-1\" style={{ fontSize: \"17px\" }}>\n              {this.state.user.lastName}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"post__body\">\n          <p>{post.body}</p>\n          <img className=\"post__image\" src={post.image} />\n\n          <Count post={this.state.post} />\n        </div>\n        <div className=\"post__buttons\">\n          <InputOption\n            submitLike={this.submitLike}\n            Icon={ThumbUpIcon}\n            title=\"Like\"\n            color={this.state.has_liked ? \"blue\" : \"gray\"}\n            // color={this.state.color}\n            post={post}\n          />\n          <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\" />\n          <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\n          <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withCookies(Post);\n\n// const Post =  forwardRef (({name,description, message, photoUrl}, ref) => {\n//     return (\n//         <div ref ={ref} className ='post'>\n//         <div className=\"post__header\">\n//             <Avatar className=\"mt-1\" src=\"https://img.republicworld.com/republic-prod/stories/promolarge/xxhdpi/sdwpmnu8jc7dl86x_1613127617.jpeg\">{name[0]}</Avatar>\n//             <div className=\"post__info\">\n//                 <span style={{fontWeight:\"bold\"}}>{name}</span><br/>\n//                 <span className=\"text-muted\" style={{fontSize:\"17px\"}}>{description}</span>\n//             </div>\n//         </div>\n\n//          <div className=\"post__body\">\n//              <p>{message}</p>\n//          </div>\n//          <div className=\"post__buttons\">\n//              <InputOption Icon = {ThumbUpIcon}  title =\"Like\" color =\"gray\"/>\n//              <InputOption Icon = {ChatOutlinedIcon}  title =\"Comment\" color =\"gray\"/>\n//              <InputOption Icon = {ShareOutlinedIcon}  title =\"Share\" color =\"gray\"/>\n//              <InputOption Icon = {SendOutlinedIcon}  title =\"Send\" color =\"gray\"/>\n//          </div>\n//         </div>\n//     )\n// })\n\n// export default Post;\n"]},"metadata":{},"sourceType":"module"}