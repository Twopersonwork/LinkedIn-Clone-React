{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nimport { isEmpty } from \"./isEmpty\";\nvar block = bem(\"rmd-badge\");\n/**\n * This component is generally used for displaying notifications with a count\n * relative to another element with the `BadgeContainer` component. However, it\n * can be used by itself to display any subpplementary content if needed.\n */\n\nexport var Badge = forwardRef(function Badge(_a, ref) {\n  var _b;\n\n  var className = _a.className,\n      _c = _a.theme,\n      theme = _c === void 0 ? \"default\" : _c,\n      _d = _a.children,\n      children = _d === void 0 ? null : _d,\n      _e = _a.disableNullOnZero,\n      disableNullOnZero = _e === void 0 ? false : _e,\n      props = __rest(_a, [\"className\", \"theme\", \"children\", \"disableNullOnZero\"]);\n\n  if (isEmpty(children, disableNullOnZero)) {\n    return null;\n  }\n\n  return React.createElement(\"span\", __assign({}, props, {\n    ref: ref,\n    className: cn(block((_b = {}, _b[theme] = theme !== \"clear\", _b)), className)\n  }), children);\n});\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    Badge.propTypes = {\n      id: PropTypes.string.isRequired,\n      theme: PropTypes.oneOf([\"primary\", \"secondary\", \"default\", \"clear\"]),\n      className: PropTypes.string,\n      children: PropTypes.node,\n      disableNullOnZero: PropTypes.bool\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../src/Badge.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,UAAhB,QAA6D,OAA7D;AACA,OAAO,EAAP,MAAe,YAAf;AACA,SAAS,GAAT,QAAoB,iBAApB;AAEA,SAAS,OAAT,QAAwB,WAAxB;AA8BA,IAAM,KAAK,GAAG,GAAG,CAAC,WAAD,CAAjB;AAEA;;;;AAIG;;AACH,OAAO,IAAM,KAAK,GAAG,UAAU,CAA8B,SAAS,KAAT,CAC3D,EAD2D,EAQ3D,GAR2D,EAQxD;;;AAND,MAAA,SAAS,GAAA,EAAA,CAAA,SAAT;AAAA,MACA,EAAA,GAAA,EAAA,CAAA,KADA;AAAA,MACA,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,SAAH,GAAY,EADjB;AAAA,MAEA,EAAA,GAAA,EAAA,CAAA,QAFA;AAAA,MAEA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,EAFf;AAAA,MAGA,EAAA,GAAA,EAAA,CAAA,iBAHA;AAAA,MAGA,iBAAiB,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAHzB;AAAA,MAIG,KAAK,GAAA,MAAA,CAAA,EAAA,EALV,CAAA,WAAA,EAAA,OAAA,EAAA,UAAA,EAAA,mBAAA,CAKU,CAJR;;AAQF,MAAI,OAAO,CAAC,QAAD,EAAW,iBAAX,CAAX,EAA0C;AACxC,WAAO,IAAP;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,EACW;AACT,IAAA,GAAG,EAAE,GADI;AAET,IAAA,SAAS,EAAE,EAAE,CAAC,KAAK,EAAA,EAAA,GAAA,EAAA,EAAG,EAAA,CAAC,KAAD,CAAA,GAAS,KAAK,KAAK,OAAtB,EAA6B,EAA7B,EAAN,EAAwC,SAAxC;AAFJ,GADX,CAAA,EAKG,QALH,CADF;AASD,CAvB8B,CAAxB;AAyBP;;AACA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,KAAK,CAAC,SAAN,GAAkB;AAChB,MAAA,EAAE,EAAE,SAAS,CAAC,MAAV,CAAiB,UADL;AAEhB,MAAA,KAAK,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,SAAD,EAAY,WAAZ,EAAyB,SAAzB,EAAoC,OAApC,CAAhB,CAFS;AAGhB,MAAA,SAAS,EAAE,SAAS,CAAC,MAHL;AAIhB,MAAA,QAAQ,EAAE,SAAS,CAAC,IAJJ;AAKhB,MAAA,iBAAiB,EAAE,SAAS,CAAC;AALb,KAAlB;AAOD,GAVD,CAUE,OAAO,CAAP,EAAU,CAAE;AACf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nimport { isEmpty } from \"./isEmpty\";\nvar block = bem(\"rmd-badge\");\n/**\n * This component is generally used for displaying notifications with a count\n * relative to another element with the `BadgeContainer` component. However, it\n * can be used by itself to display any subpplementary content if needed.\n */\nexport var Badge = forwardRef(function Badge(_a, ref) {\n    var _b;\n    var className = _a.className, _c = _a.theme, theme = _c === void 0 ? \"default\" : _c, _d = _a.children, children = _d === void 0 ? null : _d, _e = _a.disableNullOnZero, disableNullOnZero = _e === void 0 ? false : _e, props = __rest(_a, [\"className\", \"theme\", \"children\", \"disableNullOnZero\"]);\n    if (isEmpty(children, disableNullOnZero)) {\n        return null;\n    }\n    return (React.createElement(\"span\", __assign({}, props, { ref: ref, className: cn(block((_b = {}, _b[theme] = theme !== \"clear\", _b)), className) }), children));\n});\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        Badge.propTypes = {\n            id: PropTypes.string.isRequired,\n            theme: PropTypes.oneOf([\"primary\", \"secondary\", \"default\", \"clear\"]),\n            className: PropTypes.string,\n            children: PropTypes.node,\n            disableNullOnZero: PropTypes.bool,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=Badge.js.map"]},"metadata":{},"sourceType":"module"}