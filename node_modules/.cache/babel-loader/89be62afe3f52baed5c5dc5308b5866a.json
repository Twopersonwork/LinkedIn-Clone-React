{"ast":null,"code":"var _jsxFileName = \"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Feed.js\";\nimport \"./Feed.css\";\nimport InputOption from \"./InputOption\";\nimport Post from \"./Post\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\nimport FlipMove from \"react-flip-move\";\nimport React, { Component } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport CreatePost from \"./CreatePost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Feed extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createPost = () => {\n      this.setState({\n        modalPost: true\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      posts: [],\n      modalPost: false\n    };\n  } // submitPost = () => {\n  //   let form_data = new FormData();\n  //   form_data.append(\n  //     \"image\",\n  //     this.state.imageAsFile,\n  //     this.state.imageAsFile.name\n  //   );\n  //   form_data.append(\"body\", this.state.body);\n  //   form_data.append(\"user\",this.props.cookies.get(\"auth-token\").id)\n  //   let url = `${process.env.REACT_APP_API_URL}/papi/create_post/`;\n  //   axios\n  //     .post(url, form_data, {\n  //       headers: {\n  //         \"content-type\": \"multipart/form-data\",\n  //         Authorization: \"Bearer d194a979f94b27587f743071a64f8d5c7d3dfb01\",\n  //       },\n  //     })\n  //     .then((res) => {\n  //       this.setState({ modalPost: false }, function () {\n  //         window.location.reload();\n  //       });\n  //       console.log(res.data);\n  //     })\n  //     .catch((err) => console.log(err));\n  // };\n\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/papi/posts/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n      }\n    }).then(resp => resp.json()).then(res => this.setState({\n      posts: res\n    }, console.log(res))).catch(error => console.log(error));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.posts.length != this.state.posts.length) {\n      fetch(`${process.env.REACT_APP_API_URL}/papi/posts/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n        }\n      }).then(resp => resp.json()).then(res => this.setState({\n        posts: res\n      })).catch(error => console.log(error));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed__inputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: \"100%\"\n          },\n          onClick: this.createPost,\n          className: \"feed__input\",\n          children: \"Start a Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed__inputOptions\",\n          children: [/*#__PURE__*/_jsxDEV(InputOption, {\n            Icon: ImageIcon,\n            title: \"Photo\",\n            color: \"#70B5F9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n            Icon: SubscriptionsIcon,\n            title: \"Video\",\n            color: \"#7FC15E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n            Icon: EventNoteIcon,\n            title: \"Event\",\n            color: \"#E7A33E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n            Icon: CalendarViewDayIcon,\n            title: \"Write article\",\n            color: \"#F5987E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlipMove, {\n        children: this.state.posts.length > 0 && this.state.posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreatePost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withCookies(Feed);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Feed.js"],"names":["InputOption","Post","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","FlipMove","React","Component","withCookies","CreatePost","Feed","constructor","props","createPost","setState","modalPost","state","input","posts","componentDidMount","fetch","process","env","REACT_APP_API_URL","method","headers","Authorization","cookies","get","token","then","resp","json","res","console","log","catch","error","componentDidUpdate","prevProps","prevState","length","render","width","map","post","id"],"mappings":"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","sourcesContent":["import \"./Feed.css\";\nimport InputOption from \"./InputOption\";\nimport Post from \"./Post\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\nimport FlipMove from \"react-flip-move\";\nimport React, { Component } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport CreatePost from \"./CreatePost\";\n\nclass Feed extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      posts: [],\n      modalPost: false,\n    };\n  }\n\n  // submitPost = () => {\n  //   let form_data = new FormData();\n\n  //   form_data.append(\n  //     \"image\",\n  //     this.state.imageAsFile,\n  //     this.state.imageAsFile.name\n  //   );\n  //   form_data.append(\"body\", this.state.body);\n  //   form_data.append(\"user\",this.props.cookies.get(\"auth-token\").id)\n  //   let url = `${process.env.REACT_APP_API_URL}/papi/create_post/`;\n  //   axios\n  //     .post(url, form_data, {\n  //       headers: {\n  //         \"content-type\": \"multipart/form-data\",\n  //         Authorization: \"Bearer d194a979f94b27587f743071a64f8d5c7d3dfb01\",\n  //       },\n  //     })\n  //     .then((res) => {\n  //       this.setState({ modalPost: false }, function () {\n  //         window.location.reload();\n  //       });\n\n  //       console.log(res.data);\n  //     })\n  //     .catch((err) => console.log(err));\n  // };\n\n  createPost = () => {\n    this.setState({\n      modalPost: true,\n    });\n  };\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/papi/posts/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n      },\n    })\n      .then((resp) => resp.json())\n      .then((res) =>\n        this.setState(\n          {\n            posts: res,\n          },\n          console.log(res)\n        )\n      )\n      .catch((error) => console.log(error));\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.posts.length != this.state.posts.length) {\n      fetch(`${process.env.REACT_APP_API_URL}/papi/posts/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n        },\n      })\n        .then((resp) => resp.json())\n        .then((res) =>\n          this.setState({\n            posts: res,\n          })\n        )\n        .catch((error) => console.log(error));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"feed\">\n        <div className=\"feed__inputContainer\">\n          <button\n            style={{ width: \"100%\" }}\n            onClick={this.createPost}\n            className=\"feed__input\"\n          >\n            Start a Post\n          </button>\n          <div className=\"feed__inputOptions\">\n            <InputOption Icon={ImageIcon} title=\"Photo\" color=\"#70B5F9\" />\n            <InputOption\n              Icon={SubscriptionsIcon}\n              title=\"Video\"\n              color=\"#7FC15E\"\n            />\n            <InputOption Icon={EventNoteIcon} title=\"Event\" color=\"#E7A33E\" />\n            <InputOption\n              Icon={CalendarViewDayIcon}\n              title=\"Write article\"\n              color=\"#F5987E\"\n            />\n          </div>\n        </div>\n        <hr />\n\n        {/* Posts */}\n        <FlipMove>\n          {this.state.posts.length > 0 &&\n            this.state.posts.map((post) => <Post key={post.id} post={post} />)}\n        </FlipMove>\n        <CreatePost />\n      </div>\n    );\n  }\n}\n\nexport default withCookies(Feed);\n"]},"metadata":{},"sourceType":"module"}