{"ast":null,"code":"import React, { createContext, useContext, useMemo } from \"react\";\nimport { DEFAULT_RIPPLE_CLASSNAMES, DEFAULT_RIPPLE_TIMEOUT } from \"./ripples/constants\";\nexport var StatesConfigContext = createContext({\n  rippleTimeout: DEFAULT_RIPPLE_TIMEOUT,\n  rippleClassNames: DEFAULT_RIPPLE_CLASSNAMES,\n  disableRipple: false,\n  disableProgrammaticRipple: false\n});\n/**\n * A simple hook that can be used to get the Ripple context. This is used behind\n * the scenes for the Ripple component and _probably_ shouldn't be used anywhere\n * else. It's mostly used to just use the context defaults when the timeout or\n * classNames are undefined.\n */\n\nexport function useStatesConfigContext() {\n  return useContext(StatesConfigContext);\n}\n/**\n * The `StatesConfig` component is a top-level context provider for the states\n * context configuration. It'll keep track of:\n *\n * - the current interaction mode of your user\n * - configuration for ripple effects\n * - disabling or enabling the ripple effects\n * - disabling or enabling the fix for color pollution\n */\n\nexport function StatesConfig(_a) {\n  var _b = _a.rippleTimeout,\n      rippleTimeout = _b === void 0 ? DEFAULT_RIPPLE_TIMEOUT : _b,\n      _c = _a.rippleClassNames,\n      rippleClassNames = _c === void 0 ? DEFAULT_RIPPLE_CLASSNAMES : _c,\n      _d = _a.disableRipple,\n      disableRipple = _d === void 0 ? false : _d,\n      _e = _a.disableProgrammaticRipple,\n      disableProgrammaticRipple = _e === void 0 ? false : _e,\n      children = _a.children;\n  var value = useMemo(function () {\n    return {\n      rippleTimeout: rippleTimeout,\n      rippleClassNames: rippleClassNames,\n      disableRipple: disableRipple,\n      disableProgrammaticRipple: disableProgrammaticRipple\n    };\n  }, [rippleTimeout, rippleClassNames, disableRipple, disableProgrammaticRipple]);\n  return React.createElement(StatesConfigContext.Provider, {\n    value: value\n  }, children);\n}\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    StatesConfig.propTypes = {\n      rippleTimeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n        enter: PropTypes.number,\n        exit: PropTypes.number\n      })]),\n      rippleClassNames: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n        enter: PropTypes.string,\n        enterActive: PropTypes.string,\n        enterDone: PropTypes.string,\n        exit: PropTypes.string,\n        exitActive: PropTypes.string\n      })]),\n      disableRipple: PropTypes.bool,\n      disableProgrammaticRipple: PropTypes.bool,\n      children: PropTypes.node.isRequired\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../src/StatesConfig.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,IACE,aADF,EAIE,UAJF,EAKE,OALF,QAMO,OANP;AAUA,SACE,yBADF,EAEE,sBAFF,QAGO,qBAHP;AAoCA,OAAO,IAAM,mBAAmB,GAAG,aAAa,CAA0B;AACxE,EAAA,aAAa,EAAE,sBADyD;AAExE,EAAA,gBAAgB,EAAE,yBAFsD;AAGxE,EAAA,aAAa,EAAE,KAHyD;AAIxE,EAAA,yBAAyB,EAAE;AAJ6C,CAA1B,CAAzC;AAOP;;;;;AAKG;;AACH,OAAM,SAAU,sBAAV,GAAgC;AACpC,SAAO,UAAU,CAAC,mBAAD,CAAjB;AACD;AAMD;;;;;;;;AAQG;;AACH,OAAM,SAAU,YAAV,CAAuB,EAAvB,EAMc;MALlB,EAAA,GAAA,EAAA,CAAA,a;MAAA,aAAa,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,sBAAH,GAAyB,E;MACtC,EAAA,GAAA,EAAA,CAAA,gB;MAAA,gBAAgB,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,yBAAH,GAA4B,E;MAC5C,EAAA,GAAA,EAAA,CAAA,a;MAAA,aAAa,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,E;MACrB,EAAA,GAAA,EAAA,CAAA,yB;MAAA,yBAAyB,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,E;MACjC,QAAQ,GAAA,EAAA,CAAA,Q;AAER,MAAM,KAAK,GAAG,OAAO,CACnB,YAAA;AAAM,WAAC;AACL,MAAA,aAAa,EAAA,aADR;AAEL,MAAA,gBAAgB,EAAA,gBAFX;AAGL,MAAA,aAAa,EAAA,aAHR;AAIL,MAAA,yBAAyB,EAAA;AAJpB,KAAD;AAKJ,GANiB,EAOnB,CAAC,aAAD,EAAgB,gBAAhB,EAAkC,aAAlC,EAAiD,yBAAjD,CAPmB,CAArB;AAUA,SACE,KAAA,CAAA,aAAA,CAAC,mBAAmB,CAAC,QAArB,EAA6B;AAAC,IAAA,KAAK,EAAE;AAAR,GAA7B,EACG,QADH,CADF;AAKD;AAED;;AACA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,YAAY,CAAC,SAAb,GAAyB;AACvB,MAAA,aAAa,EAAE,SAAS,CAAC,SAAV,CAAoB,CACjC,SAAS,CAAC,MADuB,EAEjC,SAAS,CAAC,KAAV,CAAgB;AACd,QAAA,KAAK,EAAE,SAAS,CAAC,MADH;AAEd,QAAA,IAAI,EAAE,SAAS,CAAC;AAFF,OAAhB,CAFiC,CAApB,CADQ;AAQvB,MAAA,gBAAgB,EAAE,SAAS,CAAC,SAAV,CAAoB,CACpC,SAAS,CAAC,MAD0B,EAEpC,SAAS,CAAC,KAAV,CAAgB;AACd,QAAA,KAAK,EAAE,SAAS,CAAC,MADH;AAEd,QAAA,WAAW,EAAE,SAAS,CAAC,MAFT;AAGd,QAAA,SAAS,EAAE,SAAS,CAAC,MAHP;AAId,QAAA,IAAI,EAAE,SAAS,CAAC,MAJF;AAKd,QAAA,UAAU,EAAE,SAAS,CAAC;AALR,OAAhB,CAFoC,CAApB,CARK;AAkBvB,MAAA,aAAa,EAAE,SAAS,CAAC,IAlBF;AAmBvB,MAAA,yBAAyB,EAAE,SAAS,CAAC,IAnBd;AAoBvB,MAAA,QAAQ,EAAE,SAAS,CAAC,IAAV,CAAe;AApBF,KAAzB;AAsBD,GAzBD,CAyBE,OAAO,CAAP,EAAU,CAAE;AACf","sourceRoot":"","sourcesContent":["import React, { createContext, useContext, useMemo, } from \"react\";\nimport { DEFAULT_RIPPLE_CLASSNAMES, DEFAULT_RIPPLE_TIMEOUT, } from \"./ripples/constants\";\nexport var StatesConfigContext = createContext({\n    rippleTimeout: DEFAULT_RIPPLE_TIMEOUT,\n    rippleClassNames: DEFAULT_RIPPLE_CLASSNAMES,\n    disableRipple: false,\n    disableProgrammaticRipple: false,\n});\n/**\n * A simple hook that can be used to get the Ripple context. This is used behind\n * the scenes for the Ripple component and _probably_ shouldn't be used anywhere\n * else. It's mostly used to just use the context defaults when the timeout or\n * classNames are undefined.\n */\nexport function useStatesConfigContext() {\n    return useContext(StatesConfigContext);\n}\n/**\n * The `StatesConfig` component is a top-level context provider for the states\n * context configuration. It'll keep track of:\n *\n * - the current interaction mode of your user\n * - configuration for ripple effects\n * - disabling or enabling the ripple effects\n * - disabling or enabling the fix for color pollution\n */\nexport function StatesConfig(_a) {\n    var _b = _a.rippleTimeout, rippleTimeout = _b === void 0 ? DEFAULT_RIPPLE_TIMEOUT : _b, _c = _a.rippleClassNames, rippleClassNames = _c === void 0 ? DEFAULT_RIPPLE_CLASSNAMES : _c, _d = _a.disableRipple, disableRipple = _d === void 0 ? false : _d, _e = _a.disableProgrammaticRipple, disableProgrammaticRipple = _e === void 0 ? false : _e, children = _a.children;\n    var value = useMemo(function () { return ({\n        rippleTimeout: rippleTimeout,\n        rippleClassNames: rippleClassNames,\n        disableRipple: disableRipple,\n        disableProgrammaticRipple: disableProgrammaticRipple,\n    }); }, [rippleTimeout, rippleClassNames, disableRipple, disableProgrammaticRipple]);\n    return (React.createElement(StatesConfigContext.Provider, { value: value }, children));\n}\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        StatesConfig.propTypes = {\n            rippleTimeout: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.shape({\n                    enter: PropTypes.number,\n                    exit: PropTypes.number,\n                }),\n            ]),\n            rippleClassNames: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.shape({\n                    enter: PropTypes.string,\n                    enterActive: PropTypes.string,\n                    enterDone: PropTypes.string,\n                    exit: PropTypes.string,\n                    exitActive: PropTypes.string,\n                }),\n            ]),\n            disableRipple: PropTypes.bool,\n            disableProgrammaticRipple: PropTypes.bool,\n            children: PropTypes.node.isRequired,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=StatesConfig.js.map"]},"metadata":{},"sourceType":"module"}