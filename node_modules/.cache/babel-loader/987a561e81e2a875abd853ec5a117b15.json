{"ast":null,"code":"var _jsxFileName = \"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Count.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Count extends Component {\n  constructor(props) {\n    super(props);\n\n    this.LikeInfo = id => {\n      fetch(`http://127.0.0.1:8000/uapi/users/${id}/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token d194a979f94b27587f743071a64f8d5c7d3dfb01\"\n        }\n      }).then(resp => resp.json()).then(res => this.setState({\n        user: res.username,\n        show: true\n      }, console.log(this.state.user))).catch(error => console.log(error));\n    };\n\n    this.state = {\n      user: \"\",\n      show: false\n    };\n  }\n\n  componentDidMount() {// this.LikeInfo(this.props)\n  }\n\n  render() {\n    const {\n      likes,\n      comments,\n      no_of_like,\n      no_of_comment\n    } = this.props;\n    console.log(no_of_like);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [likes.map(like => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: this.LikeInfo(like.user),\n          className: \"button\",\n          children: no_of_like\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)), this.state.show ? /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.show,\n        size: \"md\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          onClick: () => {\n            this.setState({\n              show: false\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Create a Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"What do you want to talk about?\" // value={this.state.body}\n            ,\n            onChange: this.handleBody\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), this.state.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"post__image\",\n            src: this.state.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Count;","map":{"version":3,"sources":["/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Count.js"],"names":["React","Component","Count","constructor","props","LikeInfo","id","fetch","method","headers","Authorization","then","resp","json","res","setState","user","username","show","console","log","state","catch","error","componentDidMount","render","likes","comments","no_of_like","no_of_comment","map","like","handleBody","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,QAbmB,GAaPC,EAAD,IAAQ;AACjBC,MAAAA,KAAK,CAAE,oCAAmCD,EAAG,GAAxC,EAA4C;AAC/CE,QAAAA,MAAM,EAAE,KADuC;AAE/CC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE;AAFR;AAFsC,OAA5C,CAAL,CAOGC,IAPH,CAOSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAPlB,EAQGF,IARH,CAQSG,GAAD,IACJ,KAAKC,QAAL,CACE;AACEC,QAAAA,IAAI,EAAEF,GAAG,CAACG,QADZ;AAEEC,QAAAA,IAAI,EAAE;AAFR,OADF,EAKEC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWL,IAAvB,CALF,CATJ,EAiBGM,KAjBH,CAiBUC,KAAD,IAAWJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,CAjBpB;AAkBD,KAhCkB;;AAGjB,SAAKF,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE,EADK;AAEXE,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAEDM,EAAAA,iBAAiB,GAAG,CAClB;AACD;;AAuBDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA,UAAnB;AAA+BC,MAAAA;AAA/B,QAAiD,KAAKzB,KAA5D;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYQ,UAAZ;AACA,wBACE;AAAA,iBACGF,KAAK,CAACI,GAAN,CAAWC,IAAD,iBACT;AAAA,+BACE;AAAG,UAAA,OAAO,EAAE,KAAK1B,QAAL,CAAc0B,IAAI,CAACf,IAAnB,CAAZ;AAAsC,UAAA,SAAS,EAAC,QAAhD;AAAA,oBACGY;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,CADH,EASG,KAAKP,KAAL,CAAWH,IAAX,gBACC,QAAC,KAAD;AACE,QAAA,IAAI,EAAE,KAAKG,KAAL,CAAWH,IADnB;AAEE,QAAA,IAAI,EAAC,IAFP;AAGE,2BAAgB,+BAHlB;AAIE,QAAA,QAAQ,MAJV;AAAA,gCAME,QAAC,KAAD,CAAO,MAAP;AACE,UAAA,WAAW,MADb;AAEE,UAAA,OAAO,EAAE,MAAM;AACb,iBAAKH,QAAL,CAAc;AAAEG,cAAAA,IAAI,EAAE;AAAR,aAAd;AACD,WAJH;AAAA,iCAME,QAAC,KAAD,CAAO,KAAP;AAAa,YAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBANF,eAgBE,QAAC,KAAD,CAAO,IAAP;AAAA,kCAME;AACE,YAAA,WAAW,EAAC,iCADd,CAEE;AAFF;AAGE,YAAA,QAAQ,EAAE,KAAKc;AAHjB;AAAA;AAAA;AAAA;AAAA,kBANF,EAWG,KAAKX,KAAL,CAAWY,KAAX,gBACC;AAAK,YAAA,SAAS,EAAC,aAAf;AAA6B,YAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWY;AAA7C;AAAA;AAAA;AAAA;AAAA,kBADD,GAEG,IAbN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAkCG,IA3CN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+CD;;AArF2B;;AAwF9B,eAAe/B,KAAf","sourcesContent":["import React, { Component } from \"react\";\nclass Count extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: \"\",\n      show: false,\n    };\n  }\n\n  componentDidMount() {\n    // this.LikeInfo(this.props)\n  }\n\n  LikeInfo = (id) => {\n    fetch(`http://127.0.0.1:8000/uapi/users/${id}/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token d194a979f94b27587f743071a64f8d5c7d3dfb01\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then((res) =>\n        this.setState(\n          {\n            user: res.username,\n            show: true,\n          },\n          console.log(this.state.user)\n        )\n      )\n      .catch((error) => console.log(error));\n  };\n\n  render() {\n    const { likes, comments, no_of_like, no_of_comment } = this.props;\n    console.log(no_of_like);\n    return (\n      <div>\n        {likes.map((like) => (\n          <div>\n            <a onClick={this.LikeInfo(like.user)} className=\"button\">\n              {no_of_like}\n            </a>\n            {/* <a className=\"button mt-1\">{no_of_comment}</a> */}\n          </div>\n        ))}\n        {this.state.show ? (\n          <Modal\n            show={this.state.show}\n            size=\"md\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Header\n              closeButton\n              onClick={() => {\n                this.setState({ show: false });\n              }}\n            >\n              <Modal.Title id=\"contained-modal-title-vcenter\">\n                Create a Post\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              {/* <p>\n                Cras mattis consectetur purus sit amet fermentum. Cras justo\n                odio, dapibus ac facilisis in, egestas eget quam. Morbi leo\n                risus, porta ac consectetur ac, vestibulum at eros.\n              </p> */}\n              <input\n                placeholder=\"What do you want to talk about?\"\n                // value={this.state.body}\n                onChange={this.handleBody}\n              />\n              {this.state.image ? (\n                <img className=\"post__image\" src={this.state.image} />\n              ) : null}\n            </Modal.Body>\n            {/* <Modal.Footer></Modal.Footer> */}\n          </Modal>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Count;\n"]},"metadata":{},"sourceType":"module"}