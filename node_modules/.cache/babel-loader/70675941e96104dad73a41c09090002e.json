{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Children, cloneElement, forwardRef, isValidElement } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"../bem\";\nvar block = bem(\"rmd-grid-list\");\nexport var GridListCell = forwardRef(function GridListCell(_a, ref) {\n  var className = _a.className,\n      children = _a.children,\n      _b = _a.square,\n      square = _b === void 0 ? false : _b,\n      _c = _a.clone,\n      clone = _c === void 0 ? false : _c,\n      props = __rest(_a, [\"className\", \"children\", \"square\", \"clone\"]);\n\n  var cellClassName = cn(block(\"cell\", {\n    square: square\n  }), className);\n\n  if (clone && isValidElement(children)) {\n    var child = Children.only(children);\n    return cloneElement(child, {\n      className: cn(cellClassName, child.props.className)\n    });\n  }\n\n  return React.createElement(\"div\", __assign({}, props, {\n    ref: ref,\n    className: cellClassName\n  }), children);\n});\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    GridListCell.propTypes = {\n      clone: PropTypes.bool,\n      square: PropTypes.bool,\n      className: PropTypes.string,\n      children: PropTypes.node\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../../src/layout/GridListCell.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,IACE,QADF,EAEE,YAFF,EAGE,UAHF,EAKE,cALF,QAMO,OANP;AAOA,OAAO,EAAP,MAAe,YAAf;AAEA,SAAS,GAAT,QAAoB,QAApB;AAiBA,IAAM,KAAK,GAAG,GAAG,CAAC,eAAD,CAAjB;AAEA,OAAO,IAAM,YAAY,GAAG,UAAU,CACpC,SAAS,YAAT,CACE,EADF,EAEE,GAFF,EAEK;AADD,MAAA,SAAS,GAAA,EAAA,CAAA,SAAT;AAAA,MAAW,QAAQ,GAAA,EAAA,CAAA,QAAnB;AAAA,MAAqB,EAAA,GAAA,EAAA,CAAA,MAArB;AAAA,MAAqB,MAAM,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAAnC;AAAA,MAAqC,EAAA,GAAA,EAAA,CAAA,KAArC;AAAA,MAAqC,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAAlD;AAAA,MAAuD,KAAK,GAAA,MAAA,CAAA,EAAA,EAA9D,CAAA,WAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,CAA8D,CAA5D;;AAGF,MAAM,aAAa,GAAG,EAAE,CAAC,KAAK,CAAC,MAAD,EAAS;AAAE,IAAA,MAAM,EAAA;AAAR,GAAT,CAAN,EAA4B,SAA5B,CAAxB;;AACA,MAAI,KAAK,IAAI,cAAc,CAAC,QAAD,CAA3B,EAAuC;AACrC,QAAM,KAAK,GAAG,QAAQ,CAAC,IAAT,CAAc,QAAd,CAAd;AACA,WAAO,YAAY,CAAC,KAAD,EAAQ;AACzB,MAAA,SAAS,EAAE,EAAE,CAAC,aAAD,EAAgB,KAAK,CAAC,KAAN,CAAY,SAA5B;AADY,KAAR,CAAnB;AAGD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAS,KAAT,EAAc;AAAE,IAAA,GAAG,EAAE,GAAP;AAAY,IAAA,SAAS,EAAE;AAAvB,GAAd,CAAA,EACG,QADH,CADF;AAKD,CAlBmC,CAA/B;AAqBP;;AACA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,YAAY,CAAC,SAAb,GAAyB;AACvB,MAAA,KAAK,EAAE,SAAS,CAAC,IADM;AAEvB,MAAA,MAAM,EAAE,SAAS,CAAC,IAFK;AAGvB,MAAA,SAAS,EAAE,SAAS,CAAC,MAHE;AAIvB,MAAA,QAAQ,EAAE,SAAS,CAAC;AAJG,KAAzB;AAMD,GATD,CASE,OAAO,CAAP,EAAU,CAAE;AACf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { Children, cloneElement, forwardRef, isValidElement, } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"../bem\";\nvar block = bem(\"rmd-grid-list\");\nexport var GridListCell = forwardRef(function GridListCell(_a, ref) {\n    var className = _a.className, children = _a.children, _b = _a.square, square = _b === void 0 ? false : _b, _c = _a.clone, clone = _c === void 0 ? false : _c, props = __rest(_a, [\"className\", \"children\", \"square\", \"clone\"]);\n    var cellClassName = cn(block(\"cell\", { square: square }), className);\n    if (clone && isValidElement(children)) {\n        var child = Children.only(children);\n        return cloneElement(child, {\n            className: cn(cellClassName, child.props.className),\n        });\n    }\n    return (React.createElement(\"div\", __assign({}, props, { ref: ref, className: cellClassName }), children));\n});\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        GridListCell.propTypes = {\n            clone: PropTypes.bool,\n            square: PropTypes.bool,\n            className: PropTypes.string,\n            children: PropTypes.node,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=GridListCell.js.map"]},"metadata":{},"sourceType":"module"}