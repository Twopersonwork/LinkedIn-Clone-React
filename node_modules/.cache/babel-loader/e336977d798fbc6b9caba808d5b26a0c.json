{"ast":null,"code":"import React, { useCallback, useState } from \"react\";\nimport { useResizeObserver } from \"./useResizeObserver\";\n/**\n * The resize observer is used to track the size changes for a single element in\n * a page. This is a bit different than a normal `ResizeListener` since it does\n * not rely on entire page size changes.\n *\n * @deprecated 2.3.0 You should really use the `useResizeObserver` hook instead\n * since it offers a lot more flexibility and functionality than this component.\n */\n\nexport function ResizeObserver(_a) {\n  var _b = _a.disableHeight,\n      disableHeight = _b === void 0 ? false : _b,\n      _c = _a.disableWidth,\n      disableWidth = _c === void 0 ? false : _c,\n      className = _a.className,\n      _d = _a.component,\n      Component = _d === void 0 ? \"span\" : _d,\n      target = _a.target,\n      onResize = _a.onResize;\n\n  var _e = useState(null),\n      element = _e[0],\n      setElement = _e[1];\n\n  useResizeObserver({\n    disableHeight: disableHeight,\n    disableWidth: disableWidth,\n    target: target || element,\n    onResize: onResize\n  });\n  var ref = useCallback(function (instance) {\n    if (!instance) {\n      setElement(null);\n      return;\n    }\n\n    setElement(instance.parentElement);\n  }, []);\n\n  if (target === null || target) {\n    return null;\n  }\n\n  return React.createElement(Component, {\n    className: className,\n    \"aria-hidden\": \"true\",\n    ref: ref\n  });\n}\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    ResizeObserver.propTypes = {\n      disableHeight: PropTypes.bool,\n      disableWidth: PropTypes.bool,\n      className: PropTypes.string,\n      component: PropTypes.oneOfType([// workaround for Typescript since PropTypes.string throws WeakValidationMap error\n      // but this component only supports string components\n      PropTypes.string]),\n      target: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object])\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../../src/sizing/ResizeObserver.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,IAA2C,WAA3C,EAAwD,QAAxD,QAAwE,OAAxE;AAEA,SAAiC,iBAAjC,QAA0D,qBAA1D;AAoDA;;;;;;;AAOG;;AACH,OAAM,SAAU,cAAV,CAAyB,EAAzB,EAOgB;MANpB,EAAA,GAAA,EAAA,CAAA,a;MAAA,aAAa,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,E;MACrB,EAAA,GAAA,EAAA,CAAA,Y;MAAA,YAAY,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,E;MACpB,SAAS,GAAA,EAAA,CAAA,S;MACT,EAAA,GAAA,EAAA,CAAA,S;MAAW,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,MAAH,GAAS,E;MAC7B,MAAM,GAAA,EAAA,CAAA,M;MACN,QAAQ,GAAA,EAAA,CAAA,Q;;AAEF,MAAA,EAAA,GAAwB,QAAQ,CAAqB,IAArB,CAAhC;AAAA,MAAC,OAAO,GAAA,EAAA,CAAA,CAAA,CAAR;AAAA,MAAU,UAAU,GAAA,EAAA,CAAA,CAAA,CAApB;;AACN,EAAA,iBAAiB,CAAC;AAChB,IAAA,aAAa,EAAA,aADG;AAEhB,IAAA,YAAY,EAAA,YAFI;AAGhB,IAAA,MAAM,EAAE,MAAM,IAAI,OAHF;AAIhB,IAAA,QAAQ,EAAA;AAJQ,GAAD,CAAjB;AAMA,MAAM,GAAG,GAAG,WAAW,CAAC,UAAC,QAAD,EAA6B;AACnD,QAAI,CAAC,QAAL,EAAe;AACb,MAAA,UAAU,CAAC,IAAD,CAAV;AACA;AACD;;AAED,IAAA,UAAU,CAAC,QAAQ,CAAC,aAAV,CAAV;AACD,GAPsB,EAOpB,EAPoB,CAAvB;;AASA,MAAI,MAAM,KAAK,IAAX,IAAmB,MAAvB,EAA+B;AAC7B,WAAO,IAAP;AACD;;AAED,SAAO,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AAAC,IAAA,SAAS,EAAE,SAAZ;AAAqB,mBAAc,MAAnC;AAA0C,IAAA,GAAG,EAAE;AAA/C,GAAV,CAAP;AACD;AAED;;AACA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,cAAc,CAAC,SAAf,GAA2B;AACzB,MAAA,aAAa,EAAE,SAAS,CAAC,IADA;AAEzB,MAAA,YAAY,EAAE,SAAS,CAAC,IAFC;AAGzB,MAAA,SAAS,EAAE,SAAS,CAAC,MAHI;AAIzB,MAAA,SAAS,EAAE,SAAS,CAAC,SAAV,CAAoB,CAC7B;AACA;AACA,MAAA,SAAS,CAAC,MAHmB,CAApB,CAJc;AASzB,MAAA,MAAM,EAAE,SAAS,CAAC,SAAV,CAAoB,CAC1B,SAAS,CAAC,MADgB,EAE1B,SAAS,CAAC,IAFgB,EAG1B,SAAS,CAAC,MAHgB,CAApB;AATiB,KAA3B;AAeD,GAlBD,CAkBE,OAAO,CAAP,EAAU,CAAE;AACf","sourceRoot":"","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { useResizeObserver } from \"./useResizeObserver\";\n/**\n * The resize observer is used to track the size changes for a single element in\n * a page. This is a bit different than a normal `ResizeListener` since it does\n * not rely on entire page size changes.\n *\n * @deprecated 2.3.0 You should really use the `useResizeObserver` hook instead\n * since it offers a lot more flexibility and functionality than this component.\n */\nexport function ResizeObserver(_a) {\n    var _b = _a.disableHeight, disableHeight = _b === void 0 ? false : _b, _c = _a.disableWidth, disableWidth = _c === void 0 ? false : _c, className = _a.className, _d = _a.component, Component = _d === void 0 ? \"span\" : _d, target = _a.target, onResize = _a.onResize;\n    var _e = useState(null), element = _e[0], setElement = _e[1];\n    useResizeObserver({\n        disableHeight: disableHeight,\n        disableWidth: disableWidth,\n        target: target || element,\n        onResize: onResize,\n    });\n    var ref = useCallback(function (instance) {\n        if (!instance) {\n            setElement(null);\n            return;\n        }\n        setElement(instance.parentElement);\n    }, []);\n    if (target === null || target) {\n        return null;\n    }\n    return React.createElement(Component, { className: className, \"aria-hidden\": \"true\", ref: ref });\n}\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        ResizeObserver.propTypes = {\n            disableHeight: PropTypes.bool,\n            disableWidth: PropTypes.bool,\n            className: PropTypes.string,\n            component: PropTypes.oneOfType([\n                // workaround for Typescript since PropTypes.string throws WeakValidationMap error\n                // but this component only supports string components\n                PropTypes.string,\n            ]),\n            target: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.func,\n                PropTypes.object,\n            ]),\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=ResizeObserver.js.map"]},"metadata":{},"sourceType":"module"}