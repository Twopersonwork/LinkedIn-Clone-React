{"ast":null,"code":"import { useEffect, useRef } from \"react\";\n/**\n * This hook allows you to provide anything that should be \"cached\" and puts it\n * into a ref that'll be updated each render. This is pretty overkill for most\n * places, but it's really nice when you want to create event handlers that\n * shouldn't update if the developer used arrow functions to define callbacks.\n * (A great example is for ref callbacks that *shouldn't* be triggered each\n * render. But that might just be a programming error instead).\n *\n * @param cacheable - The cacheable thing that gets updated after each render.\n * @returns a mutable ref object containing the current cache.\n */\n\nexport function useRefCache(cacheable) {\n  var ref = useRef(cacheable);\n  useEffect(function () {\n    ref.current = cacheable;\n  });\n  return ref;\n}","map":{"version":3,"sources":["../src/useRefCache.ts"],"names":[],"mappings":"AAAA,SAA2B,SAA3B,EAAsC,MAAtC,QAAoD,OAApD;AAEA;;;;;;;;;;AAUG;;AACH,OAAM,SAAU,WAAV,CAAyB,SAAzB,EAAqC;AACzC,MAAM,GAAG,GAAG,MAAM,CAAC,SAAD,CAAlB;AACA,EAAA,SAAS,CAAC,YAAA;AACR,IAAA,GAAG,CAAC,OAAJ,GAAc,SAAd;AACD,GAFQ,CAAT;AAIA,SAAO,GAAP;AACD","sourceRoot":"","sourcesContent":["import { useEffect, useRef } from \"react\";\n/**\n * This hook allows you to provide anything that should be \"cached\" and puts it\n * into a ref that'll be updated each render. This is pretty overkill for most\n * places, but it's really nice when you want to create event handlers that\n * shouldn't update if the developer used arrow functions to define callbacks.\n * (A great example is for ref callbacks that *shouldn't* be triggered each\n * render. But that might just be a programming error instead).\n *\n * @param cacheable - The cacheable thing that gets updated after each render.\n * @returns a mutable ref object containing the current cache.\n */\nexport function useRefCache(cacheable) {\n    var ref = useRef(cacheable);\n    useEffect(function () {\n        ref.current = cacheable;\n    });\n    return ref;\n}\n//# sourceMappingURL=useRefCache.js.map"]},"metadata":{},"sourceType":"module"}