{"ast":null,"code":"var _jsxFileName = \"/home/malav/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Network/UserCards.js\";\nimport React, { Component } from \"react\";\nimport { Avatar, Button } from \"@material-ui/core\";\nimport { withCookies } from \"react-cookie\";\nimport \"./UserCards.css\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport { MdDone } from \"react-icons/md\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  button: {\n    textTransform: \"none\",\n    margin: \"20px\"\n  }\n});\n\nexport class UserCards extends Component {\n  constructor(props) {\n    super(props);\n\n    this.removeImage = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.submitFollow = () => {\n      fetch(`${process.env.REACT_APP_API_URL}/uapi/follow/${this.props.user.id}/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n        }\n      }).then(resp => resp.json()).then(resp => {\n        // console.log(resp);\n        this.setState({\n          pending: true\n        });\n      }).catch(error => console.log(error));\n      fetch(`${process.env.REACT_APP_API_URL}/uapi/waitFollow/${this.props.user.id}/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n        }\n      }).then(resp => resp.json()).then(resp => console.log(resp)).catch(error => console.log(error));\n    };\n\n    this.state = {\n      pending: false,\n      show: true\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n\n    if (this.state.show) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"breakpoint\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            padding: \"5px\",\n            border: \"white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list__top\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: this.props.user.cover_pic,\n              alt: \"background\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AiFillCloseCircle, {\n              className: \"over__image\",\n              onClick: this.removeImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n              style: {\n                width: \"80px\",\n                height: \"80px\"\n              },\n              src: this.props.user.profile_pic,\n              alt: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: \"user_profile\",\n                state: this.props.user.id\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: \"bold\",\n                  color: \"black\",\n                  fontSize: \"18px\"\n                },\n                children: this.props.user.username.length <= 10 ? this.props.user.username : this.props.user.username.slice(0, 10) + \"..\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), this.state.pending ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.submitFollow,\n              className: classes.button,\n              style: pending_button,\n              children: [/*#__PURE__*/_jsxDEV(MdDone, {\n                style: {\n                  fontSize: \"20px\",\n                  marginRight: \"2px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), \" \", \"Pending\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.submitFollow,\n              className: classes.button,\n              style: connect_button,\n              children: \"Connect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n    } else {\n      return null;\n    }\n  }\n\n}\nconst connect_button = {\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  fontSize: \"12px\",\n  display: \"flex\",\n  background: \"white\",\n  color: \"#0c66c2\",\n  border: \"solid 1px #0c66c2\",\n  maxWidth: \"100%\",\n  cursor: \"pointer\"\n};\nconst pending_button = {\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  fontSize: \"12px\",\n  display: \"flex\",\n  background: \"white\",\n  color: \"gray\",\n  border: \"solid 1px gray\",\n  maxWidth: \"100%\",\n  cursor: \"pointer\"\n};\nexport default withStyles(styles, {\n  withTheme: true\n})(withCookies(UserCards));","map":{"version":3,"sources":["/home/malav/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Network/UserCards.js"],"names":["React","Component","Avatar","Button","withCookies","Link","Card","AiFillCloseCircle","MdDone","withStyles","styles","theme","button","textTransform","margin","UserCards","constructor","props","removeImage","setState","show","submitFollow","fetch","process","env","REACT_APP_API_URL","user","id","method","headers","Authorization","cookies","get","token","then","resp","json","pending","catch","error","console","log","state","render","classes","padding","border","cover_pic","width","height","profile_pic","pathname","fontWeight","color","fontSize","username","length","slice","pending_button","marginRight","connect_button","borderRadius","display","background","maxWidth","cursor","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Avatar, Button } from \"@material-ui/core\";\nimport { withCookies } from \"react-cookie\";\nimport \"./UserCards.css\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport { MdDone } from \"react-icons/md\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = (theme) => ({\n  button: {\n    textTransform: \"none\",\n    margin: \"20px\",\n  },\n});\n\nexport class UserCards extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pending: false,\n      show: true,\n    };\n  }\n\n  removeImage = () => {\n    this.setState({ show: false });\n  };\n\n  submitFollow = () => {\n    fetch(\n      `${process.env.REACT_APP_API_URL}/uapi/follow/${this.props.user.id}/`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n        },\n      }\n    )\n      .then((resp) => resp.json())\n      .then((resp) => {\n        // console.log(resp);\n        this.setState({ pending: true });\n      })\n      .catch((error) => console.log(error));\n\n    fetch(\n      `${process.env.REACT_APP_API_URL}/uapi/waitFollow/${this.props.user.id}/`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n        },\n      }\n    )\n      .then((resp) => resp.json())\n      .then((resp) => console.log(resp))\n      .catch((error) => console.log(error));\n  };\n\n  render() {\n    const { classes } = this.props;\n    if (this.state.show) {\n      return (\n        <div className=\"breakpoint\">\n          <Card style={{ padding: \"5px\", border: \"white\" }}>\n            <div className=\"list__top\">\n              <img src={this.props.user.cover_pic} alt=\"background\" />\n              <AiFillCloseCircle\n                className=\"over__image\"\n                onClick={this.removeImage}\n              />\n              {/* <Icon  /> */}\n\n              <Avatar\n                style={{ width: \"80px\", height: \"80px\" }}\n                src={this.props.user.profile_pic}\n                alt=\"Profile\"\n              />\n\n              <Link\n                to={{ pathname: \"user_profile\", state: this.props.user.id }}\n              >\n                <span\n                  style={{\n                    fontWeight: \"bold\",\n                    color: \"black\",\n                    fontSize: \"18px\",\n                  }}\n                >\n                  {this.props.user.username.length <= 10\n                    ? this.props.user.username\n                    : this.props.user.username.slice(0, 10) + \"..\"}\n                </span>\n              </Link>\n\n              {this.state.pending ? (\n                <Button\n                  onClick={this.submitFollow}\n                  className={classes.button}\n                  style={pending_button}\n                >\n                  <MdDone style={{ fontSize: \"20px\", marginRight: \"2px\" }} />{\" \"}\n                  Pending\n                </Button>\n              ) : (\n                <Button\n                  onClick={this.submitFollow}\n                  className={classes.button}\n                  style={connect_button}\n                >\n                  Connect\n                </Button>\n              )}\n            </div>\n          </Card>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nconst connect_button = {\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  fontSize: \"12px\",\n  display: \"flex\",\n  background: \"white\",\n  color: \"#0c66c2\",\n  border: \"solid 1px #0c66c2\",\n  maxWidth: \"100%\",\n  cursor: \"pointer\",\n};\nconst pending_button = {\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  fontSize: \"12px\",\n  display: \"flex\",\n  background: \"white\",\n  color: \"gray\",\n  border: \"solid 1px gray\",\n  maxWidth: \"100%\",\n  cursor: \"pointer\",\n};\n\nexport default withStyles(styles, { withTheme: true })(withCookies(UserCards));\n"]},"metadata":{},"sourceType":"module"}