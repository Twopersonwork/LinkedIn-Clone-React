{"ast":null,"code":"/**\n * A simple util that will ensure that a number is within the optional min and\n * max values.\n *\n * @param value - The number to ensure that is within the range\n * @param min - The optional min value\n * @param max - The optional max value\n * @returns the updated value\n * @remarks \\@since 2.5.0\n */\nexport function withinRange(value, min, max) {\n  var nextValue = value;\n\n  if (typeof min === \"number\") {\n    nextValue = Math.max(min, nextValue);\n  }\n\n  if (typeof max === \"number\") {\n    nextValue = Math.min(max, nextValue);\n  }\n\n  return nextValue;\n}","map":{"version":3,"sources":["../src/withinRange.ts"],"names":[],"mappings":"AAAA;;;;;;;;;AASG;AACH,OAAM,SAAU,WAAV,CACJ,KADI,EAEJ,GAFI,EAGJ,GAHI,EAGmB;AAEvB,MAAI,SAAS,GAAG,KAAhB;;AACA,MAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAC3B,IAAA,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,SAAd,CAAZ;AACD;;AAED,MAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAC3B,IAAA,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,SAAd,CAAZ;AACD;;AAED,SAAO,SAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * A simple util that will ensure that a number is within the optional min and\n * max values.\n *\n * @param value - The number to ensure that is within the range\n * @param min - The optional min value\n * @param max - The optional max value\n * @returns the updated value\n * @remarks \\@since 2.5.0\n */\nexport function withinRange(value, min, max) {\n    var nextValue = value;\n    if (typeof min === \"number\") {\n        nextValue = Math.max(min, nextValue);\n    }\n    if (typeof max === \"number\") {\n        nextValue = Math.min(max, nextValue);\n    }\n    return nextValue;\n}\n//# sourceMappingURL=withinRange.js.map"]},"metadata":{},"sourceType":"module"}