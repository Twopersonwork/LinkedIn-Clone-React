{"ast":null,"code":"import getUserLocale from 'get-user-locale';\n\nfunction getFormatter(options) {\n  return function (locale, date) {\n    return date.toLocaleString(locale || getUserLocale(), options);\n  };\n}\n/**\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\n * Workaround for bug in WebKit and Firefox with historical dates.\n * For more details, see:\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\n *\n * @param {Date} date Date.\n */\n\n\nfunction toSafeHour(date) {\n  var safeDate = new Date(date);\n  return new Date(safeDate.setHours(12));\n}\n\nfunction getSafeFormatter(options) {\n  return function (locale, date) {\n    return getFormatter(options)(locale, toSafeHour(date));\n  };\n}\n\nvar formatDateOptions = {\n  day: 'numeric',\n  month: 'numeric',\n  year: 'numeric'\n};\nvar formatDayOptions = {\n  day: 'numeric'\n};\nvar formatLongDateOptions = {\n  day: 'numeric',\n  month: 'long',\n  year: 'numeric'\n};\nvar formatMonthOptions = {\n  month: 'long'\n};\nvar formatMonthYearOptions = {\n  month: 'long',\n  year: 'numeric'\n};\nvar formatShortWeekdayOptions = {\n  weekday: 'short'\n};\nvar formatWeekdayOptions = {\n  weekday: 'long'\n};\nvar formatYearOptions = {\n  year: 'numeric'\n};\nexport var formatDate = getSafeFormatter(formatDateOptions);\nexport var formatDay = getSafeFormatter(formatDayOptions);\nexport var formatLongDate = getSafeFormatter(formatLongDateOptions);\nexport var formatMonth = getSafeFormatter(formatMonthOptions);\nexport var formatMonthYear = getSafeFormatter(formatMonthYearOptions);\nexport var formatShortWeekday = getSafeFormatter(formatShortWeekdayOptions);\nexport var formatWeekday = getSafeFormatter(formatWeekdayOptions);\nexport var formatYear = getSafeFormatter(formatYearOptions);","map":{"version":3,"sources":["/home/malav/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/node_modules/react-calendar/dist/esm/shared/dateFormatter.js"],"names":["getUserLocale","getFormatter","options","locale","date","toLocaleString","toSafeHour","safeDate","Date","setHours","getSafeFormatter","formatDateOptions","day","month","year","formatDayOptions","formatLongDateOptions","formatMonthOptions","formatMonthYearOptions","formatShortWeekdayOptions","weekday","formatWeekdayOptions","formatYearOptions","formatDate","formatDay","formatLongDate","formatMonth","formatMonthYear","formatShortWeekday","formatWeekday","formatYear"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAO,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAC7B,WAAOA,IAAI,CAACC,cAAL,CAAoBF,MAAM,IAAIH,aAAa,EAA3C,EAA+CE,OAA/C,CAAP;AACD,GAFD;AAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASI,UAAT,CAAoBF,IAApB,EAA0B;AACxB,MAAIG,QAAQ,GAAG,IAAIC,IAAJ,CAASJ,IAAT,CAAf;AACA,SAAO,IAAII,IAAJ,CAASD,QAAQ,CAACE,QAAT,CAAkB,EAAlB,CAAT,CAAP;AACD;;AAED,SAASC,gBAAT,CAA0BR,OAA1B,EAAmC;AACjC,SAAO,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAC7B,WAAOH,YAAY,CAACC,OAAD,CAAZ,CAAsBC,MAAtB,EAA8BG,UAAU,CAACF,IAAD,CAAxC,CAAP;AACD,GAFD;AAGD;;AAED,IAAIO,iBAAiB,GAAG;AACtBC,EAAAA,GAAG,EAAE,SADiB;AAEtBC,EAAAA,KAAK,EAAE,SAFe;AAGtBC,EAAAA,IAAI,EAAE;AAHgB,CAAxB;AAKA,IAAIC,gBAAgB,GAAG;AACrBH,EAAAA,GAAG,EAAE;AADgB,CAAvB;AAGA,IAAII,qBAAqB,GAAG;AAC1BJ,EAAAA,GAAG,EAAE,SADqB;AAE1BC,EAAAA,KAAK,EAAE,MAFmB;AAG1BC,EAAAA,IAAI,EAAE;AAHoB,CAA5B;AAKA,IAAIG,kBAAkB,GAAG;AACvBJ,EAAAA,KAAK,EAAE;AADgB,CAAzB;AAGA,IAAIK,sBAAsB,GAAG;AAC3BL,EAAAA,KAAK,EAAE,MADoB;AAE3BC,EAAAA,IAAI,EAAE;AAFqB,CAA7B;AAIA,IAAIK,yBAAyB,GAAG;AAC9BC,EAAAA,OAAO,EAAE;AADqB,CAAhC;AAGA,IAAIC,oBAAoB,GAAG;AACzBD,EAAAA,OAAO,EAAE;AADgB,CAA3B;AAGA,IAAIE,iBAAiB,GAAG;AACtBR,EAAAA,IAAI,EAAE;AADgB,CAAxB;AAGA,OAAO,IAAIS,UAAU,GAAGb,gBAAgB,CAACC,iBAAD,CAAjC;AACP,OAAO,IAAIa,SAAS,GAAGd,gBAAgB,CAACK,gBAAD,CAAhC;AACP,OAAO,IAAIU,cAAc,GAAGf,gBAAgB,CAACM,qBAAD,CAArC;AACP,OAAO,IAAIU,WAAW,GAAGhB,gBAAgB,CAACO,kBAAD,CAAlC;AACP,OAAO,IAAIU,eAAe,GAAGjB,gBAAgB,CAACQ,sBAAD,CAAtC;AACP,OAAO,IAAIU,kBAAkB,GAAGlB,gBAAgB,CAACS,yBAAD,CAAzC;AACP,OAAO,IAAIU,aAAa,GAAGnB,gBAAgB,CAACW,oBAAD,CAApC;AACP,OAAO,IAAIS,UAAU,GAAGpB,gBAAgB,CAACY,iBAAD,CAAjC","sourcesContent":["import getUserLocale from 'get-user-locale';\n\nfunction getFormatter(options) {\n  return function (locale, date) {\n    return date.toLocaleString(locale || getUserLocale(), options);\n  };\n}\n/**\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\n * Workaround for bug in WebKit and Firefox with historical dates.\n * For more details, see:\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\n *\n * @param {Date} date Date.\n */\n\n\nfunction toSafeHour(date) {\n  var safeDate = new Date(date);\n  return new Date(safeDate.setHours(12));\n}\n\nfunction getSafeFormatter(options) {\n  return function (locale, date) {\n    return getFormatter(options)(locale, toSafeHour(date));\n  };\n}\n\nvar formatDateOptions = {\n  day: 'numeric',\n  month: 'numeric',\n  year: 'numeric'\n};\nvar formatDayOptions = {\n  day: 'numeric'\n};\nvar formatLongDateOptions = {\n  day: 'numeric',\n  month: 'long',\n  year: 'numeric'\n};\nvar formatMonthOptions = {\n  month: 'long'\n};\nvar formatMonthYearOptions = {\n  month: 'long',\n  year: 'numeric'\n};\nvar formatShortWeekdayOptions = {\n  weekday: 'short'\n};\nvar formatWeekdayOptions = {\n  weekday: 'long'\n};\nvar formatYearOptions = {\n  year: 'numeric'\n};\nexport var formatDate = getSafeFormatter(formatDateOptions);\nexport var formatDay = getSafeFormatter(formatDayOptions);\nexport var formatLongDate = getSafeFormatter(formatLongDateOptions);\nexport var formatMonth = getSafeFormatter(formatMonthOptions);\nexport var formatMonthYear = getSafeFormatter(formatMonthYearOptions);\nexport var formatShortWeekday = getSafeFormatter(formatShortWeekdayOptions);\nexport var formatWeekday = getSafeFormatter(formatWeekdayOptions);\nexport var formatYear = getSafeFormatter(formatYearOptions);"]},"metadata":{},"sourceType":"module"}