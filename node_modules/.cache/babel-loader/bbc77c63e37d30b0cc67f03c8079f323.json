{"ast":null,"code":"import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = /msie|trident/i.test(global.navigator && global.navigator.userAgent);\n\nvar parseDimension = function (pixel) {\n  return parseFloat(pixel || '0');\n};\n\nvar size = function (inlineSize, blockSize, switchSizes) {\n  if (inlineSize === void 0) {\n    inlineSize = 0;\n  }\n\n  if (blockSize === void 0) {\n    blockSize = 0;\n  }\n\n  if (switchSizes === void 0) {\n    switchSizes = false;\n  }\n\n  return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\n\nvar zeroBoxes = freeze({\n  devicePixelContentBoxSize: size(),\n  borderBoxSize: size(),\n  contentBoxSize: size(),\n  contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\n\nvar calculateBoxSizes = function (target, forceRecalculation) {\n  if (forceRecalculation === void 0) {\n    forceRecalculation = false;\n  }\n\n  if (cache.has(target) && !forceRecalculation) {\n    return cache.get(target);\n  }\n\n  if (isHidden(target)) {\n    cache.set(target, zeroBoxes);\n    return zeroBoxes;\n  }\n\n  var cs = getComputedStyle(target);\n  var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n  var removePadding = !IE && cs.boxSizing === 'border-box';\n  var switchSizes = verticalRegexp.test(cs.writingMode || '');\n  var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n  var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n  var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n  var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n  var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n  var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n  var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n  var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n  var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n  var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n  var horizontalPadding = paddingLeft + paddingRight;\n  var verticalPadding = paddingTop + paddingBottom;\n  var horizontalBorderArea = borderLeft + borderRight;\n  var verticalBorderArea = borderTop + borderBottom;\n  var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n  var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n  var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n  var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n  var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n  var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n  var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n  var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n  var boxes = freeze({\n    devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n    borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n    contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n    contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n  });\n  cache.set(target, boxes);\n  return boxes;\n};\n\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n  var _a = calculateBoxSizes(target, forceRecalculation),\n      borderBoxSize = _a.borderBoxSize,\n      contentBoxSize = _a.contentBoxSize,\n      devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n\n  switch (observedBox) {\n    case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n      return devicePixelContentBoxSize;\n\n    case ResizeObserverBoxOptions.BORDER_BOX:\n      return borderBoxSize;\n\n    default:\n      return contentBoxSize;\n  }\n};\n\nexport { calculateBoxSize, calculateBoxSizes };","map":{"version":3,"sources":["/home/malav/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js"],"names":["ResizeObserverBoxOptions","ResizeObserverSize","DOMRectReadOnly","isSVG","isHidden","freeze","global","cache","WeakMap","scrollRegexp","verticalRegexp","IE","test","navigator","userAgent","parseDimension","pixel","parseFloat","size","inlineSize","blockSize","switchSizes","zeroBoxes","devicePixelContentBoxSize","borderBoxSize","contentBoxSize","contentRect","calculateBoxSizes","target","forceRecalculation","has","get","set","cs","getComputedStyle","svg","ownerSVGElement","getBBox","removePadding","boxSizing","writingMode","canScrollVertically","overflowY","canScrollHorizontally","overflowX","paddingTop","paddingRight","paddingBottom","paddingLeft","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","borderLeft","borderLeftWidth","horizontalPadding","verticalPadding","horizontalBorderArea","verticalBorderArea","horizontalScrollbarThickness","offsetHeight","clientHeight","verticalScrollbarThickness","offsetWidth","clientWidth","widthReduction","heightReduction","contentWidth","width","contentHeight","height","borderBoxWidth","borderBoxHeight","boxes","Math","round","devicePixelRatio","calculateBoxSize","observedBox","_a","DEVICE_PIXEL_CONTENT_BOX","BORDER_BOX"],"mappings":"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","sourcesContent":["import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n"]},"metadata":{},"sourceType":"module"}