{"ast":null,"code":"var _jsxFileName = \"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Comments.js\";\nimport React, { Component } from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"./Comments.css\";\nimport { Button } from \"bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleComment = e => {\n      this.setState({\n        comment: e.target.value\n      });\n    };\n\n    this.submitComment = () => {\n      fetch(`http://127.0.0.1:8000/papi/posts/${this.props.post.id}/comment/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n        },\n        body: JSON.stringify({\n          comment: this.state.comment\n        })\n      }).then(resp => resp.json()).then(res => this.setState({\n        user: res\n      })).catch(error => console.log(error));\n    };\n\n    this.fetchUser = id => {\n      fetch(`http://127.0.0.1:8000/uapi/users/${id}/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(resp => resp.json()).then(res => this.setState({\n        user: res\n      })).catch(error => console.log(error));\n    };\n\n    this.state = {\n      user: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchUser(this.props.comment.user);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__header\",\n        children: [this.state.user.profile_pic ? /*#__PURE__*/_jsxDEV(Avatar, {\n          src: this.state.user.profile_pic,\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n          src: \"/images/user.svg\",\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: this.state.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted\",\n            style: {\n              fontSize: \"17px\"\n            },\n            children: this.props.comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => this.handleComment,\n          style: {\n            width: \"100%\"\n          },\n          className: \"feed__input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Comments.js"],"names":["React","Component","Avatar","Button","Comments","constructor","props","handleComment","e","setState","comment","target","value","submitComment","fetch","post","id","method","headers","Authorization","cookies","get","token","body","JSON","stringify","state","then","resp","json","res","user","catch","error","console","log","fetchUser","componentDidMount","render","profile_pic","fontWeight","username","fontSize","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,gBAAP;AACA,SAASC,MAAT,QAAuB,WAAvB;;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC/BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,aAPmB,GAOFC,CAAD,IAAO;AACrB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEF,CAAC,CAACG,MAAF,CAASC;AAApB,OAAd;AACD,KATkB;;AAAA,SAUnBC,aAVmB,GAUH,MAAM;AACpBC,MAAAA,KAAK,CAAE,oCAAmC,KAAKR,KAAL,CAAWS,IAAX,CAAgBC,EAAG,WAAxD,EAAoE;AACvEC,QAAAA,MAAM,EAAE,KAD+D;AAEvEC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAG,SAAQ,KAAKb,KAAL,CAAWc,OAAX,CAAmBC,GAAnB,CAAuB,YAAvB,EAAqCC,KAAM;AAF5D,SAF8D;AAMvEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBf,UAAAA,OAAO,EAAE,KAAKgB,KAAL,CAAWhB;AADD,SAAf;AANiE,OAApE,CAAL,CAUGiB,IAVH,CAUSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAVlB,EAWGF,IAXH,CAWSG,GAAD,IACJ,KAAKrB,QAAL,CAAc;AACZsB,QAAAA,IAAI,EAAED;AADM,OAAd,CAZJ,EAgBGE,KAhBH,CAgBUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAhBpB;AAiBD,KA5BkB;;AAAA,SAkCnBG,SAlCmB,GAkCNpB,EAAD,IAAQ;AAClBF,MAAAA,KAAK,CAAE,oCAAmCE,EAAG,GAAxC,EAA4C;AAC/CC,QAAAA,MAAM,EAAE,KADuC;AAE/CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAFsC,OAA5C,CAAL,CAMGS,IANH,CAMSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EANlB,EAOGF,IAPH,CAOSG,GAAD,IACJ,KAAKrB,QAAL,CAAc;AACZsB,QAAAA,IAAI,EAAED;AADM,OAAd,CARJ,EAYGE,KAZH,CAYUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAZpB;AAaD,KAhDkB;;AAGjB,SAAKP,KAAL,GAAa;AACXK,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAwBDM,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,SAAL,CAAe,KAAK9B,KAAL,CAAWI,OAAX,CAAmBqB,IAAlC;AACD;;AAkBDO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,mBAEG,KAAKZ,KAAL,CAAWK,IAAX,CAAgBQ,WAAhB,gBACC,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAE,KAAKb,KAAL,CAAWK,IAAX,CAAgBQ,WAA7B;AAA0C,UAAA,GAAG,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAC,kBAAZ;AAA+B,UAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBALJ,eAQE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAM,YAAA,KAAK,EAAE;AAAEC,cAAAA,UAAU,EAAE;AAAd,aAAb;AAAA,sBACG,KAAKd,KAAL,CAAWK,IAAX,CAAgBU;AADnB;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAA6B,YAAA,KAAK,EAAE;AAAEC,cAAAA,QAAQ,EAAE;AAAZ,aAApC;AAAA,sBACG,KAAKpC,KAAL,CAAWI,OAAX,CAAmBA;AADtB;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAmBE;AAAA;AAAA;AAAA;AAAA,cAnBF,eAoBE;AAAA,gCACE;AACE,UAAA,QAAQ,EAAGF,CAAD,IAAO,KAAKD,aADxB;AAEE,UAAA,KAAK,EAAE;AAAEoC,YAAAA,KAAK,EAAE;AAAT,WAFT;AAGE,UAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AAnF8B;;AAsFjC,eAAevC,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"./Comments.css\";\nimport { Button } from \"bootstrap\";\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: \"\",\n    };\n  }\n  handleComment = (e) => {\n    this.setState({ comment: e.target.value });\n  };\n  submitComment = () => {\n    fetch(`http://127.0.0.1:8000/papi/posts/${this.props.post.id}/comment/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n      },\n      body: JSON.stringify({\n        comment: this.state.comment,\n      }),\n    })\n      .then((resp) => resp.json())\n      .then((res) =>\n        this.setState({\n          user: res,\n        })\n      )\n      .catch((error) => console.log(error));\n  };\n\n  componentDidMount() {\n    this.fetchUser(this.props.comment.user);\n  }\n\n  fetchUser = (id) => {\n    fetch(`http://127.0.0.1:8000/uapi/users/${id}/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then((res) =>\n        this.setState({\n          user: res,\n        })\n      )\n      .catch((error) => console.log(error));\n  };\n\n  render() {\n    return (\n      <div className=\"user\">\n        <div className=\"user__header\">\n          {/* <h4>{this.fetchUser(this.props.comment.user)}</h4> */}\n          {this.state.user.profile_pic ? (\n            <Avatar src={this.state.user.profile_pic} alt=\"Profile\" />\n          ) : (\n            <Avatar src=\"/images/user.svg\" alt=\"Profile\" />\n          )}\n\n          <div className=\"post__info\">\n            <span style={{ fontWeight: \"bold\" }}>\n              {this.state.user.username}\n            </span>\n            <br />\n            <span className=\"text-muted\" style={{ fontSize: \"17px\" }}>\n              {this.props.comment.comment}\n            </span>\n          </div>\n        </div>\n        <hr />\n        <div>\n          <input\n            onChange={(e) => this.handleComment}\n            style={{ width: \"100%\" }}\n            className=\"feed__input\"\n          />\n          <Button>Comment</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}