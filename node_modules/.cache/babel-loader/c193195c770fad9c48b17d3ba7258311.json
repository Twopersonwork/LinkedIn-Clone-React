{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { IncrementMovementKey, JumpMovementKey } from \"./types\";\n/**\n * A keyboard movement configuration preset for handling vertical menu\n * movements.\n */\n\nexport var VERTICAL_MENU = {\n  loopable: true,\n  searchable: true,\n  incrementKeys: [IncrementMovementKey.ArrowDown],\n  decrementKeys: [IncrementMovementKey.ArrowUp],\n  jumpToFirstKeys: [JumpMovementKey.Home],\n  jumpToLastKeys: [JumpMovementKey.End]\n};\n/**\n * A keyboard movement configuration preset for handling horizontal menu\n * movements.\n */\n\nexport var HORIZONTAL_MENU = __assign(__assign({}, VERTICAL_MENU), {\n  incrementKeys: [IncrementMovementKey.ArrowRight],\n  decrementKeys: [IncrementMovementKey.ArrowLeft]\n});\n/**\n * A keyboard movement configuration preset for handling vertical listbox\n * movements.\n */\n\nexport var VERTICAL_LISTBOX = __assign(__assign({}, VERTICAL_MENU), {\n  loopable: false\n});\n/**\n * A keyboard movement configuration preset for handling horizontal listbox\n * movements.\n */\n\nexport var HORIZONTAL_LISTBOX = __assign(__assign({}, HORIZONTAL_MENU), {\n  loopable: false\n});\n/**\n * A keyboard movement configuration preset for handling vertical combobox\n * movements.\n */\n\nexport var VERTICAL_COMBOBOX = {\n  incrementKeys: [IncrementMovementKey.ArrowDown],\n  decrementKeys: [IncrementMovementKey.ArrowUp],\n  // don't want to be able to jump since home and end should do default behavior\n  // in text field\n  jumpToFirstKeys: [],\n  jumpToLastKeys: [],\n  searchable: false\n};\n/**\n * A keyboard movement configuration preset for handling horizontal combobox\n * movements.\n */\n\nexport var HORIZONTAL_COMBOBOX = {\n  incrementKeys: [IncrementMovementKey.ArrowRight],\n  decrementKeys: [IncrementMovementKey.ArrowLeft],\n  // don't want to be able to jump since home and end should do default behavior\n  // in text field\n  jumpToFirstKeys: [],\n  jumpToLastKeys: [],\n  searchable: false\n};\nexport var VERTICAL_TREE = {\n  incrementKeys: [IncrementMovementKey.ArrowDown],\n  decrementKeys: [IncrementMovementKey.ArrowUp],\n  jumpToFirstKeys: [JumpMovementKey.Home, JumpMovementKey.ControlShiftHome],\n  jumpToLastKeys: [JumpMovementKey.End, JumpMovementKey.ControlShiftEnd],\n  loopable: true,\n  searchable: true\n};\nexport var HORIZONTAL_TREE = {\n  incrementKeys: [IncrementMovementKey.ArrowRight],\n  decrementKeys: [IncrementMovementKey.ArrowLeft],\n  jumpToFirstKeys: [JumpMovementKey.Home, JumpMovementKey.ControlShiftHome],\n  jumpToLastKeys: [JumpMovementKey.End, JumpMovementKey.ControlShiftEnd],\n  loopable: true,\n  searchable: true\n};\nexport var HORIZONTAL_TABS = {\n  incrementKeys: [IncrementMovementKey.ArrowRight],\n  decrementKeys: [IncrementMovementKey.ArrowLeft],\n  jumpToFirstKeys: [JumpMovementKey.Home],\n  jumpToLastKeys: [JumpMovementKey.End],\n  loopable: true,\n  searchable: false\n};\nexport var VERTICAL_TABS = {\n  incrementKeys: [IncrementMovementKey.ArrowDown],\n  decrementKeys: [IncrementMovementKey.ArrowUp],\n  jumpToFirstKeys: [JumpMovementKey.Home],\n  jumpToLastKeys: [JumpMovementKey.End],\n  loopable: true,\n  searchable: false\n};","map":{"version":3,"sources":["../../../src/wia-aria/movement/presets.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { IncrementMovementKey, JumpMovementKey } from \"./types\";\n/**\n * A keyboard movement configuration preset for handling vertical menu\n * movements.\n */\nexport var VERTICAL_MENU = {\n    loopable: true,\n    searchable: true,\n    incrementKeys: [IncrementMovementKey.ArrowDown],\n    decrementKeys: [IncrementMovementKey.ArrowUp],\n    jumpToFirstKeys: [JumpMovementKey.Home],\n    jumpToLastKeys: [JumpMovementKey.End],\n};\n/**\n * A keyboard movement configuration preset for handling horizontal menu\n * movements.\n */\nexport var HORIZONTAL_MENU = __assign(__assign({}, VERTICAL_MENU), { incrementKeys: [IncrementMovementKey.ArrowRight], decrementKeys: [IncrementMovementKey.ArrowLeft] });\n/**\n * A keyboard movement configuration preset for handling vertical listbox\n * movements.\n */\nexport var VERTICAL_LISTBOX = __assign(__assign({}, VERTICAL_MENU), { loopable: false });\n/**\n * A keyboard movement configuration preset for handling horizontal listbox\n * movements.\n */\nexport var HORIZONTAL_LISTBOX = __assign(__assign({}, HORIZONTAL_MENU), { loopable: false });\n/**\n * A keyboard movement configuration preset for handling vertical combobox\n * movements.\n */\nexport var VERTICAL_COMBOBOX = {\n    incrementKeys: [IncrementMovementKey.ArrowDown],\n    decrementKeys: [IncrementMovementKey.ArrowUp],\n    // don't want to be able to jump since home and end should do default behavior\n    // in text field\n    jumpToFirstKeys: [],\n    jumpToLastKeys: [],\n    searchable: false,\n};\n/**\n * A keyboard movement configuration preset for handling horizontal combobox\n * movements.\n */\nexport var HORIZONTAL_COMBOBOX = {\n    incrementKeys: [IncrementMovementKey.ArrowRight],\n    decrementKeys: [IncrementMovementKey.ArrowLeft],\n    // don't want to be able to jump since home and end should do default behavior\n    // in text field\n    jumpToFirstKeys: [],\n    jumpToLastKeys: [],\n    searchable: false,\n};\nexport var VERTICAL_TREE = {\n    incrementKeys: [IncrementMovementKey.ArrowDown],\n    decrementKeys: [IncrementMovementKey.ArrowUp],\n    jumpToFirstKeys: [JumpMovementKey.Home, JumpMovementKey.ControlShiftHome],\n    jumpToLastKeys: [JumpMovementKey.End, JumpMovementKey.ControlShiftEnd],\n    loopable: true,\n    searchable: true,\n};\nexport var HORIZONTAL_TREE = {\n    incrementKeys: [IncrementMovementKey.ArrowRight],\n    decrementKeys: [IncrementMovementKey.ArrowLeft],\n    jumpToFirstKeys: [JumpMovementKey.Home, JumpMovementKey.ControlShiftHome],\n    jumpToLastKeys: [JumpMovementKey.End, JumpMovementKey.ControlShiftEnd],\n    loopable: true,\n    searchable: true,\n};\nexport var HORIZONTAL_TABS = {\n    incrementKeys: [IncrementMovementKey.ArrowRight],\n    decrementKeys: [IncrementMovementKey.ArrowLeft],\n    jumpToFirstKeys: [JumpMovementKey.Home],\n    jumpToLastKeys: [JumpMovementKey.End],\n    loopable: true,\n    searchable: false,\n};\nexport var VERTICAL_TABS = {\n    incrementKeys: [IncrementMovementKey.ArrowDown],\n    decrementKeys: [IncrementMovementKey.ArrowUp],\n    jumpToFirstKeys: [JumpMovementKey.Home],\n    jumpToLastKeys: [JumpMovementKey.End],\n    loopable: true,\n    searchable: false,\n};\n//# sourceMappingURL=presets.js.map"]},"metadata":{},"sourceType":"module"}