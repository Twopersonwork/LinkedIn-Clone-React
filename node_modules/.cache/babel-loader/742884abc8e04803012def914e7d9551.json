{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getYear, getMonth, getDate, getDaysInMonth } from '@wojtekmaj/date-utils';\nimport WeekNumber from './WeekNumber';\nimport Flex from '../Flex';\nimport { getBeginOfWeek, getDayOfWeek, getWeekNumber } from '../shared/dates';\nimport { isCalendarType } from '../shared/propTypes';\nexport default function WeekNumbers(props) {\n  var activeStartDate = props.activeStartDate,\n      calendarType = props.calendarType,\n      onClickWeekNumber = props.onClickWeekNumber,\n      onMouseLeave = props.onMouseLeave,\n      showFixedNumberOfWeeks = props.showFixedNumberOfWeeks;\n\n  var numberOfWeeks = function () {\n    if (showFixedNumberOfWeeks) {\n      return 6;\n    }\n\n    var numberOfDays = getDaysInMonth(activeStartDate);\n    var startWeekday = getDayOfWeek(activeStartDate, calendarType);\n    var days = numberOfDays - (7 - startWeekday);\n    return 1 + Math.ceil(days / 7);\n  }();\n\n  var dates = function () {\n    var year = getYear(activeStartDate);\n    var monthIndex = getMonth(activeStartDate);\n    var day = getDate(activeStartDate);\n    var result = [];\n\n    for (var index = 0; index < numberOfWeeks; index += 1) {\n      result.push(getBeginOfWeek(new Date(year, monthIndex, day + index * 7), calendarType));\n    }\n\n    return result;\n  }();\n\n  var weekNumbers = dates.map(function (date) {\n    return getWeekNumber(date, calendarType);\n  });\n  return /*#__PURE__*/React.createElement(Flex, {\n    className: \"react-calendar__month-view__weekNumbers\",\n    count: numberOfWeeks,\n    direction: \"column\",\n    onFocus: onMouseLeave,\n    onMouseOver: onMouseLeave,\n    style: {\n      flexBasis: 'calc(100% * (1 / 8)',\n      flexShrink: 0\n    }\n  }, weekNumbers.map(function (weekNumber, weekIndex) {\n    return /*#__PURE__*/React.createElement(WeekNumber, {\n      key: weekNumber,\n      date: dates[weekIndex],\n      onClickWeekNumber: onClickWeekNumber,\n      weekNumber: weekNumber\n    });\n  }));\n}\nWeekNumbers.propTypes = {\n  activeStartDate: PropTypes.instanceOf(Date).isRequired,\n  calendarType: isCalendarType.isRequired,\n  onClickWeekNumber: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  showFixedNumberOfWeeks: PropTypes.bool\n};","map":{"version":3,"sources":["/home/malav/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/node_modules/react-calendar/dist/esm/MonthView/WeekNumbers.js"],"names":["React","PropTypes","getYear","getMonth","getDate","getDaysInMonth","WeekNumber","Flex","getBeginOfWeek","getDayOfWeek","getWeekNumber","isCalendarType","WeekNumbers","props","activeStartDate","calendarType","onClickWeekNumber","onMouseLeave","showFixedNumberOfWeeks","numberOfWeeks","numberOfDays","startWeekday","days","Math","ceil","dates","year","monthIndex","day","result","index","push","Date","weekNumbers","map","date","createElement","className","count","direction","onFocus","onMouseOver","style","flexBasis","flexShrink","weekNumber","weekIndex","key","propTypes","instanceOf","isRequired","func","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getYear, getMonth, getDate, getDaysInMonth } from '@wojtekmaj/date-utils';\nimport WeekNumber from './WeekNumber';\nimport Flex from '../Flex';\nimport { getBeginOfWeek, getDayOfWeek, getWeekNumber } from '../shared/dates';\nimport { isCalendarType } from '../shared/propTypes';\nexport default function WeekNumbers(props) {\n  var activeStartDate = props.activeStartDate,\n      calendarType = props.calendarType,\n      onClickWeekNumber = props.onClickWeekNumber,\n      onMouseLeave = props.onMouseLeave,\n      showFixedNumberOfWeeks = props.showFixedNumberOfWeeks;\n\n  var numberOfWeeks = function () {\n    if (showFixedNumberOfWeeks) {\n      return 6;\n    }\n\n    var numberOfDays = getDaysInMonth(activeStartDate);\n    var startWeekday = getDayOfWeek(activeStartDate, calendarType);\n    var days = numberOfDays - (7 - startWeekday);\n    return 1 + Math.ceil(days / 7);\n  }();\n\n  var dates = function () {\n    var year = getYear(activeStartDate);\n    var monthIndex = getMonth(activeStartDate);\n    var day = getDate(activeStartDate);\n    var result = [];\n\n    for (var index = 0; index < numberOfWeeks; index += 1) {\n      result.push(getBeginOfWeek(new Date(year, monthIndex, day + index * 7), calendarType));\n    }\n\n    return result;\n  }();\n\n  var weekNumbers = dates.map(function (date) {\n    return getWeekNumber(date, calendarType);\n  });\n  return /*#__PURE__*/React.createElement(Flex, {\n    className: \"react-calendar__month-view__weekNumbers\",\n    count: numberOfWeeks,\n    direction: \"column\",\n    onFocus: onMouseLeave,\n    onMouseOver: onMouseLeave,\n    style: {\n      flexBasis: 'calc(100% * (1 / 8)',\n      flexShrink: 0\n    }\n  }, weekNumbers.map(function (weekNumber, weekIndex) {\n    return /*#__PURE__*/React.createElement(WeekNumber, {\n      key: weekNumber,\n      date: dates[weekIndex],\n      onClickWeekNumber: onClickWeekNumber,\n      weekNumber: weekNumber\n    });\n  }));\n}\nWeekNumbers.propTypes = {\n  activeStartDate: PropTypes.instanceOf(Date).isRequired,\n  calendarType: isCalendarType.isRequired,\n  onClickWeekNumber: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  showFixedNumberOfWeeks: PropTypes.bool\n};"]},"metadata":{},"sourceType":"module"}