{"ast":null,"code":"import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\n\nvar skipNotifyOnElement = function (target) {\n  return !isSVG(target) && !isReplacedElement(target) && getComputedStyle(target).display === 'inline';\n};\n\nvar ResizeObservation = function () {\n  function ResizeObservation(target, observedBox) {\n    this.target = target;\n    this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n    this.lastReportedSize = {\n      inlineSize: 0,\n      blockSize: 0\n    };\n  }\n\n  ResizeObservation.prototype.isActive = function () {\n    var size = calculateBoxSize(this.target, this.observedBox, true);\n\n    if (skipNotifyOnElement(this.target)) {\n      this.lastReportedSize = size;\n    }\n\n    if (this.lastReportedSize.inlineSize !== size.inlineSize || this.lastReportedSize.blockSize !== size.blockSize) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return ResizeObservation;\n}();\n\nexport { ResizeObservation };","map":{"version":3,"sources":["/home/malav/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/node_modules/@juggle/resize-observer/lib/ResizeObservation.js"],"names":["ResizeObserverBoxOptions","calculateBoxSize","isSVG","isReplacedElement","skipNotifyOnElement","target","getComputedStyle","display","ResizeObservation","observedBox","CONTENT_BOX","lastReportedSize","inlineSize","blockSize","prototype","isActive","size"],"mappings":"AAAA,SAASA,wBAAT,QAAyC,4BAAzC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,KAAT,EAAgBC,iBAAhB,QAAyC,iBAAzC;;AACA,IAAIC,mBAAmB,GAAG,UAAUC,MAAV,EAAkB;AACxC,SAAO,CAACH,KAAK,CAACG,MAAD,CAAN,IACA,CAACF,iBAAiB,CAACE,MAAD,CADlB,IAEAC,gBAAgB,CAACD,MAAD,CAAhB,CAAyBE,OAAzB,KAAqC,QAF5C;AAGH,CAJD;;AAKA,IAAIC,iBAAiB,GAAI,YAAY;AACjC,WAASA,iBAAT,CAA2BH,MAA3B,EAAmCI,WAAnC,EAAgD;AAC5C,SAAKJ,MAAL,GAAcA,MAAd;AACA,SAAKI,WAAL,GAAmBA,WAAW,IAAIT,wBAAwB,CAACU,WAA3D;AACA,SAAKC,gBAAL,GAAwB;AACpBC,MAAAA,UAAU,EAAE,CADQ;AAEpBC,MAAAA,SAAS,EAAE;AAFS,KAAxB;AAIH;;AACDL,EAAAA,iBAAiB,CAACM,SAAlB,CAA4BC,QAA5B,GAAuC,YAAY;AAC/C,QAAIC,IAAI,GAAGf,gBAAgB,CAAC,KAAKI,MAAN,EAAc,KAAKI,WAAnB,EAAgC,IAAhC,CAA3B;;AACA,QAAIL,mBAAmB,CAAC,KAAKC,MAAN,CAAvB,EAAsC;AAClC,WAAKM,gBAAL,GAAwBK,IAAxB;AACH;;AACD,QAAI,KAAKL,gBAAL,CAAsBC,UAAtB,KAAqCI,IAAI,CAACJ,UAA1C,IACG,KAAKD,gBAAL,CAAsBE,SAAtB,KAAoCG,IAAI,CAACH,SADhD,EAC2D;AACvD,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GAVD;;AAWA,SAAOL,iBAAP;AACH,CArBwB,EAAzB;;AAsBA,SAASA,iBAAT","sourcesContent":["import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n"]},"metadata":{},"sourceType":"module"}