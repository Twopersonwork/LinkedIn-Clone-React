{"ast":null,"code":"var _jsxFileName = \"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Count.js\";\nimport React, { Component } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Count extends Component {\n  constructor(props) {\n    super(props);\n\n    this.LikeInfo = id => {\n      fetch(`http://127.0.0.1:8000/uapi/users/${id}/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token d194a979f94b27587f743071a64f8d5c7d3dfb01\"\n        }\n      }).then(resp => resp.json()).then(res => [res.username].concat(this.state.usernames), this.setState({\n        show: true\n      }, console.log(this.state.user))).catch(error => console.log(error));\n    };\n\n    this.modalShow = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.state = {\n      user: \"\",\n      show: false,\n      usernames: []\n    };\n  }\n\n  componentDidMount() {\n    this.LikeInfo(this.state.user);\n  }\n\n  render() {\n    const {\n      likes,\n      comments,\n      no_of_like,\n      no_of_comment\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [likes.map(like => (function () {\n        this.setState({\n          user: like.user\n        });\n      }, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.modalShow,\n          children: no_of_like\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this))), this.state.show ? /*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.show,\n        size: \"md\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          onClick: () => {\n            this.setState({\n              show: false\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Reactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: this.state.usernames.map(username => {\n            /*#__PURE__*/\n            _jsxDEV(\"h4\", {\n              children: username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Count;","map":{"version":3,"sources":["/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Count.js"],"names":["React","Component","Modal","Count","constructor","props","LikeInfo","id","fetch","method","headers","Authorization","then","resp","json","res","username","concat","state","usernames","setState","show","console","log","user","catch","error","modalShow","componentDidMount","render","likes","comments","no_of_like","no_of_comment","map","like"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nclass Count extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: \"\",\n      show: false,\n      usernames: [],\n    };\n  }\n\n  componentDidMount() {\n    this.LikeInfo(this.state.user);\n  }\n\n  LikeInfo = (id) => {\n    fetch(`http://127.0.0.1:8000/uapi/users/${id}/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token d194a979f94b27587f743071a64f8d5c7d3dfb01\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then(\n        (res) => [res.username].concat(this.state.usernames),\n        this.setState(\n          {\n            show: true,\n          },\n          console.log(this.state.user)\n        )\n      )\n      .catch((error) => console.log(error));\n  };\n  modalShow = () => {\n    this.setState({ show: true });\n  };\n\n  render() {\n    const { likes, comments, no_of_like, no_of_comment } = this.props;\n\n    return (\n      <div>\n        {likes.map(\n          (like) => (\n            function () {\n              this.setState({ user: like.user });\n            },\n            (\n              <div>\n                <button onClick={this.modalShow}>{no_of_like}</button>\n              </div>\n            )\n          )\n        )}\n        {this.state.show ? (\n          <Modal\n            show={this.state.show}\n            size=\"md\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Header\n              closeButton\n              onClick={() => {\n                this.setState({ show: false });\n              }}\n            >\n              <Modal.Title id=\"contained-modal-title-vcenter\">\n                Reactions\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              {this.state.usernames.map((username) => {\n                <h4>{username}</h4>;\n              })}\n            </Modal.Body>\n            {/* <Modal.Footer></Modal.Footer> */}\n          </Modal>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Count;\n"]},"metadata":{},"sourceType":"module"}