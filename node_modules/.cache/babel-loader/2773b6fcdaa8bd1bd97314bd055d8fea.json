{"ast":null,"code":"var _jsxFileName = \"/home/malav/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/EditPost.js\";\nimport React, { Component } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { withCookies } from \"react-cookie\";\nimport InsertPhotoIcon from \"@material-ui/icons/InsertPhoto\";\nimport \"./CreatePost.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.removeImage = () => {\n      this.setState({\n        image: \"\",\n        imageAsFile: null\n      });\n    };\n\n    this.handleBody = e => {\n      this.setState({\n        body: e.target.value\n      });\n    };\n\n    this.submitPost = () => {\n      var form_data = new FormData();\n      form_data.set(\"body\", this.state.body);\n      form_data.set(\"user\", this.props.cookies.get(\"auth-token\").user.id);\n\n      if (this.state.imageAsFile) {\n        form_data.set(\"image\", this.state.imageAsFile, this.state.imageAsFile.name);\n      } // console.log(this.props.cookies.get(\"auth-token\").token);\n\n\n      fetch(`${process.env.REACT_APP_API_URL}/papi/posts/${this.props.post.id}/`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n        },\n        body: form_data\n      }).then(res => res.json()).then(res => {\n        this.setState({\n          modalPost: false\n        }, function () {\n          window.location.reload();\n          this.props.closemodalPost(false);\n        }); // console.log(res.data);\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      modalPost: true,\n      body: this.props.post.body,\n      image: this.props.post.image,\n      imageAsFile: this.props.post.imageAsFile\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        style: {\n          height: \"700px\"\n        },\n        scrollable: true,\n        show: this.state.modalPost,\n        size: \"md\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          autoFocus: true,\n          onClick: () => this.setState({\n            modalPost: false\n          }, function () {\n            this.props.closemodalPost(false);\n          }),\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            style: {\n              fontSize: \"1.2rem\"\n            },\n            id: \"contained-modal-title-vcenter\",\n            children: \"Edit a Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"exampleForm.ControlTextarea1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post__header\",\n                children: [this.props.cookies.get(\"auth-token\").user.profile_pic ? /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: this.props.cookies.get(\"auth-token\").user.profile_pic,\n                  alt: \"Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n                  className: \"post__image\",\n                  src: \"/images/user.svg\",\n                  alt: \"Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2\",\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: this.props.cookies.get(\"auth-token\").user.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: this.state.body,\n              style: {\n                border: \"none\"\n              },\n              placeholder: \"What do you want to talk about?\",\n              onChange: this.handleBody,\n              as: \"textarea\",\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), this.state.image ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"img_wrp\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"post__image\",\n                style: {\n                  borderRadius: \"10px\"\n                },\n                src: this.state.image,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AiFillCloseCircle, {\n                className: \"close__image\",\n                onClick: this.removeImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              display: \"none\"\n            },\n            type: \"file\",\n            id: \"file\",\n            onChange: e => this.setState({\n              image: URL.createObjectURL(e.target.files[0]),\n              imageAsFile: e.target.files[0]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mr-auto\",\n            htmlFor: \"file\",\n            children: /*#__PURE__*/_jsxDEV(InsertPhotoIcon, {\n              style: {\n                color: \"gray\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: post_button,\n            disabled: this.state.body.length < 1,\n            type: \"submit\",\n            onClick: this.submitPost,\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst post_button = {\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  marginTop: \"10px\",\n  marginLeft: \"10px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  display: \"flex\",\n  background: \"#0c66c2\",\n  color: \"white\",\n  border: \"solid 1px #0c66c2\"\n};\nexport default _c = withCookies(EditPost);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/malav/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/EditPost.js"],"names":["React","Component","Modal","Button","Form","withCookies","InsertPhotoIcon","Avatar","AiFillCloseCircle","EditPost","constructor","props","removeImage","setState","image","imageAsFile","handleBody","e","body","target","value","submitPost","form_data","FormData","set","state","cookies","get","user","id","name","fetch","process","env","REACT_APP_API_URL","post","method","headers","Authorization","token","then","res","json","modalPost","window","location","reload","closemodalPost","catch","err","console","log","render","height","fontSize","profile_pic","fontWeight","username","border","borderRadius","display","URL","createObjectURL","files","color","post_button","length","paddingLeft","paddingRight","marginTop","marginLeft","background"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { withCookies } from \"react-cookie\";\nimport InsertPhotoIcon from \"@material-ui/icons/InsertPhoto\";\nimport \"./CreatePost.css\";\nimport { Avatar } from \"@material-ui/core\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\n\nclass EditPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalPost: true,\n      body: this.props.post.body,\n      image: this.props.post.image,\n      imageAsFile: this.props.post.imageAsFile,\n    };\n  }\n\n  removeImage = () => {\n    this.setState({\n      image: \"\",\n      imageAsFile: null,\n    });\n  };\n\n  handleBody = (e) => {\n    this.setState({ body: e.target.value })\n  }\n\n  submitPost = () => {\n    var form_data = new FormData();\n\n    form_data.set(\"body\", this.state.body);\n    form_data.set(\"user\", this.props.cookies.get(\"auth-token\").user.id);\n\n    if (this.state.imageAsFile) {\n      form_data.set(\n        \"image\",\n        this.state.imageAsFile,\n        this.state.imageAsFile.name\n      );\n    }\n\n    // console.log(this.props.cookies.get(\"auth-token\").token);\n    fetch(\n      `${process.env.REACT_APP_API_URL}/papi/posts/${this.props.post.id}/`,\n      {\n        method: \"PUT\",\n        headers: {\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n        },\n        body: form_data,\n      }\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        this.setState({ modalPost: false }, function () {\n          window.location.reload();\n          this.props.closemodalPost(false);\n        });\n\n        // console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    return (\n      <div>\n        <Modal\n          style={{\n            height: \"700px\",\n          }}\n          scrollable={true}\n          show={this.state.modalPost}\n          size=\"md\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header\n            closeButton\n            autoFocus\n            onClick={() =>\n              this.setState({ modalPost: false }, function () {\n                this.props.closemodalPost(false);\n              })\n            }\n          >\n            <Modal.Title\n              style={{\n                fontSize: \"1.2rem\",\n              }}\n              id=\"contained-modal-title-vcenter\"\n            >\n              Edit a Post\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n              <Form.Label>\n                <div className=\"post__header\">\n                  {this.props.cookies.get(\"auth-token\").user.profile_pic ? (\n                    <Avatar\n                      src={\n                        this.props.cookies.get(\"auth-token\").user.profile_pic\n                      }\n                      alt=\"Profile\"\n                    />\n                  ) : (\n                    <Avatar\n                      className=\"post__image\"\n                      src=\"/images/user.svg\"\n                      alt=\"Profile\"\n                    />\n                  )}\n                  <span className=\"ml-2\" style={{ fontWeight: \"bold\" }}>\n                    {this.props.cookies.get(\"auth-token\").user.username}\n                  </span>\n                </div>\n              </Form.Label>\n              <Form.Control\n                value={this.state.body}\n                style={{ border: \"none\" }}\n                placeholder=\"What do you want to talk about?\"\n                onChange={this.handleBody}\n                as=\"textarea\"\n                rows={3}\n              />\n            </Form.Group>\n\n            {this.state.image ? (\n              <React.Fragment>\n                <div class=\"img_wrp\">\n                  <img\n                    className=\"post__image\"\n                    style={{ borderRadius: \"10px\" }}\n                    src={this.state.image}\n                    alt=\"\"\n                  />\n                  <AiFillCloseCircle\n                    className=\"close__image\"\n                    onClick={this.removeImage}\n                  />\n                  {/* <Icon  /> */}\n                </div>\n              </React.Fragment>\n            ) : null}\n          </Modal.Body>\n          <Modal.Footer>\n            <input\n              style={{ display: \"none\" }}\n              type=\"file\"\n              id=\"file\"\n              onChange={(e) =>\n                this.setState({\n                  image: URL.createObjectURL(e.target.files[0]),\n                  imageAsFile: e.target.files[0],\n                })\n              }\n            />\n            <label className=\"mr-auto\" htmlFor=\"file\">\n              <InsertPhotoIcon style={{ color: \"gray\" }} />\n            </label>\n            <Button\n              style={post_button}\n              disabled={this.state.body.length < 1}\n              type=\"submit\"\n              onClick={this.submitPost}\n            >\n              Post\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst post_button = {\n  paddingLeft: \"20px\",\n  paddingRight: \"20px\",\n  marginTop: \"10px\",\n  marginLeft: \"10px\",\n  fontWeight: \"bold\",\n  borderRadius: \"50px\",\n  display: \"flex\",\n  background: \"#0c66c2\",\n  color: \"white\",\n  border: \"solid 1px #0c66c2\",\n};\n\nexport default withCookies(EditPost);\n"]},"metadata":{},"sourceType":"module"}