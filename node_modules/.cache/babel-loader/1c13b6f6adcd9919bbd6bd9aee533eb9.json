{"ast":null,"code":"var _jsxFileName = \"/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Feed.js\";\nimport \"./Feed.css\";\nimport InputOption from \"./InputOption\";\nimport Post from \"./Post\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\nimport FlipMove from \"react-flip-move\";\nimport React, { Component } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport { Create } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Feed extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitPost = () => {\n      var form_data = new FormData();\n      form_data.set(\"body\", this.state.body);\n\n      if (this.state.image) {\n        form_data.set(\"image\", this.state.imageAsFile, this.state.imageAsFile.name);\n      }\n\n      console.log(form_data);\n      fetch(`${process.env.REACT_APP_API_URL}/papi/create_post/`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n        },\n        body: form_data\n      }).then(res => res.json()).then(res => {\n        this.setState({\n          modalPost: false\n        }, function () {\n          window.location.reload();\n        });\n        console.log(res.data);\n      }).catch(err => console.log(err));\n    };\n\n    this.createPost = () => {\n      this.setState({\n        modalPost: true\n      });\n    };\n\n    this.handleBody = e => this.setState({\n      body: e.target.value\n    }, function () {\n      console.log(this.state.body);\n    });\n\n    this.state = {\n      input: \"\",\n      posts: [],\n      modalPost: false,\n      body: \"\",\n      image: \"\",\n      imageAsFile: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/papi/posts/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n      }\n    }).then(resp => resp.json()).then(res => this.setState({\n      posts: res\n    }, console.log(res))).catch(error => console.log(error));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.posts.length != this.state.posts.length) {\n      fetch(`${process.env.REACT_APP_API_URL}/papi/posts/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`\n        }\n      }).then(resp => resp.json()).then(res => this.setState({\n        posts: res\n      })).catch(error => console.log(error));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed__inputContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: \"100%\"\n          },\n          onClick: this.createPost,\n          className: \"feed__input\",\n          children: \"Start a Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feed__inputOptions\",\n          children: [/*#__PURE__*/_jsxDEV(InputOption, {\n            Icon: ImageIcon,\n            title: \"Photo\",\n            color: \"#70B5F9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n            Icon: SubscriptionsIcon,\n            title: \"Video\",\n            color: \"#7FC15E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n            Icon: EventNoteIcon,\n            title: \"Event\",\n            color: \"#E7A33E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputOption, {\n            Icon: CalendarViewDayIcon,\n            title: \"Write article\",\n            color: \"#F5987E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlipMove, {\n        children: this.state.posts.length > 0 && this.state.posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 44\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreatePost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withCookies(Feed);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/src/components/Feed/Feed.js"],"names":["InputOption","Post","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","FlipMove","React","Component","withCookies","Create","Feed","constructor","props","submitPost","form_data","FormData","set","state","body","image","imageAsFile","name","console","log","fetch","process","env","REACT_APP_API_URL","method","headers","Authorization","cookies","get","token","then","res","json","setState","modalPost","window","location","reload","data","catch","err","createPost","handleBody","e","target","value","input","posts","componentDidMount","resp","error","componentDidUpdate","prevProps","prevState","length","render","width","map","post","id"],"mappings":"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","sourcesContent":["import \"./Feed.css\";\nimport InputOption from \"./InputOption\";\nimport Post from \"./Post\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\nimport CalendarViewDayIcon from \"@material-ui/icons/CalendarViewDay\";\nimport FlipMove from \"react-flip-move\";\n\nimport React, { Component } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport { Create } from \"@material-ui/icons\";\n\nclass Feed extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      posts: [],\n      modalPost: false,\n      body: \"\",\n      image: \"\",\n      imageAsFile: null,\n    };\n  }\n\n  submitPost = () => {\n    var form_data = new FormData();\n\n    form_data.set(\"body\", this.state.body);\n    if (this.state.image) {\n      form_data.set(\n        \"image\",\n        this.state.imageAsFile,\n        this.state.imageAsFile.name\n      );\n    }\n\n    console.log(form_data);\n    fetch(`${process.env.REACT_APP_API_URL}/papi/create_post/`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n      },\n      body: form_data,\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        this.setState({ modalPost: false }, function () {\n          window.location.reload();\n        });\n\n        console.log(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  createPost = () => {\n    this.setState({\n      modalPost: true,\n    });\n  };\n\n  handleBody = (e) =>\n    this.setState({ body: e.target.value }, function () {\n      console.log(this.state.body);\n    });\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/papi/posts/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n      },\n    })\n      .then((resp) => resp.json())\n      .then((res) =>\n        this.setState(\n          {\n            posts: res,\n          },\n          console.log(res)\n        )\n      )\n      .catch((error) => console.log(error));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.posts.length != this.state.posts.length) {\n      fetch(`${process.env.REACT_APP_API_URL}/papi/posts/`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${this.props.cookies.get(\"auth-token\").token}`,\n        },\n      })\n        .then((resp) => resp.json())\n        .then((res) =>\n          this.setState({\n            posts: res,\n          })\n        )\n        .catch((error) => console.log(error));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"feed\">\n        <div className=\"feed__inputContainer\">\n          <button\n            style={{ width: \"100%\" }}\n            onClick={this.createPost}\n            className=\"feed__input\"\n          >\n            Start a Post\n          </button>\n          {/* </div> */}\n          <div className=\"feed__inputOptions\">\n            <InputOption Icon={ImageIcon} title=\"Photo\" color=\"#70B5F9\" />\n            <InputOption\n              Icon={SubscriptionsIcon}\n              title=\"Video\"\n              color=\"#7FC15E\"\n            />\n            <InputOption Icon={EventNoteIcon} title=\"Event\" color=\"#E7A33E\" />\n            <InputOption\n              Icon={CalendarViewDayIcon}\n              title=\"Write article\"\n              color=\"#F5987E\"\n            />\n          </div>\n        </div>\n        <hr />\n\n        {/* Posts */}\n        <FlipMove>\n          {this.state.posts.length > 0 &&\n            this.state.posts.map((post) => <Post key={post.id} post={post} />)}\n        </FlipMove>\n        <CreatePost />\n\n        {/* {this.state.modalPost ? (\n          <Modal\n            show={this.state.modalPost}\n            size=\"md\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n          >\n            <Modal.Header\n              closeButton\n              onClick={() => {\n                this.setState({ modalPost: false });\n              }}\n            >\n              <Modal.Title id=\"contained-modal-title-vcenter\">\n                Create a Post\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <input\n                placeholder=\"What do you want to talk about?\"\n                onChange={this.handleBody}\n              />\n              {this.state.image ? (\n                <img className=\"post__image\" src={this.state.image} />\n              ) : null}\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                disabled={this.state.body.length < 1}\n                type=\"submit\"\n                onClick={this.submitPost}\n              >\n                Post\n              </Button>\n              <input\n                type=\"file\"\n                id=\"file\"\n                onChange={(e) =>\n                  this.setState(\n                    {\n                      image: URL.createObjectURL(e.target.files[0]),\n                      imageAsFile: e.target.files[0],\n                    },\n                    console.log(this.state.image)\n                  )\n                }\n              />\n            </Modal.Footer>\n          </Modal>\n        ) : null} */}\n      </div>\n    );\n  }\n}\n\nexport default withCookies(Feed);\n"]},"metadata":{},"sourceType":"module"}