{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBegin = getBegin;\nexports.getEnd = getEnd;\n\nvar _dateUtils = require(\"@wojtekmaj/date-utils\");\n/**\n * Returns the beginning of a given range.\n *\n * @param {string} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\n\n\nfunction getBegin(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyStart)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getDecadeStart)(date);\n\n    case 'year':\n      return (0, _dateUtils.getYearStart)(date);\n\n    case 'month':\n      return (0, _dateUtils.getMonthStart)(date);\n\n    case 'day':\n      return (0, _dateUtils.getDayStart)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n/**\n * Returns the end of a given range.\n *\n * @param {string} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\n\n\nfunction getEnd(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyEnd)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getDecadeEnd)(date);\n\n    case 'year':\n      return (0, _dateUtils.getYearEnd)(date);\n\n    case 'month':\n      return (0, _dateUtils.getMonthEnd)(date);\n\n    case 'day':\n      return (0, _dateUtils.getDayEnd)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}","map":{"version":3,"sources":["/home/malav/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/node_modules/react-date-picker/dist/shared/dates.js"],"names":["Object","defineProperty","exports","value","getBegin","getEnd","_dateUtils","require","rangeType","date","getCenturyStart","getDecadeStart","getYearStart","getMonthStart","getDayStart","Error","concat","getCenturyEnd","getDecadeEnd","getYearEnd","getMonthEnd","getDayEnd"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,QAAR,GAAmBA,QAAnB;AACAF,OAAO,CAACG,MAAR,GAAiBA,MAAjB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,uBAAD,CAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASH,QAAT,CAAkBI,SAAlB,EAA6BC,IAA7B,EAAmC;AACjC,UAAQD,SAAR;AACE,SAAK,SAAL;AACE,aAAO,CAAC,GAAGF,UAAU,CAACI,eAAf,EAAgCD,IAAhC,CAAP;;AAEF,SAAK,QAAL;AACE,aAAO,CAAC,GAAGH,UAAU,CAACK,cAAf,EAA+BF,IAA/B,CAAP;;AAEF,SAAK,MAAL;AACE,aAAO,CAAC,GAAGH,UAAU,CAACM,YAAf,EAA6BH,IAA7B,CAAP;;AAEF,SAAK,OAAL;AACE,aAAO,CAAC,GAAGH,UAAU,CAACO,aAAf,EAA8BJ,IAA9B,CAAP;;AAEF,SAAK,KAAL;AACE,aAAO,CAAC,GAAGH,UAAU,CAACQ,WAAf,EAA4BL,IAA5B,CAAP;;AAEF;AACE,YAAM,IAAIM,KAAJ,CAAU,sBAAsBC,MAAtB,CAA6BR,SAA7B,CAAV,CAAN;AAjBJ;AAmBD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASH,MAAT,CAAgBG,SAAhB,EAA2BC,IAA3B,EAAiC;AAC/B,UAAQD,SAAR;AACE,SAAK,SAAL;AACE,aAAO,CAAC,GAAGF,UAAU,CAACW,aAAf,EAA8BR,IAA9B,CAAP;;AAEF,SAAK,QAAL;AACE,aAAO,CAAC,GAAGH,UAAU,CAACY,YAAf,EAA6BT,IAA7B,CAAP;;AAEF,SAAK,MAAL;AACE,aAAO,CAAC,GAAGH,UAAU,CAACa,UAAf,EAA2BV,IAA3B,CAAP;;AAEF,SAAK,OAAL;AACE,aAAO,CAAC,GAAGH,UAAU,CAACc,WAAf,EAA4BX,IAA5B,CAAP;;AAEF,SAAK,KAAL;AACE,aAAO,CAAC,GAAGH,UAAU,CAACe,SAAf,EAA0BZ,IAA1B,CAAP;;AAEF;AACE,YAAM,IAAIM,KAAJ,CAAU,sBAAsBC,MAAtB,CAA6BR,SAA7B,CAAV,CAAN;AAjBJ;AAmBD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBegin = getBegin;\nexports.getEnd = getEnd;\n\nvar _dateUtils = require(\"@wojtekmaj/date-utils\");\n\n/**\n * Returns the beginning of a given range.\n *\n * @param {string} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\nfunction getBegin(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyStart)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getDecadeStart)(date);\n\n    case 'year':\n      return (0, _dateUtils.getYearStart)(date);\n\n    case 'month':\n      return (0, _dateUtils.getMonthStart)(date);\n\n    case 'day':\n      return (0, _dateUtils.getDayStart)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}\n/**\n * Returns the end of a given range.\n *\n * @param {string} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\n\n\nfunction getEnd(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return (0, _dateUtils.getCenturyEnd)(date);\n\n    case 'decade':\n      return (0, _dateUtils.getDecadeEnd)(date);\n\n    case 'year':\n      return (0, _dateUtils.getYearEnd)(date);\n\n    case 'month':\n      return (0, _dateUtils.getMonthEnd)(date);\n\n    case 'day':\n      return (0, _dateUtils.getDayEnd)(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n}"]},"metadata":{},"sourceType":"script"}