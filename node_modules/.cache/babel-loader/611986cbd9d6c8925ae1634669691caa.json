{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Children, cloneElement, createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nvar context = createContext({\n  root: true,\n  dir: \"ltr\",\n  toggleDir: function () {\n    throw new Error(\"Tried to toggle the current writing direction without initializing the `Dir` component.\");\n  }\n});\nvar Provider = context.Provider;\n/**\n * Gets the writing direction context which provides access to the current `dir`\n * and a `toggleDir` function.\n *\n * @remarks \\@since 2.3.0\n */\n\nexport function useDir() {\n  var _a = useContext(context),\n      _root = _a.root,\n      current = __rest(_a, [\"root\"]);\n\n  return current;\n}\n/**\n * @remarks \\@since 2.3.0\n */\n\nexport var DEFAULT_DIR = function () {\n  var dir = \"ltr\";\n\n  if (typeof document !== \"undefined\") {\n    var rootDir = document.documentElement.getAttribute(\"dir\");\n    dir = rootDir === \"rtl\" ? \"rtl\" : \"ltr\";\n  }\n\n  return dir;\n};\n/**\n * The `Dir` component is used to handle the current writing direction within\n * your app as well as conditionally updating the writing direction for small\n * sections in your app. When this component is used for the first time near the\n * root of your React component tree, the current direction will be applied to\n * the root `<html>` element. Otherwise the current dir will be cloned into the\n * child element so it can be passed as a prop.\n *\n * ```tsx\n * // html element will be updated to have `dir=\"ltr\"`\n * ReactDOM.render(<Dir><App /></Dir>, root)\n * ```\n *\n * ```tsx\n * // html element will be updated to have `dir=\"rtl\"` while the `<span>` will\n * // now be `<span dir=\"ltr\">`\n * ReactDOM.render(\n *   <Dir defaultDir=\"rtl\">\n *     <Some>\n *       <Other>\n *         <Components>\n *           <Dir defaultDir=\"ltr\">\n *             <span>Content</span>\n *           </Dir>\n *         </Components>\n *       </Other>\n *     </Some>\n *   </Dir>,\n *   root\n * );\n * ```\n *\n * Note: Since the `dir` is cloned into the child element, you need to make sure\n * that the child is either a DOM element or the `dir` prop is passed from your\n * custom component.\n *\n * @remarks \\@since 2.3.0\n */\n\nexport function Dir(_a) {\n  var children = _a.children,\n      _b = _a.defaultDir,\n      defaultDir = _b === void 0 ? DEFAULT_DIR : _b;\n  var root = useContext(context).root;\n\n  var _c = useState(defaultDir),\n      dir = _c[0],\n      setDir = _c[1];\n\n  useEffect(function () {\n    if (!root || typeof document === \"undefined\") {\n      return;\n    }\n\n    document.documentElement.setAttribute(\"dir\", dir);\n    return function () {\n      document.documentElement.removeAttribute(\"dir\");\n    };\n  }, [dir, root]);\n  var toggleDir = useCallback(function () {\n    setDir(function (prevDir) {\n      return prevDir === \"ltr\" ? \"rtl\" : \"ltr\";\n    });\n  }, []);\n  var value = useMemo(function () {\n    return {\n      root: false,\n      dir: dir,\n      toggleDir: toggleDir\n    };\n  }, [dir, toggleDir]);\n  var child = Children.only(children);\n\n  if (!root) {\n    child = cloneElement(child, {\n      dir: dir\n    });\n  }\n\n  return React.createElement(Provider, {\n    value: value\n  }, child);\n}\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  context.displayName = \"WritingDirection\";\n\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    Dir.propTypes = {\n      children: PropTypes.element.isRequired,\n      defaultDir: PropTypes.oneOfType([PropTypes.func, PropTypes.oneOf([\"ltr\", \"rtl\"])])\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../src/Dir.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { Children, cloneElement, createContext, useCallback, useContext, useEffect, useMemo, useState, } from \"react\";\nvar context = createContext({\n    root: true,\n    dir: \"ltr\",\n    toggleDir: function () {\n        throw new Error(\"Tried to toggle the current writing direction without initializing the `Dir` component.\");\n    },\n});\nvar Provider = context.Provider;\n/**\n * Gets the writing direction context which provides access to the current `dir`\n * and a `toggleDir` function.\n *\n * @remarks \\@since 2.3.0\n */\nexport function useDir() {\n    var _a = useContext(context), _root = _a.root, current = __rest(_a, [\"root\"]);\n    return current;\n}\n/**\n * @remarks \\@since 2.3.0\n */\nexport var DEFAULT_DIR = function () {\n    var dir = \"ltr\";\n    if (typeof document !== \"undefined\") {\n        var rootDir = document.documentElement.getAttribute(\"dir\");\n        dir = rootDir === \"rtl\" ? \"rtl\" : \"ltr\";\n    }\n    return dir;\n};\n/**\n * The `Dir` component is used to handle the current writing direction within\n * your app as well as conditionally updating the writing direction for small\n * sections in your app. When this component is used for the first time near the\n * root of your React component tree, the current direction will be applied to\n * the root `<html>` element. Otherwise the current dir will be cloned into the\n * child element so it can be passed as a prop.\n *\n * ```tsx\n * // html element will be updated to have `dir=\"ltr\"`\n * ReactDOM.render(<Dir><App /></Dir>, root)\n * ```\n *\n * ```tsx\n * // html element will be updated to have `dir=\"rtl\"` while the `<span>` will\n * // now be `<span dir=\"ltr\">`\n * ReactDOM.render(\n *   <Dir defaultDir=\"rtl\">\n *     <Some>\n *       <Other>\n *         <Components>\n *           <Dir defaultDir=\"ltr\">\n *             <span>Content</span>\n *           </Dir>\n *         </Components>\n *       </Other>\n *     </Some>\n *   </Dir>,\n *   root\n * );\n * ```\n *\n * Note: Since the `dir` is cloned into the child element, you need to make sure\n * that the child is either a DOM element or the `dir` prop is passed from your\n * custom component.\n *\n * @remarks \\@since 2.3.0\n */\nexport function Dir(_a) {\n    var children = _a.children, _b = _a.defaultDir, defaultDir = _b === void 0 ? DEFAULT_DIR : _b;\n    var root = useContext(context).root;\n    var _c = useState(defaultDir), dir = _c[0], setDir = _c[1];\n    useEffect(function () {\n        if (!root || typeof document === \"undefined\") {\n            return;\n        }\n        document.documentElement.setAttribute(\"dir\", dir);\n        return function () {\n            document.documentElement.removeAttribute(\"dir\");\n        };\n    }, [dir, root]);\n    var toggleDir = useCallback(function () {\n        setDir(function (prevDir) { return (prevDir === \"ltr\" ? \"rtl\" : \"ltr\"); });\n    }, []);\n    var value = useMemo(function () { return ({ root: false, dir: dir, toggleDir: toggleDir }); }, [dir, toggleDir]);\n    var child = Children.only(children);\n    if (!root) {\n        child = cloneElement(child, { dir: dir });\n    }\n    return React.createElement(Provider, { value: value }, child);\n}\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    context.displayName = \"WritingDirection\";\n    try {\n        var PropTypes = require(\"prop-types\");\n        Dir.propTypes = {\n            children: PropTypes.element.isRequired,\n            defaultDir: PropTypes.oneOfType([\n                PropTypes.func,\n                PropTypes.oneOf([\"ltr\", \"rtl\"]),\n            ]),\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=Dir.js.map"]},"metadata":{},"sourceType":"module"}