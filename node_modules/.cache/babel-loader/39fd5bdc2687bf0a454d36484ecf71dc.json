{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { Button } from \"@react-md/button\";\nimport { useIcon } from \"@react-md/icon\";\nimport { Badge } from \"./Badge\";\nimport { isEmpty } from \"./isEmpty\";\n/**\n * This is a small wrapper for the `Button` component that will automatically\n * apply the `aria-describedby` attribute when it has been \"badged\". It also\n * adds some reasonable defaults for the most common use-case for badges:\n * notifications.\n */\n\nexport var BadgedButton = forwardRef(function BadgedButton(_a, ref) {\n  var _b = _a[\"aria-label\"],\n      ariaLabel = _b === void 0 ? \"Notifications\" : _b,\n      badgeStyle = _a.badgeStyle,\n      badgeClassName = _a.badgeClassName,\n      badgeRef = _a.badgeRef,\n      propBadgeId = _a.badgeId,\n      propButtonChildren = _a.buttonChildren,\n      _c = _a.buttonType,\n      buttonType = _c === void 0 ? \"icon\" : _c,\n      badgeTheme = _a.badgeTheme,\n      _d = _a.children,\n      children = _d === void 0 ? null : _d,\n      _e = _a.disableNullOnZero,\n      disableNullOnZero = _e === void 0 ? false : _e,\n      propDescribedBy = _a[\"aria-describedby\"],\n      props = __rest(_a, [\"aria-label\", \"badgeStyle\", \"badgeClassName\", \"badgeRef\", \"badgeId\", \"buttonChildren\", \"buttonType\", \"badgeTheme\", \"children\", \"disableNullOnZero\", \"aria-describedby\"]);\n\n  var id = props.id;\n  var buttonChildren = useIcon(\"notification\", propButtonChildren);\n  var badgeId = propBadgeId || \"\";\n\n  if (!badgeId && id) {\n    badgeId = id + \"-badge\";\n  }\n\n  var describedBy = propDescribedBy;\n\n  if (!isEmpty(children, disableNullOnZero)) {\n    describedBy = cn(describedBy, badgeId);\n  }\n\n  return React.createElement(Button, __assign({}, props, {\n    \"aria-label\": ariaLabel,\n    \"aria-describedby\": describedBy,\n    ref: ref,\n    buttonType: buttonType\n  }), buttonChildren, React.createElement(Badge, {\n    id: badgeId,\n    ref: badgeRef,\n    theme: badgeTheme,\n    style: badgeStyle,\n    className: badgeClassName,\n    disableNullOnZero: disableNullOnZero\n  }, children));\n});\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    BadgedButton.propTypes = {\n      id: PropTypes.string,\n      \"aria-label\": PropTypes.string,\n      \"aria-describedby\": PropTypes.string,\n      buttonType: PropTypes.oneOf([\"text\", \"icon\"]),\n      children: PropTypes.node,\n      disableNullOnZero: PropTypes.bool,\n      badgeId: PropTypes.string,\n      badgeRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n      badgeStyle: PropTypes.object,\n      badgeClassName: PropTypes.string,\n      badgeTheme: PropTypes.oneOf([\"primary\", \"secondary\", \"default\", \"clear\"]),\n      buttonChildren: PropTypes.node\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../src/BadgedButton.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { Button } from \"@react-md/button\";\nimport { useIcon } from \"@react-md/icon\";\nimport { Badge } from \"./Badge\";\nimport { isEmpty } from \"./isEmpty\";\n/**\n * This is a small wrapper for the `Button` component that will automatically\n * apply the `aria-describedby` attribute when it has been \"badged\". It also\n * adds some reasonable defaults for the most common use-case for badges:\n * notifications.\n */\nexport var BadgedButton = forwardRef(function BadgedButton(_a, ref) {\n    var _b = _a[\"aria-label\"], ariaLabel = _b === void 0 ? \"Notifications\" : _b, badgeStyle = _a.badgeStyle, badgeClassName = _a.badgeClassName, badgeRef = _a.badgeRef, propBadgeId = _a.badgeId, propButtonChildren = _a.buttonChildren, _c = _a.buttonType, buttonType = _c === void 0 ? \"icon\" : _c, badgeTheme = _a.badgeTheme, _d = _a.children, children = _d === void 0 ? null : _d, _e = _a.disableNullOnZero, disableNullOnZero = _e === void 0 ? false : _e, propDescribedBy = _a[\"aria-describedby\"], props = __rest(_a, [\"aria-label\", \"badgeStyle\", \"badgeClassName\", \"badgeRef\", \"badgeId\", \"buttonChildren\", \"buttonType\", \"badgeTheme\", \"children\", \"disableNullOnZero\", \"aria-describedby\"]);\n    var id = props.id;\n    var buttonChildren = useIcon(\"notification\", propButtonChildren);\n    var badgeId = propBadgeId || \"\";\n    if (!badgeId && id) {\n        badgeId = id + \"-badge\";\n    }\n    var describedBy = propDescribedBy;\n    if (!isEmpty(children, disableNullOnZero)) {\n        describedBy = cn(describedBy, badgeId);\n    }\n    return (React.createElement(Button, __assign({}, props, { \"aria-label\": ariaLabel, \"aria-describedby\": describedBy, ref: ref, buttonType: buttonType }),\n        buttonChildren,\n        React.createElement(Badge, { id: badgeId, ref: badgeRef, theme: badgeTheme, style: badgeStyle, className: badgeClassName, disableNullOnZero: disableNullOnZero }, children)));\n});\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        BadgedButton.propTypes = {\n            id: PropTypes.string,\n            \"aria-label\": PropTypes.string,\n            \"aria-describedby\": PropTypes.string,\n            buttonType: PropTypes.oneOf([\"text\", \"icon\"]),\n            children: PropTypes.node,\n            disableNullOnZero: PropTypes.bool,\n            badgeId: PropTypes.string,\n            badgeRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n            badgeStyle: PropTypes.object,\n            badgeClassName: PropTypes.string,\n            badgeTheme: PropTypes.oneOf([\"primary\", \"secondary\", \"default\", \"clear\"]),\n            buttonChildren: PropTypes.node,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=BadgedButton.js.map"]},"metadata":{},"sourceType":"module"}