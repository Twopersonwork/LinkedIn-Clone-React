{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-icon\");\n/**\n * The `SVGIcon` component is used to render inline SVG icons or SVG icons in a\n * sprite map as an icon.\n */\n\nexport var SVGIcon = forwardRef(function SVGIcon(_a, ref) {\n  var _b = _a[\"aria-hidden\"],\n      ariaHidden = _b === void 0 ? true : _b,\n      _c = _a.focusable,\n      focusable = _c === void 0 ? \"false\" : _c,\n      _d = _a.xmlns,\n      xmlns = _d === void 0 ? \"http://www.w3.org/2000/svg\" : _d,\n      _e = _a.viewBox,\n      viewBox = _e === void 0 ? \"0 0 24 24\" : _e,\n      _f = _a.dense,\n      dense = _f === void 0 ? false : _f,\n      className = _a.className,\n      use = _a.use,\n      propChildren = _a.children,\n      props = __rest(_a, [\"aria-hidden\", \"focusable\", \"xmlns\", \"viewBox\", \"dense\", \"className\", \"use\", \"children\"]);\n\n  var children = propChildren;\n\n  if (!children && use) {\n    children = React.createElement(\"use\", {\n      xlinkHref: use\n    });\n  }\n\n  return React.createElement(\"svg\", __assign({}, props, {\n    \"aria-hidden\": ariaHidden,\n    ref: ref,\n    className: cn(block({\n      svg: true,\n      dense: dense\n    }), className),\n    focusable: focusable,\n    xmlns: xmlns,\n    viewBox: viewBox\n  }), children);\n});\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    SVGIcon.propTypes = {\n      className: PropTypes.string,\n      role: PropTypes.string,\n      \"aria-hidden\": PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n      \"aria-labelledby\": PropTypes.string,\n      focusable: PropTypes.oneOf([\"true\", \"false\"]),\n      viewBox: PropTypes.string,\n      xmlns: PropTypes.string,\n      use: PropTypes.string,\n      dense: PropTypes.bool,\n      children: PropTypes.node\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../src/SVGIcon.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,UAAhB,QAA6D,OAA7D;AACA,OAAO,EAAP,MAAe,YAAf;AACA,SAAS,GAAT,QAAoB,iBAApB;AAgEA,IAAM,KAAK,GAAG,GAAG,CAAC,UAAD,CAAjB;AAEA;;;AAGG;;AACH,OAAO,IAAM,OAAO,GAAG,UAAU,CAA8B,SAAS,OAAT,CAC7D,EAD6D,EAY7D,GAZ6D,EAY1D;AAVD,MAAA,EAAA,GAAA,EAAA,CAAA,aAAA,CAAA;AAAA,MAAe,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,EAAhC;AAAA,MACA,EAAA,GAAA,EAAA,CAAA,SADA;AAAA,MACA,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,OAAH,GAAU,EADnB;AAAA,MAEA,EAAA,GAAA,EAAA,CAAA,KAFA;AAAA,MAEA,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,4BAAH,GAA+B,EAFpC;AAAA,MAGA,EAAA,GAAA,EAAA,CAAA,OAHA;AAAA,MAGA,OAAO,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,WAAH,GAAc,EAHrB;AAAA,MAIA,EAAA,GAAA,EAAA,CAAA,KAJA;AAAA,MAIA,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAJb;AAAA,MAKA,SAAS,GAAA,EAAA,CAAA,SALT;AAAA,MAMA,GAAG,GAAA,EAAA,CAAA,GANH;AAAA,MAOU,YAAY,GAAA,EAAA,CAAA,QAPtB;AAAA,MAQG,KAAK,GAAA,MAAA,CAAA,EAAA,EATV,CAAA,aAAA,EAAA,WAAA,EAAA,OAAA,EAAA,SAAA,EAAA,OAAA,EAAA,WAAA,EAAA,KAAA,EAAA,UAAA,CASU,CARR;;AAYF,MAAI,QAAQ,GAAG,YAAf;;AACA,MAAI,CAAC,QAAD,IAAa,GAAjB,EAAsB;AACpB,IAAA,QAAQ,GAAG,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE;AAAhB,KAAA,CAAX;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,EACW;AAAA,mBACI,UADJ;AAET,IAAA,GAAG,EAAE,GAFI;AAGT,IAAA,SAAS,EAAE,EAAE,CAAC,KAAK,CAAC;AAAE,MAAA,GAAG,EAAE,IAAP;AAAa,MAAA,KAAK,EAAA;AAAlB,KAAD,CAAN,EAA8B,SAA9B,CAHJ;AAIT,IAAA,SAAS,EAAE,SAJF;AAKT,IAAA,KAAK,EAAE,KALE;AAMT,IAAA,OAAO,EAAE;AANA,GADX,CAAA,EASG,QATH,CADF;AAaD,CAhCgC,CAA1B;AAkCP;;AACA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,OAAO,CAAC,SAAR,GAAoB;AAClB,MAAA,SAAS,EAAE,SAAS,CAAC,MADH;AAElB,MAAA,IAAI,EAAE,SAAS,CAAC,MAFE;AAGlB,qBAAe,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,IAAX,EAAiB,SAAS,CAAC,MAA3B,CAApB,CAHG;AAIlB,yBAAmB,SAAS,CAAC,MAJX;AAKlB,MAAA,SAAS,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CALO;AAMlB,MAAA,OAAO,EAAE,SAAS,CAAC,MAND;AAOlB,MAAA,KAAK,EAAE,SAAS,CAAC,MAPC;AAQlB,MAAA,GAAG,EAAE,SAAS,CAAC,MARG;AASlB,MAAA,KAAK,EAAE,SAAS,CAAC,IATC;AAUlB,MAAA,QAAQ,EAAE,SAAS,CAAC;AAVF,KAApB;AAYD,GAfD,CAeE,OAAO,CAAP,EAAU,CAAE;AACf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-icon\");\n/**\n * The `SVGIcon` component is used to render inline SVG icons or SVG icons in a\n * sprite map as an icon.\n */\nexport var SVGIcon = forwardRef(function SVGIcon(_a, ref) {\n    var _b = _a[\"aria-hidden\"], ariaHidden = _b === void 0 ? true : _b, _c = _a.focusable, focusable = _c === void 0 ? \"false\" : _c, _d = _a.xmlns, xmlns = _d === void 0 ? \"http://www.w3.org/2000/svg\" : _d, _e = _a.viewBox, viewBox = _e === void 0 ? \"0 0 24 24\" : _e, _f = _a.dense, dense = _f === void 0 ? false : _f, className = _a.className, use = _a.use, propChildren = _a.children, props = __rest(_a, [\"aria-hidden\", \"focusable\", \"xmlns\", \"viewBox\", \"dense\", \"className\", \"use\", \"children\"]);\n    var children = propChildren;\n    if (!children && use) {\n        children = React.createElement(\"use\", { xlinkHref: use });\n    }\n    return (React.createElement(\"svg\", __assign({}, props, { \"aria-hidden\": ariaHidden, ref: ref, className: cn(block({ svg: true, dense: dense }), className), focusable: focusable, xmlns: xmlns, viewBox: viewBox }), children));\n});\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        SVGIcon.propTypes = {\n            className: PropTypes.string,\n            role: PropTypes.string,\n            \"aria-hidden\": PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n            \"aria-labelledby\": PropTypes.string,\n            focusable: PropTypes.oneOf([\"true\", \"false\"]),\n            viewBox: PropTypes.string,\n            xmlns: PropTypes.string,\n            use: PropTypes.string,\n            dense: PropTypes.bool,\n            children: PropTypes.node,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=SVGIcon.js.map"]},"metadata":{},"sourceType":"module"}