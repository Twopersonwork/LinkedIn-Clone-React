{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-icon\");\n/**\n * The `FontIcon` component is used for rendering a font-icon library's icon.\n * The default is to use the `material-icons` library, but others can be used as\n * well.\n *\n * If you are using another font icon library that does not always create icons\n * with a perfect 1:1 scale (such as font awesome), it is recommended to use the\n * `forceSize` and `forceFontSize` props to fix the sizing issues.\n */\n\nexport var FontIcon = forwardRef(function FontIcon(_a, ref) {\n  var className = _a.className,\n      children = _a.children,\n      _b = _a[\"aria-hidden\"],\n      ariaHidden = _b === void 0 ? true : _b,\n      _c = _a.dense,\n      dense = _c === void 0 ? false : _c,\n      _d = _a.iconClassName,\n      iconClassName = _d === void 0 ? \"material-icons\" : _d,\n      _e = _a.forceSize,\n      forceSize = _e === void 0 ? false : _e,\n      _f = _a.forceFontSize,\n      forceFontSize = _f === void 0 ? false : _f,\n      props = __rest(_a, [\"className\", \"children\", \"aria-hidden\", \"dense\", \"iconClassName\", \"forceSize\", \"forceFontSize\"]);\n\n  return React.createElement(\"i\", __assign({}, props, {\n    \"aria-hidden\": ariaHidden,\n    ref: ref,\n    className: cn(block({\n      font: true,\n      dense: dense,\n      \"forced-font\": forceFontSize,\n      \"forced-size\": forceSize\n    }), iconClassName, className)\n  }), children);\n});\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    FontIcon.propTypes = {\n      \"aria-hidden\": PropTypes.oneOfType([PropTypes.oneOf([\"true\", \"false\"]), PropTypes.bool]),\n      className: PropTypes.string,\n      iconClassName: PropTypes.string,\n      dense: PropTypes.bool,\n      forceSize: PropTypes.bool,\n      forceFontSize: PropTypes.bool,\n      children: PropTypes.node\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../src/FontIcon.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,UAAhB,QAA6D,OAA7D;AACA,OAAO,EAAP,MAAe,YAAf;AACA,SAAS,GAAT,QAAoB,iBAApB;AAiCA,IAAM,KAAK,GAAG,GAAG,CAAC,UAAD,CAAjB;AAEA;;;;;;;;AAQG;;AACH,OAAO,IAAM,QAAQ,GAAG,UAAU,CAChC,SAAS,QAAT,CACE,EADF,EAWE,GAXF,EAWK;AATD,MAAA,SAAS,GAAA,EAAA,CAAA,SAAT;AAAA,MACA,QAAQ,GAAA,EAAA,CAAA,QADR;AAAA,MAEA,EAAA,GAAA,EAAA,CAAA,aAAA,CAFA;AAAA,MAEe,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO,EAFhC;AAAA,MAGA,EAAA,GAAA,EAAA,CAAA,KAHA;AAAA,MAGA,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAHb;AAAA,MAIA,EAAA,GAAA,EAAA,CAAA,aAJA;AAAA,MAIA,aAAa,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,gBAAH,GAAmB,EAJhC;AAAA,MAKA,EAAA,GAAA,EAAA,CAAA,SALA;AAAA,MAKA,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EALjB;AAAA,MAMA,EAAA,GAAA,EAAA,CAAA,aANA;AAAA,MAMA,aAAa,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EANrB;AAAA,MAOG,KAAK,GAAA,MAAA,CAAA,EAAA,EARV,CAAA,WAAA,EAAA,UAAA,EAAA,aAAA,EAAA,OAAA,EAAA,eAAA,EAAA,WAAA,EAAA,eAAA,CAQU,CAPR;;AAWF,SACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA,EAAA,EACM,KADN,EACW;AAAA,mBACI,UADJ;AAET,IAAA,GAAG,EAAE,GAFI;AAGT,IAAA,SAAS,EAAE,EAAE,CACX,KAAK,CAAC;AACJ,MAAA,IAAI,EAAE,IADF;AAEJ,MAAA,KAAK,EAAA,KAFD;AAGJ,qBAAe,aAHX;AAIJ,qBAAe;AAJX,KAAD,CADM,EAOX,aAPW,EAQX,SARW;AAHJ,GADX,CAAA,EAeG,QAfH,CADF;AAmBD,CAjC+B,CAA3B;AAoCP;;AACA,IAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI;AACF,QAAM,SAAS,GAAG,OAAO,CAAC,YAAD,CAAzB;;AAEA,IAAA,QAAQ,CAAC,SAAT,GAAqB;AACnB,qBAAe,SAAS,CAAC,SAAV,CAAoB,CACjC,SAAS,CAAC,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CADiC,EAEjC,SAAS,CAAC,IAFuB,CAApB,CADI;AAKnB,MAAA,SAAS,EAAE,SAAS,CAAC,MALF;AAMnB,MAAA,aAAa,EAAE,SAAS,CAAC,MANN;AAOnB,MAAA,KAAK,EAAE,SAAS,CAAC,IAPE;AAQnB,MAAA,SAAS,EAAE,SAAS,CAAC,IARF;AASnB,MAAA,aAAa,EAAE,SAAS,CAAC,IATN;AAUnB,MAAA,QAAQ,EAAE,SAAS,CAAC;AAVD,KAArB;AAYD,GAfD,CAeE,OAAO,CAAP,EAAU,CAAE;AACf","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-icon\");\n/**\n * The `FontIcon` component is used for rendering a font-icon library's icon.\n * The default is to use the `material-icons` library, but others can be used as\n * well.\n *\n * If you are using another font icon library that does not always create icons\n * with a perfect 1:1 scale (such as font awesome), it is recommended to use the\n * `forceSize` and `forceFontSize` props to fix the sizing issues.\n */\nexport var FontIcon = forwardRef(function FontIcon(_a, ref) {\n    var className = _a.className, children = _a.children, _b = _a[\"aria-hidden\"], ariaHidden = _b === void 0 ? true : _b, _c = _a.dense, dense = _c === void 0 ? false : _c, _d = _a.iconClassName, iconClassName = _d === void 0 ? \"material-icons\" : _d, _e = _a.forceSize, forceSize = _e === void 0 ? false : _e, _f = _a.forceFontSize, forceFontSize = _f === void 0 ? false : _f, props = __rest(_a, [\"className\", \"children\", \"aria-hidden\", \"dense\", \"iconClassName\", \"forceSize\", \"forceFontSize\"]);\n    return (React.createElement(\"i\", __assign({}, props, { \"aria-hidden\": ariaHidden, ref: ref, className: cn(block({\n            font: true,\n            dense: dense,\n            \"forced-font\": forceFontSize,\n            \"forced-size\": forceSize,\n        }), iconClassName, className) }), children));\n});\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        FontIcon.propTypes = {\n            \"aria-hidden\": PropTypes.oneOfType([\n                PropTypes.oneOf([\"true\", \"false\"]),\n                PropTypes.bool,\n            ]),\n            className: PropTypes.string,\n            iconClassName: PropTypes.string,\n            dense: PropTypes.bool,\n            forceSize: PropTypes.bool,\n            forceFontSize: PropTypes.bool,\n            children: PropTypes.node,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=FontIcon.js.map"]},"metadata":{},"sourceType":"module"}