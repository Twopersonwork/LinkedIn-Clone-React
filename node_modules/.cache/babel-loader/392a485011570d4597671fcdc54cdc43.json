{"ast":null,"code":"/**\n * This is a simple wrapper to get the view width or view hieght.\n *\n * @param direction - Either the \"height\" or \"width\" string to get that\n * dimension\n * @returns the view width or view height.\n */\nexport function getViewportSize(direction) {\n  var de = document.documentElement || {\n    clientHeight: 0,\n    clientWidth: 0\n  };\n\n  if (direction === \"width\") {\n    return window.innerWidth || de.clientWidth;\n  }\n\n  return window.innerHeight || de.clientHeight;\n}","map":{"version":3,"sources":["../../src/positioning/getViewportSize.ts"],"names":[],"mappings":"AAAA;;;;;;AAMG;AACH,OAAM,SAAU,eAAV,CAA0B,SAA1B,EAAuD;AAC3D,MAAM,EAAE,GAAG,QAAQ,CAAC,eAAT,IAA4B;AAAE,IAAA,YAAY,EAAE,CAAhB;AAAmB,IAAA,WAAW,EAAE;AAAhC,GAAvC;;AAEA,MAAI,SAAS,KAAK,OAAlB,EAA2B;AACzB,WAAO,MAAM,CAAC,UAAP,IAAqB,EAAE,CAAC,WAA/B;AACD;;AAED,SAAO,MAAM,CAAC,WAAP,IAAsB,EAAE,CAAC,YAAhC;AACD","sourceRoot":"","sourcesContent":["/**\n * This is a simple wrapper to get the view width or view hieght.\n *\n * @param direction - Either the \"height\" or \"width\" string to get that\n * dimension\n * @returns the view width or view height.\n */\nexport function getViewportSize(direction) {\n    var de = document.documentElement || { clientHeight: 0, clientWidth: 0 };\n    if (direction === \"width\") {\n        return window.innerWidth || de.clientWidth;\n    }\n    return window.innerHeight || de.clientHeight;\n}\n//# sourceMappingURL=getViewportSize.js.map"]},"metadata":{},"sourceType":"module"}