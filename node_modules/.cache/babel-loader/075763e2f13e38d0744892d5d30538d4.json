{"ast":null,"code":"var removeWhitespace = function (s) {\n  return s.replace(/\\s/g, \"\");\n};\n/**\n * The default function used to extract the text from nodes. This will just\n * return the textContent by default unless the node has a react-md FontIcon as\n * a child. If there is a FontIcon child, the node will be cloned without the\n * FontIcon to return the textContent instead. This is because the FontIcon's\n * text content would also be returned from the node's text content.\n *\n * @param stringOrElement - Either a string or an element element to convert\n * @param fontIconQuerySelector - A string to use for finding font icons in the\n * HTML Element. When this is set to the empty string, the element will not be\n * checked for font icons which _might_ be a slight performance boost if you are\n * guarenteed to not use font icons\n */\n\n\nexport function extractTextContent(stringOrElement, fontIconQuerySelector) {\n  if (fontIconQuerySelector === void 0) {\n    fontIconQuerySelector = \".rmd-icon--font\";\n  }\n\n  if (typeof stringOrElement === \"string\") {\n    return removeWhitespace(stringOrElement);\n  }\n\n  if (fontIconQuerySelector) {\n    var fontIcons = Array.from(stringOrElement.querySelectorAll(fontIconQuerySelector));\n\n    if (fontIcons.some(function (i) {\n      return !!i.textContent;\n    })) {\n      var cloned = stringOrElement.cloneNode(true);\n      var icon = void 0;\n\n      do {\n        icon = cloned.querySelector(fontIconQuerySelector);\n\n        if (icon && icon.parentNode) {\n          icon.parentNode.removeChild(icon);\n        }\n      } while (icon);\n\n      return removeWhitespace(cloned.textContent || \"\");\n    }\n  }\n\n  return removeWhitespace(stringOrElement.textContent || \"\");\n}","map":{"version":3,"sources":["../../src/wia-aria/extractTextContent.ts"],"names":[],"mappings":"AAAA,IAAM,gBAAgB,GAAG,UAAC,CAAD,EAAU;AAAa,SAAA,CAAC,CAAC,OAAF,CAAU,KAAV,EAAA,EAAA,CAAA;AAAoB,CAApE;AAEA;;;;;;;;;;;;AAYG;;;AACH,OAAM,SAAU,kBAAV,CACJ,eADI,EAEJ,qBAFI,EAEqC;AAAzC,MAAA,qBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,qBAAA,GAAA,iBAAA;AAAyC;;AAEzC,MAAI,OAAO,eAAP,KAA2B,QAA/B,EAAyC;AACvC,WAAO,gBAAgB,CAAC,eAAD,CAAvB;AACD;;AAED,MAAI,qBAAJ,EAA2B;AACzB,QAAM,SAAS,GAAG,KAAK,CAAC,IAAN,CAChB,eAAe,CAAC,gBAAhB,CAAiC,qBAAjC,CADgB,CAAlB;;AAIA,QAAI,SAAS,CAAC,IAAV,CAAe,UAAC,CAAD,EAAE;AAAK,aAAA,CAAC,CAAC,CAAC,CAAH,WAAA;AAAe,KAArC,CAAJ,EAA4C;AAC1C,UAAM,MAAM,GAAG,eAAe,CAAC,SAAhB,CAA0B,IAA1B,CAAf;AACA,UAAI,IAAI,GAAA,KAAA,CAAR;;AACA,SAAG;AACD,QAAA,IAAI,GAAG,MAAM,CAAC,aAAP,CAAqB,qBAArB,CAAP;;AACA,YAAI,IAAI,IAAI,IAAI,CAAC,UAAjB,EAA6B;AAC3B,UAAA,IAAI,CAAC,UAAL,CAAgB,WAAhB,CAA4B,IAA5B;AACD;AACF,OALD,QAKS,IALT;;AAOA,aAAO,gBAAgB,CAAC,MAAM,CAAC,WAAP,IAAsB,EAAvB,CAAvB;AACD;AACF;;AAED,SAAO,gBAAgB,CAAC,eAAe,CAAC,WAAhB,IAA+B,EAAhC,CAAvB;AACD","sourceRoot":"","sourcesContent":["var removeWhitespace = function (s) { return s.replace(/\\s/g, \"\"); };\n/**\n * The default function used to extract the text from nodes. This will just\n * return the textContent by default unless the node has a react-md FontIcon as\n * a child. If there is a FontIcon child, the node will be cloned without the\n * FontIcon to return the textContent instead. This is because the FontIcon's\n * text content would also be returned from the node's text content.\n *\n * @param stringOrElement - Either a string or an element element to convert\n * @param fontIconQuerySelector - A string to use for finding font icons in the\n * HTML Element. When this is set to the empty string, the element will not be\n * checked for font icons which _might_ be a slight performance boost if you are\n * guarenteed to not use font icons\n */\nexport function extractTextContent(stringOrElement, fontIconQuerySelector) {\n    if (fontIconQuerySelector === void 0) { fontIconQuerySelector = \".rmd-icon--font\"; }\n    if (typeof stringOrElement === \"string\") {\n        return removeWhitespace(stringOrElement);\n    }\n    if (fontIconQuerySelector) {\n        var fontIcons = Array.from(stringOrElement.querySelectorAll(fontIconQuerySelector));\n        if (fontIcons.some(function (i) { return !!i.textContent; })) {\n            var cloned = stringOrElement.cloneNode(true);\n            var icon = void 0;\n            do {\n                icon = cloned.querySelector(fontIconQuerySelector);\n                if (icon && icon.parentNode) {\n                    icon.parentNode.removeChild(icon);\n                }\n            } while (icon);\n            return removeWhitespace(cloned.textContent || \"\");\n        }\n    }\n    return removeWhitespace(stringOrElement.textContent || \"\");\n}\n//# sourceMappingURL=extractTextContent.js.map"]},"metadata":{},"sourceType":"module"}