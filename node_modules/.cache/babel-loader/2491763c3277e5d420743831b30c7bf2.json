{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.manuallyIncrementPromiseCounter = exports.manuallyDecrementPromiseCounter = exports.manuallyResetPromiseCounter = exports.trackPromise = exports.getCounter = exports.promiseCounterUpdateEventId = exports.emitter = void 0;\n\nvar _tinyEmmiter = require(\"./tinyEmmiter\");\n\nvar _constants = require(\"./constants\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar emitter = new _tinyEmmiter.Emitter();\nexports.emitter = emitter;\nvar promiseCounterUpdateEventId = \"promise-counter-update\";\nexports.promiseCounterUpdateEventId = promiseCounterUpdateEventId;\n\nvar counter = _defineProperty({}, _constants.defaultArea, 0);\n\nvar getCounter = function getCounter(area) {\n  return counter[area];\n};\n\nexports.getCounter = getCounter;\n\nvar trackPromise = function trackPromise(promise, area) {\n  area = area || _constants.defaultArea;\n  incrementPromiseCounter(area);\n\n  var onResolveHandler = function onResolveHandler() {\n    return decrementPromiseCounter(area);\n  };\n\n  promise.then(onResolveHandler, onResolveHandler);\n  return promise;\n};\n\nexports.trackPromise = trackPromise;\n\nvar incrementPromiseCounter = function incrementPromiseCounter(area) {\n  incrementCounter(area);\n  var promiseInProgress = anyPromiseInProgress(area);\n  emitter.emit(promiseCounterUpdateEventId, promiseInProgress, area);\n};\n\nvar incrementCounter = function incrementCounter(area) {\n  if (Boolean(counter[area])) {\n    counter[area]++;\n  } else {\n    counter[area] = 1;\n  }\n};\n\nvar anyPromiseInProgress = function anyPromiseInProgress(area) {\n  return counter[area] > 0;\n};\n\nvar decrementPromiseCounter = function decrementPromiseCounter(area) {\n  counter[area] > 0 && decrementCounter(area);\n  var promiseInProgress = anyPromiseInProgress(area);\n  emitter.emit(promiseCounterUpdateEventId, promiseInProgress, area);\n};\n\nvar decrementCounter = function decrementCounter(area) {\n  counter[area]--;\n};\n\nvar manuallyResetPromiseCounter = function manuallyResetPromiseCounter(area) {\n  area = area || _constants.defaultArea;\n  counter[area] = 0;\n  emitter.emit(promiseCounterUpdateEventId, false, area);\n};\n\nexports.manuallyResetPromiseCounter = manuallyResetPromiseCounter;\n\nvar manuallyDecrementPromiseCounter = function manuallyDecrementPromiseCounter(area) {\n  area = area || _constants.defaultArea;\n  decrementPromiseCounter(area);\n};\n\nexports.manuallyDecrementPromiseCounter = manuallyDecrementPromiseCounter;\n\nvar manuallyIncrementPromiseCounter = function manuallyIncrementPromiseCounter(area) {\n  area = area || _constants.defaultArea;\n  incrementPromiseCounter(area);\n}; // TODO: Enhancement we could catch here errors and throw an Event in case there's an HTTP Error\n// then the consumer of this event can be listening and decide what to to in case of error\n\n\nexports.manuallyIncrementPromiseCounter = manuallyIncrementPromiseCounter;","map":{"version":3,"sources":["/home/prachi/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/node_modules/react-promise-tracker/lib/trackPromise.js"],"names":["Object","defineProperty","exports","value","manuallyIncrementPromiseCounter","manuallyDecrementPromiseCounter","manuallyResetPromiseCounter","trackPromise","getCounter","promiseCounterUpdateEventId","emitter","_tinyEmmiter","require","_constants","_defineProperty","obj","key","enumerable","configurable","writable","Emitter","counter","defaultArea","area","promise","incrementPromiseCounter","onResolveHandler","decrementPromiseCounter","then","incrementCounter","promiseInProgress","anyPromiseInProgress","emit","Boolean","decrementCounter"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.manuallyIncrementPromiseCounter = exports.manuallyDecrementPromiseCounter = exports.manuallyResetPromiseCounter = exports.trackPromise = exports.getCounter = exports.promiseCounterUpdateEventId = exports.emitter = void 0;\n\nvar _tinyEmmiter = require(\"./tinyEmmiter\");\n\nvar _constants = require(\"./constants\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar emitter = new _tinyEmmiter.Emitter();\nexports.emitter = emitter;\nvar promiseCounterUpdateEventId = \"promise-counter-update\";\nexports.promiseCounterUpdateEventId = promiseCounterUpdateEventId;\n\nvar counter = _defineProperty({}, _constants.defaultArea, 0);\n\nvar getCounter = function getCounter(area) {\n  return counter[area];\n};\n\nexports.getCounter = getCounter;\n\nvar trackPromise = function trackPromise(promise, area) {\n  area = area || _constants.defaultArea;\n  incrementPromiseCounter(area);\n\n  var onResolveHandler = function onResolveHandler() {\n    return decrementPromiseCounter(area);\n  };\n\n  promise.then(onResolveHandler, onResolveHandler);\n  return promise;\n};\n\nexports.trackPromise = trackPromise;\n\nvar incrementPromiseCounter = function incrementPromiseCounter(area) {\n  incrementCounter(area);\n  var promiseInProgress = anyPromiseInProgress(area);\n  emitter.emit(promiseCounterUpdateEventId, promiseInProgress, area);\n};\n\nvar incrementCounter = function incrementCounter(area) {\n  if (Boolean(counter[area])) {\n    counter[area]++;\n  } else {\n    counter[area] = 1;\n  }\n};\n\nvar anyPromiseInProgress = function anyPromiseInProgress(area) {\n  return counter[area] > 0;\n};\n\nvar decrementPromiseCounter = function decrementPromiseCounter(area) {\n  counter[area] > 0 && decrementCounter(area);\n  var promiseInProgress = anyPromiseInProgress(area);\n  emitter.emit(promiseCounterUpdateEventId, promiseInProgress, area);\n};\n\nvar decrementCounter = function decrementCounter(area) {\n  counter[area]--;\n};\n\nvar manuallyResetPromiseCounter = function manuallyResetPromiseCounter(area) {\n  area = area || _constants.defaultArea;\n  counter[area] = 0;\n  emitter.emit(promiseCounterUpdateEventId, false, area);\n};\n\nexports.manuallyResetPromiseCounter = manuallyResetPromiseCounter;\n\nvar manuallyDecrementPromiseCounter = function manuallyDecrementPromiseCounter(area) {\n  area = area || _constants.defaultArea;\n  decrementPromiseCounter(area);\n};\n\nexports.manuallyDecrementPromiseCounter = manuallyDecrementPromiseCounter;\n\nvar manuallyIncrementPromiseCounter = function manuallyIncrementPromiseCounter(area) {\n  area = area || _constants.defaultArea;\n  incrementPromiseCounter(area);\n}; // TODO: Enhancement we could catch here errors and throw an Event in case there's an HTTP Error\n// then the consumer of this event can be listening and decide what to to in case of error\n\n\nexports.manuallyIncrementPromiseCounter = manuallyIncrementPromiseCounter;"]},"metadata":{},"sourceType":"script"}