{"ast":null,"code":"import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\n\nvar getObservationIndex = function (observationTargets, target) {\n  for (var i = 0; i < observationTargets.length; i += 1) {\n    if (observationTargets[i].target === target) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nvar ResizeObserverController = function () {\n  function ResizeObserverController() {}\n\n  ResizeObserverController.connect = function (resizeObserver, callback) {\n    var detail = new ResizeObserverDetail(resizeObserver, callback);\n    observerMap.set(resizeObserver, detail);\n  };\n\n  ResizeObserverController.observe = function (resizeObserver, target, options) {\n    var detail = observerMap.get(resizeObserver);\n    var firstObservation = detail.observationTargets.length === 0;\n\n    if (getObservationIndex(detail.observationTargets, target) < 0) {\n      firstObservation && resizeObservers.push(detail);\n      detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n      updateCount(1);\n      scheduler.schedule();\n    }\n  };\n\n  ResizeObserverController.unobserve = function (resizeObserver, target) {\n    var detail = observerMap.get(resizeObserver);\n    var index = getObservationIndex(detail.observationTargets, target);\n    var lastObservation = detail.observationTargets.length === 1;\n\n    if (index >= 0) {\n      lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n      detail.observationTargets.splice(index, 1);\n      updateCount(-1);\n    }\n  };\n\n  ResizeObserverController.disconnect = function (resizeObserver) {\n    var _this = this;\n\n    var detail = observerMap.get(resizeObserver);\n    detail.observationTargets.slice().forEach(function (ot) {\n      return _this.unobserve(resizeObserver, ot.target);\n    });\n    detail.activeTargets.splice(0, detail.activeTargets.length);\n  };\n\n  return ResizeObserverController;\n}();\n\nexport { ResizeObserverController };","map":{"version":3,"sources":["/home/malav/workspace/LinkedIn-Clone/LinkedIn-Clone-React/linkedin_react/node_modules/@juggle/resize-observer/lib/ResizeObserverController.js"],"names":["scheduler","updateCount","ResizeObservation","ResizeObserverDetail","resizeObservers","observerMap","WeakMap","getObservationIndex","observationTargets","target","i","length","ResizeObserverController","connect","resizeObserver","callback","detail","set","observe","options","get","firstObservation","push","box","schedule","unobserve","index","lastObservation","splice","indexOf","disconnect","_this","slice","forEach","ot","activeTargets"],"mappings":"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","sourcesContent":["import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n"]},"metadata":{},"sourceType":"module"}