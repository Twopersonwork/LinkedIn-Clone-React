{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Children, forwardRef } from \"react\";\nimport { GridListCell } from \"./GridListCell\";\nimport { DEFAULT_GRID_LIST_MAX_CELL_SIZE, DEFAULT_GRID_LIST_PADDING, GridListSizeProvider, useGridList } from \"./useGridList\";\n\nvar isRenderFunction = function (children) {\n  return typeof children === \"function\";\n};\n/**\n * The `GridList` component is a different way to render a list of data where\n * the number of columns is dynamic and based on the max-width for each cell.\n * Instead of setting a percentage width to each cell based on the number of\n * columns, this will dynamically add columns to fill up the remaining space and\n * have each cell grow up to a set max-width. A really good use-case for this is\n * displaying a list of images or thumbnails and allowing the user to see a full\n * screen preview once selected/clicked.\n */\n\n\nexport var GridList = forwardRef(function GridList(_a, forwardedRef) {\n  var style = _a.style,\n      className = _a.className,\n      children = _a.children,\n      _b = _a.clone,\n      clone = _b === void 0 ? false : _b,\n      _c = _a.wrapOnly,\n      wrapOnly = _c === void 0 ? false : _c,\n      cellMargin = _a.cellMargin,\n      defaultSize = _a.defaultSize,\n      _d = _a.maxCellSize,\n      maxCellSize = _d === void 0 ? DEFAULT_GRID_LIST_MAX_CELL_SIZE : _d,\n      _e = _a.containerPadding,\n      containerPadding = _e === void 0 ? DEFAULT_GRID_LIST_PADDING : _e,\n      _f = _a.disableHeightObserver,\n      disableHeightObserver = _f === void 0 ? false : _f,\n      _g = _a.disableWidthObserver,\n      disableWidthObserver = _g === void 0 ? false : _g,\n      props = __rest(_a, [\"style\", \"className\", \"children\", \"clone\", \"wrapOnly\", \"cellMargin\", \"defaultSize\", \"maxCellSize\", \"containerPadding\", \"disableHeightObserver\", \"disableWidthObserver\"]);\n\n  var _h = useGridList({\n    ref: forwardedRef,\n    style: style,\n    className: className,\n    cellMargin: cellMargin,\n    defaultSize: defaultSize,\n    maxCellSize: maxCellSize,\n    containerPadding: containerPadding,\n    disableHeight: disableHeightObserver,\n    disableWidth: disableWidthObserver\n  }),\n      gridListProps = _h[0],\n      gridSize = _h[1];\n\n  var content = null;\n\n  if (isRenderFunction(children)) {\n    content = children(gridSize);\n  } else if (clone || wrapOnly) {\n    content = Children.map(children, function (child) {\n      return child && React.createElement(GridListCell, {\n        clone: clone\n      }, child);\n    });\n  } else {\n    content = children;\n  }\n\n  return React.createElement(GridListSizeProvider, {\n    value: gridSize\n  }, React.createElement(\"div\", __assign({}, props, gridListProps), content));\n});\n/* istanbul ignore next */\n\nif (process.env.NODE_ENV !== \"production\") {\n  try {\n    var PropTypes = require(\"prop-types\");\n\n    GridList.propTypes = {\n      style: PropTypes.object,\n      clone: PropTypes.bool,\n      wrapOnly: PropTypes.bool,\n      className: PropTypes.string,\n      children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n      cellMargin: PropTypes.string,\n      maxCellSize: PropTypes.number,\n      defaultSize: PropTypes.oneOfType([PropTypes.shape({\n        columns: PropTypes.number.isRequired,\n        cellWidth: PropTypes.number.isRequired\n      }), PropTypes.func]),\n      containerPadding: PropTypes.number,\n      disableHeightObserver: PropTypes.bool,\n      disableWidthObserver: PropTypes.bool\n    };\n  } catch (e) {}\n}","map":{"version":3,"sources":["../../src/layout/GridList.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { Children, forwardRef } from \"react\";\nimport { GridListCell } from \"./GridListCell\";\nimport { DEFAULT_GRID_LIST_MAX_CELL_SIZE, DEFAULT_GRID_LIST_PADDING, GridListSizeProvider, useGridList, } from \"./useGridList\";\nvar isRenderFunction = function (children) { return typeof children === \"function\"; };\n/**\n * The `GridList` component is a different way to render a list of data where\n * the number of columns is dynamic and based on the max-width for each cell.\n * Instead of setting a percentage width to each cell based on the number of\n * columns, this will dynamically add columns to fill up the remaining space and\n * have each cell grow up to a set max-width. A really good use-case for this is\n * displaying a list of images or thumbnails and allowing the user to see a full\n * screen preview once selected/clicked.\n */\nexport var GridList = forwardRef(function GridList(_a, forwardedRef) {\n    var style = _a.style, className = _a.className, children = _a.children, _b = _a.clone, clone = _b === void 0 ? false : _b, _c = _a.wrapOnly, wrapOnly = _c === void 0 ? false : _c, cellMargin = _a.cellMargin, defaultSize = _a.defaultSize, _d = _a.maxCellSize, maxCellSize = _d === void 0 ? DEFAULT_GRID_LIST_MAX_CELL_SIZE : _d, _e = _a.containerPadding, containerPadding = _e === void 0 ? DEFAULT_GRID_LIST_PADDING : _e, _f = _a.disableHeightObserver, disableHeightObserver = _f === void 0 ? false : _f, _g = _a.disableWidthObserver, disableWidthObserver = _g === void 0 ? false : _g, props = __rest(_a, [\"style\", \"className\", \"children\", \"clone\", \"wrapOnly\", \"cellMargin\", \"defaultSize\", \"maxCellSize\", \"containerPadding\", \"disableHeightObserver\", \"disableWidthObserver\"]);\n    var _h = useGridList({\n        ref: forwardedRef,\n        style: style,\n        className: className,\n        cellMargin: cellMargin,\n        defaultSize: defaultSize,\n        maxCellSize: maxCellSize,\n        containerPadding: containerPadding,\n        disableHeight: disableHeightObserver,\n        disableWidth: disableWidthObserver,\n    }), gridListProps = _h[0], gridSize = _h[1];\n    var content = null;\n    if (isRenderFunction(children)) {\n        content = children(gridSize);\n    }\n    else if (clone || wrapOnly) {\n        content = Children.map(children, function (child) { return child && React.createElement(GridListCell, { clone: clone }, child); });\n    }\n    else {\n        content = children;\n    }\n    return (React.createElement(GridListSizeProvider, { value: gridSize },\n        React.createElement(\"div\", __assign({}, props, gridListProps), content)));\n});\n/* istanbul ignore next */\nif (process.env.NODE_ENV !== \"production\") {\n    try {\n        var PropTypes = require(\"prop-types\");\n        GridList.propTypes = {\n            style: PropTypes.object,\n            clone: PropTypes.bool,\n            wrapOnly: PropTypes.bool,\n            className: PropTypes.string,\n            children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n            cellMargin: PropTypes.string,\n            maxCellSize: PropTypes.number,\n            defaultSize: PropTypes.oneOfType([\n                PropTypes.shape({\n                    columns: PropTypes.number.isRequired,\n                    cellWidth: PropTypes.number.isRequired,\n                }),\n                PropTypes.func,\n            ]),\n            containerPadding: PropTypes.number,\n            disableHeightObserver: PropTypes.bool,\n            disableWidthObserver: PropTypes.bool,\n        };\n    }\n    catch (e) { }\n}\n//# sourceMappingURL=GridList.js.map"]},"metadata":{},"sourceType":"module"}